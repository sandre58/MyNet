<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:collections="using:Avalonia.Collections"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <DataTemplate x:Key="MyNet.DataTemplate.DataGrid.AreAllSelected">
        <CheckBox HorizontalAlignment="Center"
                  Classes="Circle"
                  IsChecked="{Binding $parent[DataGrid].(my:DataGridAssist.AreAllSelected)}"
                  Theme="{StaticResource MyNet.Theme.ToggleButton.CheckBox}"
                  ToolTip.Tip="{my:Resource SelectAll}" />
    </DataTemplate>

    <ControlTheme x:Key="MyNet.Theme.TextBlock.Embedded.DataGrid" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Margin" Value="{Binding $parent[DataGrid].(my:ItemsAssist.Padding)}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </ControlTheme>
    <ControlTheme x:Key="DataGridCellTextBlockTheme" TargetType="TextBlock" BasedOn="{StaticResource MyNet.Theme.TextBlock.Embedded.DataGrid}" />

    <ControlTheme x:Key="MyNet.Theme.ContentControl.Embedded.DataGrid" TargetType="ContentControl" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="Margin" Value="{Binding $parent[DataGrid].(my:ItemsAssist.Padding)}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.CheckBox.Embedded.DataGrid" TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
        <Setter Property="my:ClassesAssist.Classes" Value="Alternate Inverse no-disablable" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource MyNet.Theme.DataValidationErrors.Glyph}" />
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.NumericUpDown.Embedded.DataGrid" TargetType="NumericUpDown" BasedOn="{StaticResource {x:Type NumericUpDown}}">
        <Setter Property="my:ClassesAssist.Classes" Value="Inverse" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:IconAssist.IconTemplate" Value="{StaticResource MyNet.DataTemplate.PathIcon}" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource MyNet.Theme.DataValidationErrors.Glyph}" />
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.TextBox.Embedded.DataGrid" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="my:ClassesAssist.Classes" Value="Inverse" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:IconAssist.IconTemplate" Value="{StaticResource MyNet.DataTemplate.PathIcon}" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource MyNet.Theme.DataValidationErrors.Glyph}" />
    </ControlTheme>
    <ControlTheme x:Key="DataGridCellTextBoxTheme" TargetType="TextBox" BasedOn="{StaticResource MyNet.Theme.TextBox.Embedded.DataGrid}" />

    <ControlTheme x:Key="MyNet.Theme.ComboBox.Embedded.DataGrid" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="my:ClassesAssist.Classes" Value="Inverse" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:IconAssist.IconTemplate" Value="{StaticResource MyNet.DataTemplate.PathIcon}" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource MyNet.Theme.DataValidationErrors.Glyph}" />
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.DatePicker.Embedded.DataGrid" TargetType="DatePicker" BasedOn="{StaticResource {x:Type DatePicker}}">
        <Setter Property="my:ClassesAssist.Classes" Value="Inverse" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:IconAssist.IconTemplate" Value="{StaticResource MyNet.DataTemplate.PathIcon}" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource MyNet.Theme.DataValidationErrors.Glyph}" />
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.CalendarDatePicker.Embedded.DataGrid" TargetType="my:CalendarDatePicker" BasedOn="{StaticResource {x:Type my:CalendarDatePicker}}">
        <Setter Property="my:ClassesAssist.Classes" Value="Inverse" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:IconAssist.IconTemplate" Value="{StaticResource MyNet.DataTemplate.PathIcon}" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource MyNet.Theme.DataValidationErrors.Glyph}" />
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.TimePicker.Embedded.DataGrid" TargetType="my:TimePicker" BasedOn="{StaticResource {x:Type my:TimePicker}}">
        <Setter Property="my:ClassesAssist.Classes" Value="Inverse" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:IconAssist.IconTemplate" Value="{StaticResource MyNet.DataTemplate.PathIcon}" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource MyNet.Theme.DataValidationErrors.Glyph}" />
    </ControlTheme>

    <!-- Cell -->
    <ControlTheme x:Key="{x:Type DataGridCell}" TargetType="DataGridCell">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{Binding $parent[DataGrid].(my:ItemsAssist.Background)}" />
        <Setter Property="BorderBrush" Value="{Binding $parent[DataGrid].(my:ItemsAssist.BorderBrush)}" />
        <Setter Property="BorderThickness" Value="{Binding $parent[DataGrid].(my:ItemsAssist.BorderThickness)}" />
        <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $parent[DataGrid].(my:ItemsAssist.ActiveBackground)}" />
        <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{Binding $parent[DataGrid].(my:ItemsAssist.ActiveBorderBrush)}" />
        <Setter Property="my:ThemeAssist.ActiveForeground" Value="{Binding $parent[DataGrid].(my:ItemsAssist.ActiveForeground)}" />
        <Setter Property="CornerRadius" Value="{Binding $parent[DataGrid].(my:ItemsAssist.CornerRadius)}" />
        <Setter Property="my:DataGridAssist.ShowCellSelection" Value="{Binding $parent[DataGrid].(my:DataGridAssist.ShowCellSelection)}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <Border Name="PART_MainBorder"
                            my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                    <Border Name="PART_ActiveBorder"
                            Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Grid Name="PART_CellRoot" ColumnDefinitions="*,Auto">

                        <ContentPresenter Grid.Column="0"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Foreground="{TemplateBinding Foreground}" />

                        <Rectangle Name="PART_RightGridLine"
                                   Grid.Column="1"
                                   Width="1"
                                   VerticalAlignment="Stretch"
                                   Fill="{DynamicResource MyNet.Brush.Container.Border}" />
                    </Grid>
                </Panel>
            </ControlTemplate>
        </Setter>


        <Style Selector="^[(my|DataGridAssist.ShowCellSelection)=True]">

            <Style Selector="^:current">
                <Style Selector="^ /template/ Border#PART_ActiveBorder">
                    <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Overlay}" />
                </Style>
            </Style>
            <Style Selector="^:focus">
                <Style Selector="^ /template/ Border#PART_ActiveBorder">
                    <Setter Property="Opacity" Value="1" />
                </Style>
            </Style>
        </Style>

        <Style Selector="^:invalid">
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
        </Style>
    </ControlTheme>

    <!-- Headers -->
    <ControlTheme x:Key="{x:Type DataGridColumnHeader}" TargetType="DataGridColumnHeader">
        <Setter Property="BorderBrush" Value="{Binding $parent[DataGrid].(my:HeaderAssist.BorderBrush)}" />
        <Setter Property="SeparatorBrush" Value="{Binding $parent[DataGrid].(my:HeaderAssist.BorderBrush)}" />
        <Setter Property="BorderThickness" Value="{Binding $parent[DataGrid].(my:HeaderAssist.BorderThickness)}" />
        <Setter Property="Background" Value="{Binding $parent[DataGrid].(my:HeaderAssist.Background)}" />
        <Setter Property="Foreground" Value="{Binding $parent[DataGrid].(my:HeaderAssist.Foreground)}" />
        <Setter Property="FontWeight" Value="{Binding $parent[DataGrid].(my:HeaderAssist.FontWeight)}" />
        <Setter Property="FontSize" Value="{Binding $parent[DataGrid].(my:HeaderAssist.FontSize)}" />
        <Setter Property="FontFamily" Value="{Binding $parent[DataGrid].(my:HeaderAssist.FontFamily)}" />
        <Setter Property="Padding" Value="{Binding $parent[DataGrid].(my:HeaderAssist.Padding)}" />
        <Setter Property="Opacity" Value="{Binding $parent[DataGrid].(my:HeaderAssist.Opacity)}" />
        <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
        <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $self.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding $parent[DataGrid].(my:HeaderAssist.HorizontalAlignment)}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding $parent[DataGrid].(my:HeaderAssist.VerticalAlignment)}" />
        <Setter Property="Tag" Value="{Binding $parent[DataGrid].CanUserSortColumns}" />
        <Setter Property="Template">
            <ControlTemplate TargetType="DataGridColumnHeader">
                <Panel Name="PART_RootPanel">

                    <Border Name="PART_MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                    <Border Name="PART_HoverBorder"
                            Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                        <my:Ripple Name="PART_Ripple" IsActive="{TemplateBinding Tag, Converter={x:Static my:NotNullableConverter.Default}}">
                            <Grid Name="PART_ColumnHeaderRoot" ColumnDefinitions="*,Auto">
                                <Grid Margin="{TemplateBinding Padding}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      ColumnDefinitions="*,Auto">
                                    <ContentPresenter Name="PART_Content"
                                                      Content="{TemplateBinding Content}"
                                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                                      Opacity="{StaticResource MyNet.Opacity.Secondary}" />
                                    <PathIcon Name="SortIcon"
                                              Grid.Column="1"
                                              Classes="Glyph"
                                              Data="{StaticResource MyNet.Geometry.ArrowUp}"
                                              Foreground="{TemplateBinding Foreground}"
                                              IsVisible="False" />
                                </Grid>
                                <Rectangle Name="VerticalSeparator"
                                           Grid.Column="1"
                                           Width="1"
                                           VerticalAlignment="Stretch"
                                           Fill="{TemplateBinding SeparatorBrush}"
                                           IsVisible="{TemplateBinding AreSeparatorsVisible}" />
                            </Grid>
                        </my:Ripple>
                    </Border>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:not(.no-transitions) /template/ ContentPresenter#PART_Content">
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Easing="LinearEasing" Property="Opacity" Duration="{StaticResource MyNet.Timespan.Opacity}" />
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="^:nth-child(1)">
            <Setter Property="CornerRadius" Value="{Binding $parent[DataGrid].(my:HeaderAssist.CornerRadius), Converter={x:Static my:CornerRadiusConverter.Left}}" />
        </Style>
        <Style Selector="^:nth-last-child(1)">
            <Setter Property="CornerRadius" Value="{Binding $parent[DataGrid].(my:HeaderAssist.CornerRadius), Converter={x:Static my:CornerRadiusConverter.Right}}" />
        </Style>

        <!-- Sort -->
        <Style Selector="^[Tag=True]">
            <Setter Property="Cursor" Value="Hand" />

            <Style Selector="^:not(:disabled):pointerover">
                <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.HoverForeground)}" />

                <Style Selector="^ /template/ Border#PART_HoverBorder">
                    <Setter Property="Opacity" Value="1" />
                </Style>
                <Style Selector="^ /template/ ContentPresenter#PART_Content">
                    <Setter Property="Opacity" Value="1" />
                </Style>
            </Style>

            <Style Selector="^:sortascending /template/ PathIcon#SortIcon">
                <Setter Property="IsVisible" Value="True" />
            </Style>

            <Style Selector="^:sortdescending /template/ PathIcon#SortIcon">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="RenderTransform" Value="rotate(180deg)" />
            </Style>

        </Style>

        <Style Selector="^:dragIndicator">
            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Overlay}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.DataGridColumnHeader.TopLeft" TargetType="DataGridColumnHeader" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
        <Setter Property="Template">
            <ControlTemplate>
                <Grid Name="TopLeftHeaderRoot">
                    <Border Background="{TemplateBinding Background}" />
                    <Rectangle Width="1" HorizontalAlignment="Right" Fill="{TemplateBinding SeparatorBrush}" />
                    <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{TemplateBinding SeparatorBrush}" />
                </Grid>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type DataGridRowHeader}" TargetType="DataGridRowHeader">
        <Setter Property="BorderBrush" Value="{Binding $parent[DataGrid].(my:HeaderAssist.BorderBrush)}" />
        <Setter Property="SeparatorBrush" Value="{Binding $parent[DataGrid].(my:HeaderAssist.BorderBrush)}" />
        <Setter Property="Background" Value="{Binding $parent[DataGrid].(my:HeaderAssist.Background)}" />
        <Setter Property="Foreground" Value="{Binding $parent[DataGrid].(my:HeaderAssist.Foreground)}" />
        <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
        <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $self.Foreground}" />
        <Setter Property="AreSeparatorsVisible" Value="False" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel Name="PART_RootPanel">

                    <Border Name="PART_MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                    <Border Name="PART_HoverBorder"
                            Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                        <my:Ripple Name="PART_Ripple">
                            <Grid Name="PART_Root" ColumnDefinitions="Auto,*" RowDefinitions="*,*,Auto">
                                <Grid Grid.RowSpan="3" Grid.ColumnSpan="2">
                                    <Rectangle Name="RowInvalidVisualElement"
                                               Fill="{DynamicResource MyNet.Brush.Validation.Error}"
                                               Opacity="0"
                                               Stretch="Fill" />
                                </Grid>
                                <Rectangle Name="HorizontalSeparator"
                                           Grid.Row="2"
                                           Grid.Column="0"
                                           Grid.ColumnSpan="2"
                                           Height="1"
                                           Margin="1 0 1 0"
                                           HorizontalAlignment="Stretch"
                                           Fill="{TemplateBinding SeparatorBrush}"
                                           IsVisible="{TemplateBinding AreSeparatorsVisible}" />

                                <ContentPresenter Grid.Row="0"
                                                  Grid.RowSpan="2"
                                                  Grid.Column="1"
                                                  Margin="{my:Thickness Default}"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding Content}" />
                            </Grid>
                        </my:Ripple>
                    </Border>
                </Panel>
            </ControlTemplate>
        </Setter>

        <!-- Hover -->
        <Style Selector="^:not(:disabled):pointerover">
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.HoverForeground)}" />

            <Style Selector="^ /template/ Border#PART_HoverBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>
    </ControlTheme>

    <!-- Row -->
    <ControlTheme x:Key="{x:Type DataGridRow}" TargetType="DataGridRow">
        <Setter Property="Margin" Value="{Binding $parent[DataGrid].(my:DataGridAssist.RowMargin)}" />
        <Setter Property="CornerRadius" Value="{Binding $parent[DataGrid].(my:DataGridAssist.RowCornerRadius)}" />
        <Setter Property="Background" Value="{Binding $parent[DataGrid].RowBackground}" />
        <Setter Property="Foreground" Value="{Binding $parent[DataGrid].(my:DataGridAssist.RowForeground)}" />
        <Setter Property="BorderBrush" Value="{Binding $parent[DataGrid].(my:DataGridAssist.RowBorderBrush)}" />
        <Setter Property="BorderThickness" Value="{Binding $parent[DataGrid].(my:DataGridAssist.RowBorderThickness)}" />
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="{Binding $parent[DataGrid].(my:DataGridAssist.RowShadowDepth)}" />
        <Setter Property="my:ThemeAssist.HoverBackground" Value="{Binding $parent[DataGrid].(my:ThemeAssist.HoverBackground)}" />
        <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{Binding $parent[DataGrid].(my:ThemeAssist.HoverBorderBrush)}" />
        <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $parent[DataGrid].(my:ThemeAssist.HoverForeground)}" />
        <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $parent[DataGrid].(my:ThemeAssist.ActiveBackground)}" />
        <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{Binding $parent[DataGrid].(my:ThemeAssist.ActiveBorderBrush)}" />
        <Setter Property="my:ThemeAssist.ActiveForeground" Value="{Binding $parent[DataGrid].(my:ThemeAssist.ActiveForeground)}" />
        <Setter Property="my:DataGridAssist.UseAlternateRowBackground" Value="{Binding $parent[DataGrid].(my:DataGridAssist.UseAlternateRowBackground)}" />
        <Setter Property="my:DataGridAssist.ShowSelection" Value="{Binding $parent[DataGrid].(my:DataGridAssist.ShowSelection)}" />
        <Setter Property="Template">
            <ControlTemplate TargetType="DataGridRow">
                <Panel Name="PART_RootPanel">

                    <Border Name="PART_MainBorder"
                            my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                    <Border Name="PART_ActiveBorder"
                            Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border Name="PART_HoverBorder"
                            Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border Name="PART_InvalidBorder"
                            Background="{DynamicResource MyNet.Brush.Validation.Error}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <DataGridFrozenGrid Name="PART_Root" ColumnDefinitions="Auto,*" RowDefinitions="*,Auto,Auto">

                        <DataGridRowHeader Name="PART_RowHeader"
                                           Grid.Row="0"
                                           Grid.RowSpan="3"
                                           Grid.Column="0"
                                           DataGridFrozenGrid.IsFrozen="True" />
                        <DataGridCellsPresenter Name="PART_CellsPresenter"
                                                Grid.Row="0"
                                                Grid.Column="1"
                                                DataGridFrozenGrid.IsFrozen="True" />
                        <DataGridDetailsPresenter Name="PART_DetailsPresenter"
                                                  Grid.Row="1"
                                                  Grid.Column="1"
                                                  Background="{Binding $parent[DataGrid].(my:ItemsAssist.Background)}" />
                        <Rectangle Name="PART_BottomGridLine"
                                   Grid.Row="2"
                                   Grid.Column="1"
                                   Height="1"
                                   HorizontalAlignment="Stretch" />
                    </DataGridFrozenGrid>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:not(.no-transitions)">
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Easing="LinearEasing" Property="Opacity" Duration="{StaticResource MyNet.Timespan.Opacity}" />
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="^[(my|DataGridAssist.UseAlternateRowBackground)=True]">
            <Style Selector="^:nth-child(odd)">
                <Setter Property="Background" Value="{Binding $parent[DataGrid].(my:DataGridAssist.AlternateRowBackground)}" />
            </Style>
        </Style>


        <Style Selector="^[(my|DataGridAssist.ShowSelection)=True]">

            <!-- Hover -->
            <Style Selector="^:not(:disabled):pointerover">
                <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.HoverForeground)}" />

                <Style Selector="^ /template/ Border#PART_HoverBorder">
                    <Setter Property="Opacity" Value="1" />
                </Style>
            </Style>

            <!-- Selected -->
            <Style Selector="^:selected">
                <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.ActiveForeground)}" />

                <Style Selector="^ /template/ Border#PART_ActiveBorder">
                    <Setter Property="Opacity" Value="1" />
                </Style>
            </Style>

        </Style>

        <Style Selector="^:invalid">
            <Style Selector="^ /template/ Border#PART_InvalidBorder">
                <Setter Property="Opacity" Value="0" />
            </Style>
        </Style>
    </ControlTheme>

    <!-- Group -->
    <ControlTheme x:Key="MyNet.Theme.ToggleButton.Embedded.DataGrid" TargetType="ToggleButton">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <ControlTemplate TargetType="ToggleButton">
                <Border Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="Transparent">
                    <PathIcon Name="PART_ExpandIconPath" Classes="Glyph DropDown Right" />
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:checked /template/ PathIcon#PART_ExpandIconPath">
            <Setter Property="RenderTransform" Value="rotate(90deg)" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type DataGridRowGroupHeader}" TargetType="DataGridRowGroupHeader">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Container.Background.Dark}" />
        <Setter Property="Margin" Value="{my:Thickness Top=10, Bottom=2}" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Template">
            <ControlTemplate x:DataType="collections:DataGridCollectionViewGroup" TargetType="DataGridRowGroupHeader">
                <DataGridFrozenGrid Name="PART_Root"
                                    MinHeight="{TemplateBinding MinHeight}"
                                    ColumnDefinitions="Auto,Auto,*"
                                    RowDefinitions="*,Auto">

                    <Border Name="PART_MainBorder"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{Binding $parent[DataGrid].(my:DataGridAssist.RowCornerRadius)}" />

                    <Rectangle Name="PART_IndentSpacer" Grid.Row="0" Grid.Column="0" />
                    <ToggleButton Name="PART_ExpanderButton"
                                  Grid.Row="0" Margin="{my:Thickness Default, Horizontal}"
                                  Grid.Column="1"
                                  Focusable="False"
                                  Theme="{StaticResource MyNet.Theme.ToggleButton.Embedded.DataGrid}" />
                    <StackPanel Grid.Row="0"
                                Grid.Column="2"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                Spacing="{StaticResource MyNet.Spacing.Small}">
                        <TextBlock Name="PART_PropertyNameElement" Foreground="{TemplateBinding Foreground}" IsVisible="{TemplateBinding IsPropertyNameVisible}" />
                        <ContentControl Name="PART_GroupKeyContentControl" Content="{Binding Key}" Foreground="{TemplateBinding Foreground}" />
                        <TextBlock Name="PART_ItemCountElement" Foreground="{TemplateBinding Foreground}" IsVisible="{TemplateBinding IsItemCountVisible}" />
                    </StackPanel>

                    <DataGridRowHeader Name="PART_RowHeader"
                                       Grid.Row="0"
                                       Grid.RowSpan="2"
                                       Grid.Column="0"
                                       DataGridFrozenGrid.IsFrozen="True" />
                </DataGridFrozenGrid>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <!-- DataGrid -->
    <ControlTheme x:Key="{x:Type DataGrid}" TargetType="DataGrid">
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.AllowAutoHide" Value="True" />
        <Setter Property="RowHeight" Value="40" />
        <Setter Property="SelectionMode" Value="Extended" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusAdorner">
            <FocusAdornerTemplate>
                <Rectangle Theme="{StaticResource MyNet.Theme.Rectangle.Focus}" />
            </FocusAdornerTemplate>
        </Setter>
        <Setter Property="DropLocationIndicatorTemplate">
            <Template>
                <Rectangle Width="2" Fill="{DynamicResource MyNet.Brush.Primary}" />
            </Template>
        </Setter>

        <Style Selector="^">

            <!-- DataGrid -->
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Container.Border}" />
            <Setter Property="Foreground" Value="{Binding $parent[TemplatedControl].Foreground}" />
            <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource MyNet.Brush.Container.Border}" />
            <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource MyNet.Brush.Container.Border}" />

            <!-- Headers -->
            <Setter Property="HeadersVisibility" Value="Column" />
            <Setter Property="ColumnHeaderHeight" Value="35" />
            <Setter Property="my:HeaderAssist.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
            <Setter Property="my:HeaderAssist.Padding" Value="{my:Thickness Default}" />
            <Setter Property="my:HeaderAssist.FontSize" Value="{StaticResource MyNet.Font.Size}" />
            <Setter Property="my:HeaderAssist.FontFamily" Value="{Binding $self.FontFamily}" />
            <Setter Property="my:HeaderAssist.FontStyle" Value="{Binding $self.FontStyle}" />
            <Setter Property="my:HeaderAssist.FontWeight" Value="{StaticResource MyNet.Font.Weight}" />
            <Setter Property="my:HeaderAssist.Opacity" Value="1" />
            <Setter Property="my:HeaderAssist.HorizontalAlignment" Value="Stretch" />
            <Setter Property="my:HeaderAssist.VerticalAlignment" Value="Center" />
            <Setter Property="my:HeaderAssist.Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="my:HeaderAssist.BorderBrush" Value="Transparent" />
            <Setter Property="my:HeaderAssist.BorderThickness" Value="0" />
            <Setter Property="my:HeaderAssist.Foreground" Value="{my:Brush $self.(my:HeaderAssist.Background), Contrast=True}" />

            <!-- Row -->
            <Setter Property="my:DataGridAssist.ShowSelection" Value="True" />
            <Setter Property="my:ItemsAssist.Margin" Value="0 1" />
            <Setter Property="my:DataGridAssist.RowCornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
            <Setter Property="my:DataGridAssist.UseAlternateRowBackground" Value="True" />
            <Setter Property="RowBackground" Value="Transparent" />
            <Setter Property="my:DataGridAssist.AlternateRowBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Alternate}}" />
            <Setter Property="my:DataGridAssist.RowForeground" Value="{Binding $self.Foreground}" />
            <Setter Property="my:DataGridAssist.RowBorderBrush" Value="{Binding $self.HorizontalGridLinesBrush}" />
            <Setter Property="my:DataGridAssist.RowBorderThickness" Value="0" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="Transparent" />
            <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $parent[TemplatedControl].Foreground}" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="Transparent" />
            <Setter Property="my:ThemeAssist.ActiveForeground" Value="{my:Brush $self.(my:ThemeAssist.ActiveBackground), Contrast=True}" />

            <!-- Cell -->
            <Setter Property="my:DataGridAssist.ShowCellSelection" Value="False" />
            <Setter Property="my:ItemsAssist.Padding" Value="{my:Thickness Default}" />
            <Setter Property="my:ItemsAssist.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
            <Setter Property="my:ItemsAssist.Background" Value="Transparent" />
            <Setter Property="my:ItemsAssist.BorderBrush" Value="Transparent" />
            <Setter Property="my:ItemsAssist.BorderThickness" Value="1" />
            <Setter Property="my:ItemsAssist.ActiveBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Active}}" />
            <Setter Property="my:ItemsAssist.ActiveBorderBrush" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Overlay}}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="DataGrid">
                <Border Name="DataGridBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="Auto,*,Auto,Auto">
                        <DataGridColumnHeader Name="PART_TopLeftCornerHeader"
                                              Grid.Row="0"
                                              Grid.Column="0"
                                              Theme="{StaticResource MyNet.Theme.DataGridColumnHeader.TopLeft}" />
                        <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter"
                                                        Grid.Row="0"
                                                        Grid.Column="1"
                                                        Grid.ColumnSpan="2" />

                        <DataGridRowsPresenter Name="PART_RowsPresenter"
                                               Grid.Row="1"
                                               Grid.RowSpan="2"
                                               Grid.Column="0"
                                               Grid.ColumnSpan="3"
                                               ScrollViewer.IsScrollInertiaEnabled="{TemplateBinding IsScrollInertiaEnabled}">
                            <DataGridRowsPresenter.GestureRecognizers>
                                <ScrollGestureRecognizer CanHorizontallyScroll="True" CanVerticallyScroll="True" IsScrollInertiaEnabled="{Binding (ScrollViewer.IsScrollInertiaEnabled), ElementName=PART_RowsPresenter}" />
                            </DataGridRowsPresenter.GestureRecognizers>
                        </DataGridRowsPresenter>
                        <Rectangle Name="PART_BottomRightCorner"
                                   Grid.Row="2"
                                   Grid.Column="2"
                                   Fill="Transparent" />
                        <ScrollBar Name="PART_VerticalScrollbar"
                                   Grid.Row="1"
                                   Grid.Column="2"
                                   my:ScrollViewerAssist.ActiveThumbThickness="{TemplateBinding my:ScrollViewerAssist.ActiveThumbThickness}"
                                   my:ScrollViewerAssist.ButtonsIsVisible="{TemplateBinding my:ScrollViewerAssist.ButtonsIsVisible}"
                                   my:ScrollViewerAssist.InactiveThumbThickness="{TemplateBinding my:ScrollViewerAssist.InactiveThumbThickness}"
                                   AllowAutoHide="{Binding Path=(ScrollViewer.AllowAutoHide), RelativeSource={RelativeSource TemplatedParent}}"
                                   BorderBrush="{TemplateBinding Foreground}"
                                   Orientation="Vertical" />

                        <Grid Grid.Row="2" Grid.Column="1" ColumnDefinitions="Auto,*">
                            <Rectangle Name="PART_FrozenColumnScrollBarSpacer" />
                            <ScrollBar Name="PART_HorizontalScrollbar"
                                       Grid.Column="1"
                                       my:ScrollViewerAssist.ActiveThumbThickness="{TemplateBinding my:ScrollViewerAssist.ActiveThumbThickness}"
                                       my:ScrollViewerAssist.ButtonsIsVisible="{TemplateBinding my:ScrollViewerAssist.ButtonsIsVisible}"
                                       my:ScrollViewerAssist.InactiveThumbThickness="{TemplateBinding my:ScrollViewerAssist.InactiveThumbThickness}"
                                       AllowAutoHide="{Binding Path=(ScrollViewer.AllowAutoHide), RelativeSource={RelativeSource TemplatedParent}}"
                                       BorderBrush="{TemplateBinding Foreground}"
                                       Orientation="Horizontal" />
                        </Grid>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:empty-columns">
            <Style Selector="^ /template/ DataGridColumnHeader#PART_TopLeftCornerHeader">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ DataGridColumnHeadersPresenter#PART_ColumnHeadersPresenter">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>

        <Style Selector="^[(ScrollViewer.AllowAutoHide)=True] /template/ ScrollBar">
            <Style Selector="^:not(.no-transitions)">
                <Setter Property="Transitions">
                    <Transitions>
                        <DoubleTransition Easing="LinearEasing" Property="Opacity" Duration="{StaticResource MyNet.Timespan.Opacity}" />
                    </Transitions>
                </Setter>
            </Style>
            <Setter Property="Opacity" Value="0" />
        </Style>

        <Style Selector="^:pointerover">
            <Style Selector="^ /template/ ScrollBar#PART_HorizontalScrollbar">
                <Setter Property="Opacity" Value="1" />
            </Style>
            <Style Selector="^ /template/ ScrollBar#PART_VerticalScrollbar">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <Style Selector="^.InsetContent">
            <Style Selector="^ /template/ DataGridRowsPresenter#PART_RowsPresenter">
                <Setter Property="Grid.RowSpan" Value="1" />
                <Setter Property="Grid.ColumnSpan" Value="2" />
            </Style>
            <Style Selector="^ /template/ DataGridColumnHeadersPresenter#PART_ColumnHeadersPresenter">
                <Setter Property="Grid.ColumnSpan" Value="1" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>
