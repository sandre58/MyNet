<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia">
    <ControlTheme x:Key="{x:Type my:ExtendedWindow}" TargetType="my:ExtendedWindow">
        <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Application.Background}" />
        <Setter Property="TransparencyBackgroundFallback" Value="{DynamicResource MyNet.Brush.Application.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource MyNet.Brush.Application.Foreground}" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size}" />
        <Setter Property="FontFamily" Value="{StaticResource MyNet.Font.FontFamily}" />
        <Setter Property="ExtendClientAreaTitleBarHeightHint" Value="-1" />
        <Setter Property="ExtendClientAreaToDecorationsHint" Value="True" />
        <Setter Property="my:OverlayDialogHost.IsModalStatusScope" Value="True" />
        <Setter Property="IsMinimizeButtonVisible">
            <OnPlatform>
                <On Options="Default, Windows, Linux">
                    <x:Boolean>True</x:Boolean>
                </On>
                <On Options="macOS">
                    <x:Boolean>False</x:Boolean>
                </On>
            </OnPlatform>
        </Setter>
        <Setter Property="IsRestoreButtonVisible">
            <OnPlatform>
                <On Options="Default, Windows, Linux">
                    <x:Boolean>True</x:Boolean>
                </On>
                <On Options="macOS">
                    <x:Boolean>False</x:Boolean>
                </On>
            </OnPlatform>
        </Setter>
        <Setter Property="IsCloseButtonVisible">
            <OnPlatform>
                <On Options="Default, Windows, Linux">
                    <x:Boolean>True</x:Boolean>
                </On>
                <On Options="macOS">
                    <x:Boolean>False</x:Boolean>
                </On>
            </OnPlatform>
        </Setter>
        <Setter Property="SystemDecorations">
            <OnPlatform>
                <On Options="Default, Windows, macOS">
                    <SystemDecorations>Full</SystemDecorations>
                </On>
                <On Options="Linux">
                    <SystemDecorations>None</SystemDecorations>
                </On>
            </OnPlatform>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate TargetType="my:ExtendedWindow">
                <Panel>
                    <Border Name="PART_TransparencyFallback" IsHitTestVisible="False" />
                    <Border Background="{TemplateBinding Background}"
                            BackgroundSizing="InnerBorderEdge"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            IsHitTestVisible="False" />
                    <Panel Margin="{TemplateBinding WindowDecorationMargin}" Background="Transparent" />
                    <VisualLayerManager Padding="{TemplateBinding OffScreenMargin, Mode=OneWay}">
                        <VisualLayerManager.ChromeOverlayLayer>
                            <Panel Margin="{Binding $parent[my:ExtendedWindow].OffScreenMargin}">
                                <my:TitleBar Margin="{Binding $parent[my:ExtendedWindow].TitleBarMargin}"
                                             Content="{Binding $parent[my:ExtendedWindow].TitleBarContent}"
                                             IsTitleVisible="{Binding $parent[my:ExtendedWindow].IsTitleBarVisible}"
                                             LeftContent="{Binding $parent[my:ExtendedWindow].LeftContent}"
                                             RightContent="{Binding $parent[my:ExtendedWindow].RightContent}" />
                                <VisualLayerManager>
                                    <Panel>
                                        <my:OverlayDialogHost IsModalStatusReporter="True" IsTopLevel="True" />
                                        <my:WindowResizer HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsVisible="{Binding $parent[my:ExtendedWindow].IsManagedResizerVisible}" />
                                    </Panel>
                                </VisualLayerManager>
                            </Panel>
                        </VisualLayerManager.ChromeOverlayLayer>
                        <Panel>
                            <ContentPresenter Name="PART_ContentPresenter"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}" />

                        </Panel>
                    </VisualLayerManager>
                </Panel>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type my:TitleBar}" TargetType="my:TitleBar">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Template">
            <ControlTemplate TargetType="my:TitleBar">
                <Panel Background="Transparent">
                    <Panel>
                        <Border Name="PART_Background" Background="{TemplateBinding Background}" IsHitTestVisible="True" />
                        <Grid HorizontalAlignment="Stretch" ColumnDefinitions="Auto, *, Auto, Auto">
                            <ContentPresenter Grid.Column="0" Content="{TemplateBinding LeftContent}" IsVisible="{TemplateBinding IsTitleVisible}" />
                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" IsVisible="{TemplateBinding IsTitleVisible}" />
                            <ContentPresenter Grid.Column="2" Content="{TemplateBinding RightContent}" IsVisible="{TemplateBinding IsTitleVisible}" />
                            <my:CaptionButtons x:Name="PART_CaptionButtons"
                                               Grid.Column="3"
                                               Margin="8 0 4 0"
                                               HorizontalAlignment="Right"
                                               VerticalAlignment="Top"
                                               DockPanel.Dock="Right"
                                               Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Panel>
                </Panel>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type my:CaptionButtons}" TargetType="my:CaptionButtons">
        <Setter Property="Margin" Value="0 0 4 0" />
        <Setter Property="Template">
            <ControlTemplate TargetType="my:CaptionButtons">
                <StackPanel VerticalAlignment="Stretch"
                            Orientation="Horizontal"
                            Spacing="2"
                            TextElement.FontSize="10">
                    <Button Name="PART_FullScreenButton" Theme="{StaticResource MyNet.Theme.Button.Caption}" ToolTip.ShowDelay="1000">
                        <PathIcon Name="PART_FullScreenButtonIcon" Classes="ExtraSmall" Data="{StaticResource MyNet.Geometry.ArrowExpand}" />
                    </Button>
                    <Button Name="PART_MinimizeButton" Theme="{StaticResource MyNet.Theme.Button.Caption}" ToolTip.Tip="{my:Resource Minimize}">
                        <PathIcon Classes="ExtraSmall" Data="{StaticResource MyNet.Geometry.WindowMinimize}" />
                    </Button>
                    <Button Name="PART_RestoreButton" Theme="{StaticResource MyNet.Theme.Button.Caption}">
                        <PathIcon Name="PART_RestoreButtonIcon" Classes="ExtraSmall" Data="{StaticResource MyNet.Geometry.WindowMaximize}" />
                    </Button>
                    <Button Name="PART_CloseButton" Classes="Close" Theme="{StaticResource MyNet.Theme.Button.Caption}" ToolTip.Tip="{my:Resource Close}">
                        <PathIcon Classes="ExtraSmall" Data="{StaticResource MyNet.Geometry.WindowClose}" />
                    </Button>
                </StackPanel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^">
            <Style Selector="^ /template/ Button#PART_RestoreButton">
                <Setter Property="ToolTip.Tip" Value="{my:Resource Maximize}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_FullScreenButton">
                <Setter Property="ToolTip.Tip" Value="{my:Resource FullScreen}" />
            </Style>
        </Style>

        <Style Selector="^:maximized">

            <Style Selector="^ /template/ Button#PART_RestoreButton">
                <Setter Property="ToolTip.Tip" Value="{my:Resource Restore}" />
            </Style>

            <Style Selector="^ /template/ PathIcon#PART_RestoreButtonIcon">
                <Setter Property="Data" Value="{StaticResource MyNet.Geometry.WindowRestore}" />
            </Style>
        </Style>

        <Style Selector="^:fullscreen">
            <Style Selector="^ /template/ Button#PART_FullScreenButton">
                <Setter Property="ToolTip.Tip" Value="{my:Resource NoFullScreen}" />
            </Style>

            <Style Selector="^ /template/ PathIcon#PART_FullScreenButtonIcon">
                <Setter Property="Data" Value="{StaticResource MyNet.Geometry.ArrowCollapse}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_RestoreButton">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ Button#PART_MinimizeButton">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>