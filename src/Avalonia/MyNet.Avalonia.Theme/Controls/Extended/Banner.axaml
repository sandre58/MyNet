<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <ControlTheme x:Key="{x:Type my:Banner}" TargetType="my:Banner">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Container}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Container}" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Banner}" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="my:HeaderAssist.Foreground" Value="{Binding $self.Foreground}" />
        <Setter Property="my:HeaderAssist.Padding" Value="{my:Thickness Default, Bottom}" />
        <Setter Property="my:HeaderAssist.FontSize" Value="{StaticResource MyNet.Font.Size.Caption}" />
        <Setter Property="my:HeaderAssist.FontFamily" Value="{Binding $self.FontFamily}" />
        <Setter Property="my:HeaderAssist.FontStyle" Value="{Binding $self.FontStyle}" />
        <Setter Property="my:HeaderAssist.FontWeight" Value="{StaticResource MyNet.Font.Weight.Header}" />
        <Setter Property="my:HeaderAssist.Opacity" Value="1" />
        <Setter Property="my:HeaderAssist.HorizontalAlignment" Value="Left" />
        <Setter Property="my:HeaderAssist.VerticalAlignment" Value="Center" />
        <Setter Property="HeaderTemplate" Value="{StaticResource MyNet.DataTemplate.Icon.Left}" />
        <Setter Property="ClipToBounds" Value="True" />

        <Style Selector="^">
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Container.Background}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="PART_Root"
                        Padding="0"
                        my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Border ClipToBounds="{TemplateBinding ClipToBounds}" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Name="PART_Grid" Margin="{TemplateBinding Padding}" RowDefinitions="Auto,*">

                            <ContentPresenter Name="PART_HeaderPresenter"
                                              Padding="{TemplateBinding my:HeaderAssist.Padding}"
                                              HorizontalContentAlignment="{TemplateBinding my:HeaderAssist.HorizontalAlignment}"
                                              VerticalContentAlignment="{TemplateBinding my:HeaderAssist.VerticalAlignment}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              FontFamily="{TemplateBinding my:HeaderAssist.FontFamily}"
                                              FontSize="{TemplateBinding my:HeaderAssist.FontSize}"
                                              FontStyle="{TemplateBinding my:HeaderAssist.FontStyle}"
                                              FontWeight="{TemplateBinding my:HeaderAssist.FontWeight}"
                                              Foreground="{TemplateBinding my:HeaderAssist.Foreground}"
                                              IsVisible="{Binding Header, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullConverter.IsNotNull}}"
                                              Opacity="{TemplateBinding my:HeaderAssist.Opacity}"
                                              RecognizesAccessKey="True">
                                <ContentPresenter.Styles>
                                    <Style Selector="PathIcon">
                                        <Setter Property="Height" Value="{StaticResource MyNet.Size.Icon.Small}" />
                                        <Setter Property="Width" Value="{StaticResource MyNet.Size.Icon.Small}" />
                                    </Style>
                                </ContentPresenter.Styles>
                            </ContentPresenter>
                            <ContentPresenter Name="PART_ContentPresenter"
                                              Grid.Row="1"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              FontFamily="{TemplateBinding FontFamily}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              RecognizesAccessKey="True" />

                            <Button Name="PART_CloseButton"
                                    Grid.RowSpan="2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Content="{StaticResource MyNet.Geometry.WindowClose}"
                                    IsVisible="False"
                                    Theme="{StaticResource MyNet.Theme.Button.Embedded.Tool}" />
                        </Grid>
                    </Border>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^[CanClose=True] /template/ Button#PART_CloseButton">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <!-- Styles -->
        <Style Selector="^.Outlined">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Container.Border}" />
            <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Background" Value="Transparent" />

            <Style Selector="^.Solid">
                <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Container.Border}" />
                <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.SecondaryColor)}" />
            </Style>

            <Style Selector="^.Light">
                <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Container.Border}" />
                <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.SecondaryColor)}" />
            </Style>
        </Style>

        <Style Selector="^.Solid">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Container.Background}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
        </Style>

        <Style Selector="^.Light">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Container.Background}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Opacity={StaticResource MyNet.Opacity.Filled}}" />
        </Style>

        <Style Selector="^:success">
            <Setter Property="Header" Value="{my:Resource Success}" />
            <Setter Property="my:IconAssist.Icon">
                <Setter.Value>
                    <Template>
                        <PathIcon Data="{StaticResource MyNet.Geometry.CheckCircle}" />
                    </Template>
                </Setter.Value>
            </Setter>
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Positive}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
            <Setter Property="my:ShadowAssist.ShadowDepth" Value="{StaticResource MyNet.ShadowDepth.Container}" />
            <Setter Property="ClipToBounds" Value="False" />
        </Style>
        <Style Selector="^:warning">
            <Setter Property="Header" Value="{my:Resource Warning}" />
            <Setter Property="my:IconAssist.Icon">
                <Setter.Value>
                    <Template>
                        <PathIcon Data="{StaticResource MyNet.Geometry.AlertCircle}" />
                    </Template>
                </Setter.Value>
            </Setter>
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Warning}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
            <Setter Property="my:ShadowAssist.ShadowDepth" Value="{StaticResource MyNet.ShadowDepth.Container}" />
            <Setter Property="ClipToBounds" Value="False" />
        </Style>
        <Style Selector="^:error">
            <Setter Property="Header" Value="{my:Resource Error}" />
            <Setter Property="my:IconAssist.Icon">
                <Setter.Value>
                    <Template>
                        <PathIcon Data="{StaticResource MyNet.Geometry.CloseCircle}" />
                    </Template>
                </Setter.Value>
            </Setter>
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Negative}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
            <Setter Property="my:ShadowAssist.ShadowDepth" Value="{StaticResource MyNet.ShadowDepth.Container}" />
            <Setter Property="ClipToBounds" Value="False" />
        </Style>
        <Style Selector="^:information">
            <Setter Property="Header" Value="{my:Resource Information}" />
            <Setter Property="my:IconAssist.Icon">
                <Setter.Value>
                    <Template>
                        <PathIcon Data="{StaticResource MyNet.Geometry.InformationVariantCircle}" />
                    </Template>
                </Setter.Value>
            </Setter>
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Information}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
            <Setter Property="my:ShadowAssist.ShadowDepth" Value="{StaticResource MyNet.ShadowDepth.Container}" />
            <Setter Property="ClipToBounds" Value="False" />
        </Style>

    </ControlTheme>
</ResourceDictionary>