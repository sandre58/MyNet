<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">
    
    <ControlTheme x:Key="{x:Type my:Badge}" TargetType="{x:Type my:Badge}">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Control}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Control}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HeaderTemplate" Value="{StaticResource MyNet.DataTemplate.Icon}" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Label.Small}" />
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="BadgeFontSize" Value="{StaticResource MyNet.Font.Size.SubCaption}" />
        <Setter Property="BadgeFontFamily" Value="{StaticResource MyNet.Font.FontFamily}" />
        <Setter Property="BadgeFontWeight" Value="{StaticResource MyNet.Font.Weight}" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="CornerPosition" Value="TopRight" />

        <Style Selector="^">
            <Setter Property="MaskBackground" Value="{DynamicResource MyNet.Brush.Application.Background}" />
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="BadgeForeground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
            <Setter Property="Background" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="{x:Type my:Badge}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" ClipToBounds="False">
                    <ContentPresenter x:Name="PART_ContentPresenter"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}" />
                    <Panel Name="{x:Static my:Badge.PartBadgeContainer}" Classes="Disablable" IsVisible="{Binding Header, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}">
                        <Border Background="{TemplateBinding MaskBackground}" CornerRadius="{TemplateBinding CornerRadius}" />
                        <Border Name="PART_Border"
                                my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              FontFamily="{TemplateBinding BadgeFontFamily}"
                                              FontSize="{TemplateBinding BadgeFontSize}"
                                              FontWeight="{TemplateBinding BadgeFontWeight}"
                                              Foreground="{TemplateBinding BadgeForeground}"
                                              RecognizesAccessKey="True"
                                              UseLayoutRounding="True" />
                        </Border>
                    </Panel>
                </Grid>
            </ControlTemplate>
        </Setter>

        <Style Selector="^[IsRounded=True]">
            <Setter Property="Template">
                <ControlTemplate TargetType="{x:Type my:Badge}">
                    <Grid HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" ClipToBounds="False">
                        <ContentPresenter x:Name="PART_ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Panel Name="{x:Static my:Badge.PartBadgeContainer}" Classes="Disablable" IsVisible="{Binding Header, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static ObjectConverters.IsNotNull}}">
                            <Ellipse Width="{TemplateBinding BadgeWidth}" Height="{TemplateBinding BadgeHeight}" Fill="{TemplateBinding MaskBackground}" />
                            <Ellipse Name="PART_Border"
                                     Width="{TemplateBinding BadgeWidth}"
                                     Height="{TemplateBinding BadgeHeight}"
                                     my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                                     Fill="{TemplateBinding Background}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{TemplateBinding BorderThickness, Converter={x:Static my:ThicknessToDoubleConverter.Left}}" />
                            <ContentPresenter Padding="{TemplateBinding Padding}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              FontFamily="{TemplateBinding BadgeFontFamily}"
                                              FontSize="{TemplateBinding BadgeFontSize}"
                                              FontWeight="{TemplateBinding BadgeFontWeight}"
                                              Foreground="{TemplateBinding BadgeForeground}"
                                              RecognizesAccessKey="True"
                                              UseLayoutRounding="True" />
                        </Panel>
                    </Grid>
                </ControlTemplate>
            </Setter>
        </Style>

        <!-- Styles -->
        <Style Selector="^.Outlined">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{my:Brush $self.MaskBackground, Contrast=True}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="BadgeForeground" Value="{Binding $self.(my:ThemeAssist.SecondaryColor)}" />

            <Style Selector="^.Light">
                <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
                <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.TertiaryColor)}" />
            </Style>
        </Style>

        <Style Selector="^.Light">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Opacity={StaticResource MyNet.Opacity.Filled}}" />
            <Setter Property="BadgeForeground" Value="{my:Brush $self.MaskBackground, Contrast=True}" />
        </Style>

        <!-- Sizes -->
        <Style Selector="^.Medium">
            <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Label.Medium}" />
            <Setter Property="BadgeFontSize" Value="{StaticResource MyNet.Font.Size}" />
        </Style>
        <Style Selector="^.Large">
            <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Label.Large}" />
            <Setter Property="BadgeFontSize" Value="{StaticResource MyNet.Font.Size.Caption}" />
        </Style>
    </ControlTheme>
</ResourceDictionary>