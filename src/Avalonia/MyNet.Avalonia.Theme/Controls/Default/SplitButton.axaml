<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <ControlTheme x:Key="MyNet.Theme.Button.Embedded.SplitButton" TargetType="Button">
        <Setter Property="Template">
            <ControlTemplate TargetType="Button">
                <Panel Name="PART_RootPanel">

                    <Border Name="PART_MainBorder"
                            my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                    <Border Name="PART_ActiveBorder"
                            Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border Name="PART_HoverBorder"
                            Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                        <my:Ripple Name="PART_Ripple" RippleFill="{TemplateBinding my:ThemeAssist.RippleColor}">
                            <ContentPresenter Name="PART_ContentPresenter"
                                              Padding="{TemplateBinding Padding}"
                                              HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              CornerRadius="{TemplateBinding CornerRadius}"
                                              Foreground="{TemplateBinding Foreground}"
                                              RecognizesAccessKey="True"
                                              TextElement.FontSize="{TemplateBinding FontSize}"
                                              TextElement.FontWeight="{TemplateBinding FontWeight}"
                                              UseLayoutRounding="False" />
                        </my:Ripple>
                    </Border>
                </Panel>
            </ControlTemplate>
        </Setter>

        <!-- Hover -->
        <Style Selector="^:not(:disabled):pointerover">
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.HoverForeground)}" />

            <Style Selector="^ /template/ Border#PART_HoverBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <Style Selector="^[(my|ProxyAssist.IsActive)=True]">
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.ActiveForeground)}" />

            <Style Selector="^ /template/ Border#PART_ActiveBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type SplitButton}" TargetType="SplitButton">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Control}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Control}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplate.Icon}" />
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Button.Medium}" />
        <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.Button.Medium}" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Button}" />
        <Setter Property="FontWeight" Value="{StaticResource MyNet.Font.Weight.Button}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="my:FlyoutAssist.Placement" Value="BottomEdgeAlignedRight" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusAdorner">
            <FocusAdornerTemplate>
                <Rectangle Classes="Inner" Theme="{StaticResource MyNet.Theme.Rectangle.Focus}" />
            </FocusAdornerTemplate>
        </Setter>

        <Style Selector="^">
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="Foreground" Value="{Binding $parent[TemplatedControl].Foreground}" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="Transparent" />
            <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $parent[TemplatedControl].Foreground}" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="{Binding $self.Foreground}" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $self.(my:ThemeAssist.TertiaryColor)}" />
            <Setter Property="my:ThemeAssist.ActiveForeground" Value="{my:Brush $self.(my:ThemeAssist.ActiveBackground), Contrast=True}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="SplitButton">
                <Border BackgroundSizing="OuterBorderEdge" CornerRadius="{TemplateBinding CornerRadius}">
                    <Grid Name="PART_Grid" ColumnDefinitions="*,Auto,Auto">
                        <Button Name="PART_PrimaryButton"
                                Grid.Column="0"
                                Padding="{TemplateBinding Padding}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                my:IconAssist.Alignment="{TemplateBinding my:IconAssist.Alignment}"
                                my:IconAssist.Icon="{TemplateBinding my:IconAssist.Icon}"
                                my:IconAssist.Margin="{TemplateBinding my:IconAssist.Margin}"
                                my:IconAssist.Opacity="{TemplateBinding my:IconAssist.Opacity}"
                                my:ShadowAssist.ShadowDepth="{TemplateBinding (my:ShadowAssist.ShadowDepth)}"
                                my:ThemeAssist.ActiveBackground="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                                my:ThemeAssist.ActiveBorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                                my:ThemeAssist.ActiveForeground="{TemplateBinding my:ThemeAssist.ActiveForeground}"
                                my:ThemeAssist.HoverBackground="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                my:ThemeAssist.HoverBorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                my:ThemeAssist.HoverForeground="{TemplateBinding my:ThemeAssist.HoverForeground}"
                                my:ThemeAssist.RippleColor="{TemplateBinding my:ThemeAssist.RippleColor}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Classes="no-disablable"
                                ClipToBounds="{TemplateBinding ClipToBounds}"
                                Command="{TemplateBinding Command}"
                                CommandParameter="{TemplateBinding CommandParameter}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Theme="{StaticResource MyNet.Theme.Button.Embedded.SplitButton}" />
                        <Rectangle Name="PART_Separator"
                                   Grid.Column="1"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Fill="{TemplateBinding BorderBrush}"
                                   StrokeThickness="0" />
                        <Button Name="PART_SecondaryButton"
                                Grid.Column="2"
                                Padding="4"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                HorizontalContentAlignment="Center"
                                VerticalContentAlignment="Center"
                                my:ShadowAssist.ShadowDepth="{TemplateBinding (my:ShadowAssist.ShadowDepth)}"
                                my:ThemeAssist.ActiveBackground="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                                my:ThemeAssist.ActiveBorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                                my:ThemeAssist.ActiveForeground="{TemplateBinding my:ThemeAssist.ActiveForeground}"
                                my:ThemeAssist.HoverBackground="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                my:ThemeAssist.HoverBorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                my:ThemeAssist.HoverForeground="{TemplateBinding my:ThemeAssist.HoverForeground}"
                                my:ThemeAssist.RippleColor="{TemplateBinding my:ThemeAssist.RippleColor}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Classes="no-disablable"
                                ClipToBounds="{TemplateBinding ClipToBounds}"
                                Focusable="False"
                                Foreground="{TemplateBinding Foreground}"
                                Theme="{StaticResource MyNet.Theme.Button.Embedded.SplitButton}">
                            <PathIcon Name="PART_ExpanderIcon"
                                      Classes="Glyph DropDown"
                                      Focusable="False"
                                      IsHitTestVisible="False"
                                      UseLayoutRounding="False" />
                        </Button>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^ /template/ Button#PART_PrimaryButton">
            <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveRight}}" />
            <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Left}}" />
        </Style>

        <Style Selector="^ /template/ Button#PART_SecondaryButton">
            <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveLeft}}" />
            <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Right}}" />
        </Style>

        <Style Selector="^ /template/ Rectangle#PART_Separator">
            <Setter Property="Width" Value="1" />
        </Style>

        <!-- IsOpen -->
        <Style Selector="^:flyout-open">
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.ActiveForeground)}" />

            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="my:ProxyAssist.IsActive" Value="True" />
            </Style>
            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="my:ProxyAssist.IsActive" Value="True" />
            </Style>

            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="RenderTransform" Value="rotate(180deg)" />
            </Style>
        </Style>

        <!-- Checked (only for ToggleSplitButton) -->
        <Style Selector="^:checked">
            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.ActiveForeground)}" />
                <Setter Property="my:ProxyAssist.IsActive" Value="True" />
            </Style>
        </Style>

        <!-- Disabled -->
        <Style Selector="^:disabled">
            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="Opacity" Value="1" />
            </Style>
            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- Layout -->
        <Style Selector="^.Left">
            <Style Selector="^ /template/ Grid#PART_Grid">
                <Setter Property="my:GridAssist.RowDefinitions">
                    <RowDefinitions>
                        <RowDefinition Height="*" />
                    </RowDefinitions>
                </Setter>
                <Setter Property="my:GridAssist.ColumnDefinitions">
                    <ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </ColumnDefinitions>
                </Setter>
            </Style>
            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveRight}}" />
                <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Left}}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Grid.Column" Value="2" />
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveLeft}}" />
                <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Right}}" />
            </Style>
            <Style Selector="^ /template/ Rectangle#PART_Separator">
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Grid.Column" Value="1" />
                <Setter Property="Width" Value="1" />
            </Style>
        </Style>
        <Style Selector="^.Right">
            <Style Selector="^ /template/ Grid#PART_Grid">
                <Setter Property="my:GridAssist.RowDefinitions">
                    <RowDefinitions>
                        <RowDefinition Height="*" />
                    </RowDefinitions>
                </Setter>
                <Setter Property="my:GridAssist.ColumnDefinitions">
                    <ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </ColumnDefinitions>
                </Setter>
            </Style>
            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Grid.Column" Value="2" />
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveLeft}}" />
                <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Right}}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveRight}}" />
                <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Left}}" />
            </Style>
            <Style Selector="^ /template/ Rectangle#PART_Separator">
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Grid.Column" Value="1" />
                <Setter Property="Width" Value="1" />
            </Style>
        </Style>
        <Style Selector="^.Top">
            <Style Selector="^ /template/ Grid#PART_Grid">
                <Setter Property="my:GridAssist.RowDefinitions">
                    <RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </RowDefinitions>
                </Setter>
                <Setter Property="my:GridAssist.ColumnDefinitions">
                    <ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </ColumnDefinitions>
                </Setter>
            </Style>
            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveBottom}}" />
                <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Top}}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="Grid.Row" Value="2" />
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveTop}}" />
                <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Bottom}}" />
            </Style>
            <Style Selector="^ /template/ Rectangle#PART_Separator">
                <Setter Property="Grid.Row" Value="1" />
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="Height" Value="1" />
            </Style>
        </Style>
        <Style Selector="^.Bottom">
            <Style Selector="^ /template/ Grid#PART_Grid">
                <Setter Property="my:GridAssist.RowDefinitions">
                    <RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </RowDefinitions>
                </Setter>
                <Setter Property="my:GridAssist.ColumnDefinitions">
                    <ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                    </ColumnDefinitions>
                </Setter>
            </Style>
            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Grid.Row" Value="2" />
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveTop}}" />
                <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Bottom}}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="Grid.Row" Value="0" />
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness, Converter={x:Static my:ThicknessConverter.RemoveBottom}}" />
                <Setter Property="CornerRadius" Value="{Binding $parent[TemplatedControl].CornerRadius, Converter={x:Static my:CornerRadiusConverter.Top}}" />
            </Style>
            <Style Selector="^ /template/ Rectangle#PART_Separator">
                <Setter Property="Grid.Row" Value="1" />
                <Setter Property="Grid.Column" Value="0" />
                <Setter Property="Height" Value="1" />
            </Style>
        </Style>

        <!-- Placement -->
        <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
            <Setter Property="Data" Value="{StaticResource MyNet.Geometry.ChevronDown}" />
        </Style>
        <Style Selector="^[(my|FlyoutAssist.Placement)=Right], ^[(my|FlyoutAssist.Placement)=RightEdgeAlignedTop], ^[(my|FlyoutAssist.Placement)=RightEdgeAlignedBottom]">
            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="Data" Value="{StaticResource MyNet.Geometry.ChevronRight}" />
            </Style>
        </Style>
        <Style Selector="^[(my|FlyoutAssist.Placement)=Left], ^[(my|FlyoutAssist.Placement)=LeftEdgeAlignedTop], ^[(my|FlyoutAssist.Placement)=LeftEdgeAlignedBottom]">
            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="Data" Value="{StaticResource MyNet.Geometry.ChevronLeft}" />
            </Style>
        </Style>
        <Style Selector="^[(my|FlyoutAssist.Placement)=Top], ^[(my|FlyoutAssist.Placement)=TopEdgeAlignedLeft], ^[(my|FlyoutAssist.Placement)=TopEdgeAlignedRight]">
            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="Data" Value="{StaticResource MyNet.Geometry.ChevronUp}" />
            </Style>
        </Style>

        <!-- Styles -->
        <Style Selector="^.Outlined">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Application.Foreground}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="{Binding $self.(my:ThemeAssist.SecondaryColor)}" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.(my:ThemeAssist.SecondaryColor), Opacity={StaticResource MyNet.Opacity.Hover}}" />

            <Style Selector="^.Solid">
                <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
                <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.TertiaryColor)}" />
            </Style>

            <Style Selector="^.Light">
                <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
                <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.TertiaryColor)}" />
            </Style>

            <Style Selector="^.Text">
                <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
                <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.TertiaryColor)}" />
            </Style>

            <Style Selector="^ /template/ Button#PART_PrimaryButton">
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness}" />
            </Style>

            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="BorderThickness" Value="{Binding $parent[TemplatedControl].BorderThickness}" />
            </Style>

            <Style Selector="^ /template/ Rectangle#PART_Separator">
                <Setter Property="Width" Value="0" />
            </Style>
        </Style>

        <Style Selector="^.Text">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Application.Foreground}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />

            <Style Selector="^.Light">
                <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Application.Foreground}" />
                <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.SecondaryColor)}" />
                <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $self.(my:ThemeAssist.SecondaryColor)}" />
            </Style>
        </Style>

        <Style Selector="^.Solid">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="Background" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
            <Setter Property="my:ThemeAssist.HoverForeground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
        </Style>

        <Style Selector="^.Light">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Opacity={StaticResource MyNet.Opacity.Filled}}" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
        </Style>

        <!-- Sizes -->
        <Style Selector="^.Small">
            <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.Button.Small}" />
            <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Button.Small}" />

            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Padding" Value="{my:Thickness Small}" />
            </Style>

            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="Height" Value="{StaticResource MyNet.Size.Glyph.Small}" />
                <Setter Property="Width" Value="{StaticResource MyNet.Size.Glyph.Small}" />
            </Style>
        </Style>
        <Style Selector="^.Medium">
            <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.Button.Medium}" />
            <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Button.Medium}" />

            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Padding" Value="{my:Thickness Default}" />
            </Style>

            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="Height" Value="{StaticResource MyNet.Size.Glyph.Medium}" />
                <Setter Property="Width" Value="{StaticResource MyNet.Size.Glyph.Medium}" />
            </Style>
        </Style>
        <Style Selector="^.Large">
            <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.Button.Large}" />
            <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Button.Large}" />

            <Style Selector="^ /template/ Button#PART_SecondaryButton">
                <Setter Property="Padding" Value="{my:Thickness Default}" />
            </Style>

            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="Height" Value="{StaticResource MyNet.Size.Glyph.Large}" />
                <Setter Property="Width" Value="{StaticResource MyNet.Size.Glyph.Large}" />
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>