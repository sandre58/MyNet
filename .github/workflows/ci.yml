name: CI

on:
  push:
    branches: [ "main", "feature/*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write      # required to push to gh-pages
  pages: write         # required to publish to GitHub Pages
  id-token: write      # required for OIDC authentication if needed

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:

      # Step 1: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # required for NBGV

      # Step 2: Set up .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            10.0.x
            9.0.x
            8.0.x

      # Step 3: Restore project dependencies
      - name: Restore
        run: dotnet restore

      # Step 4: Build the project
      - name: Build
        run: dotnet build --configuration Release --no-restore

      # Step 5: Run tests and collect code coverage
      - name: Run tests with coverage
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage"

      # Step 6: Generate coverage report
      - name: Report coverage
        uses: danielpalme/ReportGenerator-GitHub-Action@v5
        with:
          reports: '**/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'Html;Cobertura;MarkdownSummary'

      # Step 7: Upload coverage report as artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coveragereport

      # Step 8: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./coverage-report
          publish_branch: gh-pages

      # Step 9: Upload coverage to Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: '**/coverage.cobertura.xml'
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}