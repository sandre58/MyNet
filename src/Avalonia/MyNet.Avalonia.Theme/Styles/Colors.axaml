<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:my="http://mynet.com/avalonia">

    <!-- Inverse -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Inverse:not(.Primary):not(.Accent)">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{Binding $parent[TemplatedControl].Foreground}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{Binding $parent[TemplatedControl].Foreground}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{Binding $parent[TemplatedControl].Foreground}" />
        </Style>
    </Style>

    <!-- Primary -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Primary:not(.Inverse)">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
        </Style>
    </Style>

    <!-- Accent -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Accent:not(.Inverse)">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Accent}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Accent}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Accent}" />
        </Style>
    </Style>

    <!-- Dark -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Dark">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Container.Background.Dark}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Container.Background.Dark}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Container.Background.Dark}" />
        </Style>
    </Style>

    <!-- Positive -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Positive">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Positive}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Positive}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Positive}" />
        </Style>
    </Style>

    <!-- Negative -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Negative">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Negative}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Negative}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Negative}" />
        </Style>
    </Style>

    <!-- Warning -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Warning">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Warning}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Warning}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Warning}" />
        </Style>
    </Style>

    <!-- Information -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Information">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Information}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Information}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Information}" />
        </Style>
    </Style>
    
    <!-- Neutral -->
    <Style Selector=":is(TemplatedControl), Border, Ellipse, :is(TextBlock)">
        <Style Selector="^.Neutral">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Neutral}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Neutral}" />
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Neutral}" />
        </Style>
    </Style>
</Styles>
