name: CI - Build and Test

on:
  push:
    branches: [ "main", "feature/*", "hotfix/*" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read       # Required to checkout code
  pages: write         # Required to publish to GitHub Pages
  id-token: write      # Required for OIDC authentication
  checks: write        # Required to publish test results
  pull-requests: write # Required to comment on PRs
  actions: read        # Required to read workflow runs

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          10.0.x
          9.0.x
          8.0.x

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests with coverage
      run: |
        # Run tests with coverage collection using Directory.Build.targets configuration
        dotnet test --no-build --configuration Release `
          --collect:"XPlat Code Coverage" `
          --settings .runsettings `
          --logger GitHubActions `
          --logger "trx" `
          --results-directory ./TestResults

        echo "ðŸ“‹ Test results generated:"
        find ./TestResults -type f -name "*.trx" | head -n 10 | while read file; do
          echo "$file"
        done

        echo "ðŸ“‹ Coverage files from Directory.Build.targets:"
        coverageFiles=$(find ./TestResults -type f -name "*.cobertura.xml" | head -n 10)
        if [ -n "$coverageFiles" ]; then
          echo "$coverageFiles"
        else
          echo "No coverage files found yet"
        fi

    - name: Generate coverage report
      uses: danielpalme/ReportGenerator-GitHub-Action@v5
      with:
        reports: 'TestResults/**/*.cobertura.xml'
        targetdir: 'coveragereport'
        reporttypes: 'HtmlInline_AzurePipelines;Cobertura;MarkdownSummaryGithub'

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: TestResults/**/*.cobertura.xml
        fail_ci_if_error: false
        verbose: true

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: TestResults/**/*.trx
        check_name: 'Test Results'
        comment_mode: changes
        fail_on: 'test failures'

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-linux
        path: coveragereport
