<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <ControlTheme x:Key="{x:Type Label}" TargetType="Label">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Control}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Control}" />
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplate.Icon}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Focusable" Value="False" />

        <Style Selector="^">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{Binding $parent[Control].(TextElement.Foreground)}" />
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
        </Style>
        
        <Setter Property="Template">
            <ControlTemplate TargetType="Label">
                <ContentPresenter Name="PART_ContentPresenter"
                                  Padding="{TemplateBinding Padding}"
                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  CornerRadius="{TemplateBinding CornerRadius}"
                                  FontSize="{TemplateBinding FontSize}"
                                  RecognizesAccessKey="True" />
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.Label.Code" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
        <Setter Property="Foreground" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Secondary}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Label.Small}" />
        <Setter Property="FontFamily" Value="{StaticResource MyNet.Font.FontFamily.Code}" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size}" />
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.Label.Tag" TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Label.Medium}" />
        <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="Depth0" />

        <Style Selector="^">
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="Label">
                <Border Name="PART_Border"
                        my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <ContentPresenter Name="PART_ContentPresenter"
                                      MinWidth="{TemplateBinding MinWidth}"
                                      MinHeight="{TemplateBinding MinHeight}"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      FontSize="{TemplateBinding FontSize}"
                                      RecognizesAccessKey="True"
                                      UseLayoutRounding="True" />
                </Border>
            </ControlTemplate>
        </Setter>

        <!-- Styles -->
        <Style Selector="^.Outlined">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Application.Foreground}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.SecondaryColor)}" />

            <Style Selector="^.Solid">
                <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
                <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.TertiaryColor)}" />
            </Style>

            <Style Selector="^.Light">
                <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
                <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.TertiaryColor)}" />
            </Style>
        </Style>

        <Style Selector="^.Solid">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
        </Style>

        <Style Selector="^.Light">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Opacity={StaticResource MyNet.Opacity.Filled}}" />
        </Style>

        <!-- Sizes -->
        <Style Selector="^.Small">
            <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Label.Small}" />
        </Style>
        <Style Selector="^.Large">
            <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Label.Large}" />
        </Style>
    </ControlTheme>
</ResourceDictionary>
