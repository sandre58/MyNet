<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <ControlTheme x:Key="{x:Type NotificationCard}" TargetType="NotificationCard">
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="{StaticResource MyNet.ShadowDepth.Control}" />
        <Setter Property="ContentTemplate" Value="{StaticResource MyNet.DataTemplate.Icon}" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.Container}" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="UseLayoutRounding" Value="True" />

        <Style Selector="^">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
            <Setter Property="Background" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Contrast=True}" />
            <Setter Property="BorderBrush" Value="{Binding $self.(my:ThemeAssist.SecondaryColor)}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="NotificationCard">
                <LayoutTransformControl Name="PART_LayoutTransformControl" UseRenderTransform="True">
                    <Border my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.Popup}">
                        <Border Name="PART_RootBorder"
                                Padding="{TemplateBinding Padding}"
                                ClipToBounds="True"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Panel>
                                <ContentControl Name="PART_Content" Content="{TemplateBinding Content}">
                                    <ContentControl.DataTemplates>
                                        <my:RegisteredDataTemplate Key="INotification" />
                                    </ContentControl.DataTemplates>
                                </ContentControl>
                                <Button Name="PART_CloseButton"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"
                                        Content="{StaticResource MyNet.Geometry.WindowClose}"
                                        IsVisible="False"
                                        NotificationCard.CloseOnClick="True"
                                        Theme="{StaticResource MyNet.Theme.Button.Embedded.Tool}" />
                            </Panel>
                        </Border>
                    </Border>
                </LayoutTransformControl>
            </ControlTemplate>
        </Setter>

        <ControlTheme.Animations>
            <Animation Easing="QuadraticEaseIn" FillMode="Forward" Duration="0:0:0.45">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="0" />
                    <Setter Property="TranslateTransform.Y" Value="20" />
                    <Setter Property="ScaleTransform.ScaleX" Value="0.85" />
                    <Setter Property="ScaleTransform.ScaleY" Value="0.85" />
                </KeyFrame>
                <KeyFrame Cue="30%">
                    <Setter Property="TranslateTransform.Y" Value="-20" />
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="1" />
                    <Setter Property="TranslateTransform.Y" Value="0" />
                    <Setter Property="ScaleTransform.ScaleX" Value="1" />
                    <Setter Property="ScaleTransform.ScaleY" Value="1" />
                </KeyFrame>
            </Animation>
        </ControlTheme.Animations>

        <Style Selector="^[IsClosing=true] /template/ LayoutTransformControl#PART_LayoutTransformControl">
            <Setter Property="RenderTransformOrigin" Value="50%,0%" />
            <Style.Animations>
                <Animation Easing="QuadraticEaseOut" FillMode="Forward" Duration="0:0:0.75">
                    <KeyFrame Cue="0%">
                        <Setter Property="TranslateTransform.X" Value="0" />
                        <Setter Property="ScaleTransform.ScaleY" Value="1" />
                    </KeyFrame>
                    <KeyFrame Cue="70%">
                        <Setter Property="TranslateTransform.X" Value="800" />
                        <Setter Property="ScaleTransform.ScaleY" Value="1" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="ScaleTransform.ScaleY" Value="0" />
                        <Setter Property="TranslateTransform.X" Value="800" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <Style Selector="^[IsClosing=true]">
            <Style.Animations>
                <Animation Easing="QuadraticEaseOut" FillMode="Forward" Duration="0:0:1.25">
                    <KeyFrame Cue="100%">
                        <Setter Property="IsClosed" Value="True" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <Style Selector="^.Closable /template/ Button#PART_CloseButton">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="^:success">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Positive}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Positive}" />
        </Style>
        <Style Selector="^:warning">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Warning}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Warning}" />
        </Style>
        <Style Selector="^:error">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Negative}" />
            <Setter Property="my:ThemeAssist.SecondaryColor" Value="{DynamicResource MyNet.Brush.Negative}" />
        </Style>
    </ControlTheme>
</ResourceDictionary>