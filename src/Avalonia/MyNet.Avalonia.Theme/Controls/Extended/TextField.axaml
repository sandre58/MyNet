<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    xmlns:sys="clr-namespace:System;assembly=netstandard">

    <sys:Double x:Key="MyNet.Double.Zero">1.0</sys:Double>

    <ControlTheme x:Key="{x:Type my:TextField}" TargetType="my:TextField">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="WatermarkFontSize" Value="{StaticResource MyNet.Font.Size}" />
        <Setter Property="ActiveForeground" Value="{DynamicResource MyNet.Brush.Primary}" />
        <Setter Property="InactiveForeground">
            <Setter.Value>
                <SolidColorBrush Opacity="{StaticResource MyNet.Opacity.Watermark}" Color="{DynamicResource MyNet.Color.Application.Foreground}" />
            </Setter.Value>
        </Setter>
        <Setter Property="InnerForeground">
            <Setter.Value>
                <SolidColorBrush Opacity="{StaticResource MyNet.Opacity.Secondary}" Color="{DynamicResource MyNet.Color.Application.Foreground}" />
            </Setter.Value>
        </Setter>
        <Setter Property="InnerFontSize" Value="{StaticResource MyNet.Font.Size}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Grid Margin="{TemplateBinding Padding}">

                    <!-- Watermark -->
                    <Border Name="PART_BorderWatermark" RenderTransformOrigin="0,0">
                        <TextBlock Name="PART_Watermark"
                                   FontSize="{TemplateBinding WatermarkFontSize}"
                                   FontStyle="{TemplateBinding FontStyle}"
                                   FontWeight="{TemplateBinding FontWeight}"
                                   Foreground="{TemplateBinding InactiveForeground}"
                                   Text="{TemplateBinding Watermark}" />
                    </Border>

                    <Grid ColumnDefinitions="Auto,*,Auto">

                        <!-- Prefix -->
                        <ContentPresenter Name="PART_InnerLeft"
                                          Grid.Column="0"
                                          Padding="{my:Thickness Default,
                                                                 Right}"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding InnerLeftContent}"
                                          Focusable="False"
                                          Foreground="{TemplateBinding InnerForeground}"
                                          TextBlock.FontSize="{TemplateBinding InnerFontSize}" />

                        <!-- Text -->
                        <ContentPresenter Name="PART_ContentPresenter"
                                          Grid.Column="1"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />

                        <!-- Suffix -->
                        <ContentPresenter Name="PART_InnerRight"
                                          Grid.Column="2"
                                          Padding="{my:Thickness Default,
                                                                 Left}"
                                          VerticalAlignment="Center"
                                          Content="{TemplateBinding InnerRightContent}"
                                          Focusable="False"
                                          Foreground="{TemplateBinding InnerForeground}"
                                          TextBlock.FontSize="{TemplateBinding InnerFontSize}" />
                    </Grid>
                </Grid>
            </ControlTemplate>
        </Setter>

        <!-- Default -->
        <Style Selector="^ /template/ ContentPresenter#PART_InnerRight">
            <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InnerRightContent, Converter={x:Static my:NullConverter.IsNotNull}}" />
        </Style>
        <Style Selector="^ /template/ ContentPresenter#PART_InnerLeft">
            <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InnerLeftContent, Converter={x:Static my:NullConverter.IsNotNull}}" />
        </Style>

        <!-- Use Floating Watermark -->
        <Style Selector="^[UseFloatingWatermark=True]">
            <Style Selector="^ /template/ Border#PART_BorderWatermark">
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <MultiBinding Converter="{x:Static my:TransformConverter.Group}">
                            <Binding Path="CurrentFloatingScale" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Path="CurrentFloatingScale" RelativeSource="{RelativeSource TemplatedParent}" />
                            <Binding Source="{StaticResource MyNet.Double.Zero}" />
                            <Binding Converter="{x:Static my:MathConverter.Multiply}"
                                     ConverterParameter="-1"
                                     Path="CurrentFloatingOffset"
                                     RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style Selector="^:not(.no-transitions)">
                <Setter Property="Transitions">
                    <Transitions>
                        <DoubleTransition Easing="CircularEaseOut" Property="CurrentFloatingScale" Duration="{StaticResource MyNet.Timespan.Slide}" />
                        <DoubleTransition Easing="CircularEaseOut" Property="CurrentFloatingOffset" Duration="{StaticResource MyNet.Timespan.Slide}" />
                    </Transitions>
                </Setter>
            </Style>

            <!-- No floating state -->
            <Style Selector="^:empty:not(:floating)">
                <Setter Property="CurrentFloatingScale" Value="1" />
                <Setter Property="CurrentFloatingOffset" Value="0" />

                <Style Selector="^ /template/ ContentPresenter#PART_InnerRight:not(:empty)">
                    <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Watermark, Converter={x:Static my:NullConverter.IsNull}}" />
                </Style>

                <Style Selector="^ /template/ ContentPresenter#PART_InnerLeft:not(:empty)">
                    <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Watermark, Converter={x:Static my:NullConverter.IsNull}}" />
                </Style>
            </Style>

            <!-- Floating state -->
            <Style Selector="^:floating:not(:empty), ^:floating, ^:not(:empty)">
                <Setter Property="CurrentFloatingScale" Value="{Binding $self.FloatingScale}" />
                <Setter Property="CurrentFloatingOffset" Value="{Binding $self.FloatingOffset}" />

                <Style Selector="^ /template/ ContentPresenter#PART_InnerRight:not(:empty)">
                    <Setter Property="IsVisible" Value="True" />
                </Style>

                <Style Selector="^ /template/ ContentPresenter#PART_InnerLeft:not(:empty)">
                    <Setter Property="IsVisible" Value="True" />
                </Style>
            </Style>

            <!-- Focused -->
            <Style Selector="^:active">
                <Style Selector="^ /template/ TextBlock#PART_Watermark">
                    <Setter Property="Foreground" Value="{Binding ActiveForeground, RelativeSource={RelativeSource TemplatedParent}}" />
                </Style>
            </Style>
        </Style>

        <!-- No Floating Watermark -->
        <Style Selector="^[UseFloatingWatermark=False]">

            <!-- No empty -->
            <Style Selector="^:not(:empty)">

                <Style Selector="^ /template/ Border#PART_BorderWatermark">
                    <Setter Property="IsVisible" Value="False" />
                </Style>
            </Style>

            <!-- Empty -->
            <Style Selector="^:empty">
                <Style Selector="^ /template/ ContentPresenter#PART_InnerRight:not(:empty)">
                    <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Watermark, Converter={x:Static my:NullConverter.IsNull}}" />
                </Style>

                <Style Selector="^ /template/ ContentPresenter#PART_InnerLeft:not(:empty)">
                    <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Watermark, Converter={x:Static my:NullConverter.IsNull}}" />
                </Style>

                <Style Selector="^:active">

                    <Style Selector="^ /template/ Border#PART_BorderWatermark">
                        <Setter Property="IsVisible">
                            <Setter.Value>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <CompiledBinding Converter="{x:Static my:NullConverter.IsNull}" Path="InnerRightContent" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <CompiledBinding Converter="{x:Static my:NullConverter.IsNull}" Path="InnerLeftContent" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style Selector="^ /template/ ContentPresenter#PART_InnerRight">
                        <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InnerRightContent, Converter={x:Static my:NullConverter.IsNotNull}}" />
                    </Style>
                    <Style Selector="^ /template/ ContentPresenter#PART_InnerLeft">
                        <Setter Property="IsVisible" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=InnerLeftContent, Converter={x:Static my:NullConverter.IsNotNull}}" />
                    </Style>
                </Style>
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>