<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    xmlns:sys="clr-namespace:System;assembly=netstandard"
                    x:CompileBindings="True">

    <ControlTheme x:Key="MyNet.Theme.ListBoxItem.Embedded.TimePicker" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="{Binding $parent[TimePicker].(my:ItemsAssist.HorizontalAlignment)}" />
        <Setter Property="VerticalAlignment" Value="{Binding $parent[TimePicker].(my:ItemsAssist.VerticalAlignment)}" />
        <Setter Property="Margin" Value="{Binding $parent[TimePicker].(my:ItemsAssist.Margin)}" />
        <Setter Property="Padding" Value="{Binding $parent[TimePicker].(my:ItemsAssist.Padding)}" />
        <Setter Property="CornerRadius" Value="{Binding $parent[TimePicker].(my:ItemsAssist.CornerRadius)}" />
        <Setter Property="Background" Value="{Binding $parent[TimePicker].(my:ItemsAssist.Background)}" />
        <Setter Property="BorderBrush" Value="{Binding $parent[TimePicker].(my:ItemsAssist.BorderBrush)}" />
        <Setter Property="BorderThickness" Value="{Binding $parent[TimePicker].(my:ItemsAssist.BorderThickness)}" />
        <Setter Property="my:ThemeAssist.HoverBackground" Value="{Binding $parent[TimePicker].(my:ItemsAssist.HoverBackground)}" />
        <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{Binding $parent[TimePicker].(my:ItemsAssist.HoverBorderBrush)}" />
        <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $parent[TimePicker].(my:ItemsAssist.HoverForeground)}" />
        <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $parent[TimePicker].(my:ItemsAssist.ActiveBackground)}" />
        <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{Binding $parent[TimePicker].(my:ItemsAssist.ActiveBorderBrush)}" />
        <Setter Property="my:ThemeAssist.ActiveForeground" Value="{Binding $parent[TimePicker].(my:ItemsAssist.ActiveForeground)}" />
        <Setter Property="my:ThemeAssist.RippleColor" Value="{Binding $parent[TimePicker].(my:ItemsAssist.RippleColor)}" />
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="{Binding $parent[TimePicker].(my:ItemsAssist.ShadowDepth)}" />
        <Setter Property="my:IconAssist.Alignment" Value="{Binding $parent[TimePicker].(my:IconAssist.Alignment)}" />
        <Setter Property="my:IconAssist.Margin" Value="{Binding $parent[TimePicker].(my:IconAssist.Margin)}" />
        <Setter Property="my:IconAssist.Opacity" Value="{Binding $parent[TimePicker].(my:IconAssist.Opacity)}" />

        <Style Selector="^:selected">
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>

        <Style Selector="^ /template/ Border#PART_ActiveBorder">
            <Setter Property="my:ClassesAssist.Classes" Value="no-transitions" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type TimePickerPresenter}" TargetType="TimePickerPresenter">
        <Setter Property="Width" Value="242" />
        <Setter Property="MinWidth" Value="242" />
        <Setter Property="MaxHeight" Value="300" />
        <Setter Property="Template">
            <ControlTemplate TargetType="TimePickerPresenter">
                <Border Name="Background"
                        HorizontalAlignment="Stretch"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                    <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid Name="ContentPanel" RowDefinitions="*,Auto">
                            <Grid Name="PART_PickerContainer">
                                <Grid.Styles>
                                    <Style Selector="DateTimePickerPanel">
                                        <Setter Property="ItemHeight" Value="36" />

                                        <Style Selector="^ > ListBoxItem">
                                            <Setter Property="Theme" Value="{StaticResource MyNet.Theme.ListBoxItem.Embedded.TimePicker}" />
                                            <Setter Property="ContentTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock Text="{my:Translation Casing=Title}" />
                                                    </DataTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style>
                                </Grid.Styles>

                                <!-- Column Definitions set in code, ignore here -->
                                <Panel Name="PART_HourHost" Grid.Column="0">
                                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                        <DateTimePickerPanel Name="PART_HourSelector" PanelType="Hour" ShouldLoop="True" />
                                    </ScrollViewer>
                                    <RepeatButton Name="PART_HourUpButton" VerticalAlignment="Top" Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Up}" />
                                    <RepeatButton Name="PART_HourDownButton" VerticalAlignment="Bottom" Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Down}" />
                                </Panel>
                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                <Panel Name="PART_MinuteHost" Grid.Column="2">
                                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                        <DateTimePickerPanel Name="PART_MinuteSelector" PanelType="Minute" ShouldLoop="True" />
                                    </ScrollViewer>
                                    <RepeatButton Name="PART_MinuteUpButton" VerticalAlignment="Top" Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Up}" />
                                    <RepeatButton Name="PART_MinuteDownButton" VerticalAlignment="Bottom" Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Down}" />
                                </Panel>
                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                <Panel Name="PART_SecondHost" Grid.Column="4">
                                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                        <DateTimePickerPanel Name="PART_SecondSelector" PanelType="Second" ShouldLoop="False" />
                                    </ScrollViewer>
                                    <RepeatButton Name="PART_SecondUpButton" VerticalAlignment="Top" Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Up}" />
                                    <RepeatButton Name="PART_SecondDownButton" VerticalAlignment="Bottom" Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Down}" />
                                </Panel>
                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                <Panel Name="PART_PeriodHost" Grid.Column="6">
                                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden">
                                        <DateTimePickerPanel Name="PART_PeriodSelector" PanelType="TimePeriod" ShouldLoop="False" />
                                    </ScrollViewer>
                                    <RepeatButton Name="PART_PeriodUpButton" VerticalAlignment="Top" Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Up}" />
                                    <RepeatButton Name="PART_PeriodDownButton" VerticalAlignment="Bottom" Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Down}" />
                                </Panel>
                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                <Rectangle Name="PART_FirstSpacer"
                                           Grid.Column="1"
                                           Width="1"
                                           HorizontalAlignment="Center"
                                           Fill="{DynamicResource MyNet.Brush.Container.Border}" />
                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                <Rectangle Name="PART_SecondSpacer"
                                           Grid.Column="3"
                                           Width="1"
                                           HorizontalAlignment="Center"
                                           Fill="{DynamicResource MyNet.Brush.Container.Border}" />
                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                <Rectangle Name="PART_ThirdSpacer"
                                           Grid.Column="5"
                                           Width="1"
                                           HorizontalAlignment="Center"
                                           Fill="{DynamicResource MyNet.Brush.Container.Border}" />
                            </Grid>

                            <Grid Name="AcceptDismissGrid" Grid.Row="1" ColumnDefinitions="*,Auto,*">
                                <Button Name="PART_AcceptButton"
                                        Grid.Column="0"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        my:ThemeAssist.PrimaryColor="{DynamicResource MyNet.Brush.Positive}"
                                        Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Validation}">
                                    <PathIcon Classes="Small" Data="{StaticResource MyNet.Geometry.Check}" />
                                </Button>
                                <Rectangle Grid.Column="1" Width="1" Fill="{DynamicResource MyNet.Brush.Container.Border}" />
                                <Button Name="PART_DismissButton"
                                        Grid.Column="2"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        my:ThemeAssist.PrimaryColor="{DynamicResource MyNet.Brush.Negative}"
                                        Theme="{StaticResource MyNet.Theme.RepeatButton.Embedded.Picker.Validation}">
                                    <PathIcon Classes="Small" Data="{StaticResource MyNet.Geometry.Close}" />
                                </Button>
                                <Rectangle Grid.Column="0"
                                           Grid.ColumnSpan="3"
                                           Height="1"
                                           VerticalAlignment="Top"
                                           Fill="{DynamicResource MyNet.Brush.Container.Border}" />
                            </Grid>
                        </Grid>
                    </Border>
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^ /template/ Panel">
            <Style Selector="^:pointerover RepeatButton">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type TimePicker}" TargetType="TimePicker">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Control}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Control}" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.TextField}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="True" />
        <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.TextField.Medium}" />
        <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.TextField.Medium}" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
        <Setter Property="my:IconAssist.Alignment" Value="Left" />
        <Setter Property="my:IconAssist.Margin" Value="{my:Thickness Default, Right}" />
        <Setter Property="my:IconAssist.Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
        <Setter Property="my:TextFieldAssist.InnerFontSize" Value="{Binding $self.FontSize}" />
        <Setter Property="my:TextFieldAssist.InnerPadding" Value="{StaticResource MyNet.Padding.TextField.Inner.Medium}" />
        <Setter Property="my:TextFieldAssist.UnderFontSize" Value="{StaticResource MyNet.Font.Size.SubCaption}" />
        <Setter Property="my:TextFieldAssist.WatermarkFontSize" Value="{Binding $self.FontSize}" />
        <Setter Property="my:TextFieldAssist.Watermark" Value="{x:Static sys:String.Empty}" />
        <Setter Property="my:TextFieldAssist.FloatingScale" Value="0.75" />
        <Setter Property="my:TextFieldAssist.FloatingOffset" Value="12" />
        <Setter Property="my:ItemsAssist.HorizontalContentAlignment" Value="Center" />
        <Setter Property="my:ItemsAssist.VerticalContentAlignment" Value="Center" />
        <Setter Property="my:ItemsAssist.HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.VerticalAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.Margin" Value="0" />
        <Setter Property="my:ItemsAssist.Padding" Value="{StaticResource MyNet.Padding.ListBoxItem}" />
        <Setter Property="my:ItemsAssist.CornerRadius" Value="0" />
        <Setter Property="my:ItemsAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="my:ProxyAssist.Enable" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource {x:Type DataValidationErrors}}" />
        <Setter Property="my:DateTimePickerAssist.WatermarkHour" Value="{my:Resource Hour}" />
        <Setter Property="my:DateTimePickerAssist.WatermarkMinute" Value="{my:Resource Minute}" />
        <Setter Property="my:DateTimePickerAssist.WatermarkSecond" Value="{my:Resource Second}" />
        <Setter Property="my:DateTimePickerAssist.OverrideWatermark" Value="True" />
        <Setter Property="my:GlobalizationAssist.UpdateOnCultureChanged" Value="True" />

        <Style Selector="^">
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border}" />
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Active}}" />
            <Setter Property="my:ThemeAssist.ActiveForeground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border.Hover}" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="{Binding $self.Foreground}" />
            <Setter Property="my:TextFieldAssist.UnderForeground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Secondary}}" />
            <Setter Property="my:TextFieldAssist.InnerForeground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Secondary}}" />
            <Setter Property="my:TextFieldAssist.WatermarkForeground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Watermark}}" />
            <Setter Property="my:FlyoutAssist.Background" Value="{DynamicResource MyNet.Brush.Popup.Background}" />
            <Setter Property="my:FlyoutAssist.Foreground" Value="{DynamicResource MyNet.Brush.Popup.Foreground}" />
            <Setter Property="my:FlyoutAssist.PrimaryColor" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ItemsAssist.Background" Value="Transparent" />
            <Setter Property="my:ItemsAssist.BorderBrush" Value="Transparent" />
            <Setter Property="my:ItemsAssist.BorderThickness" Value="0" />
            <Setter Property="my:ItemsAssist.HoverBackground" Value="{my:Brush $self.(my:FlyoutAssist.Foreground), Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:ItemsAssist.HoverBorderBrush" Value="Transparent" />
            <Setter Property="my:ItemsAssist.HoverForeground" Value="{Binding $self.(my:FlyoutAssist.Foreground)}" />
            <Setter Property="my:ItemsAssist.ActiveBackground" Value="{Binding $self.(my:FlyoutAssist.PrimaryColor)}" />
            <Setter Property="my:ItemsAssist.ActiveForeground" Value="{my:Brush $self.(my:ItemsAssist.ActiveBackground), Contrast=True}" />
            <Setter Property="my:ItemsAssist.RippleColor" Value="{Binding $self.(my:FlyoutAssist.Foreground)}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="TimePicker">
                <DataValidationErrors Name="PART_DataValidation" Theme="{TemplateBinding my:ValidationAssist.Theme}">
                    <Panel Name="PART_RootPanel">

                        <Border Name="PART_MainBorder"
                                my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                        <Border Name="PART_HoverBorder"
                                Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border Name="PART_ActiveBorder"
                                Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                            <my:Ripple Name="PART_Ripple" RippleFill="{TemplateBinding my:ThemeAssist.RippleColor}">
                                <Grid Margin="{TemplateBinding Padding}" ColumnDefinitions="Auto,*,Auto,Auto,Auto">

                                    <!-- Icon -->
                                    <ContentControl x:Name="PART_Icon"
                                                    Grid.Column="0"
                                                    Margin="{TemplateBinding (my:IconAssist.Margin)}"
                                                    VerticalAlignment="Stretch"
                                                    Content="{TemplateBinding (my:IconAssist.Icon)}"
                                                    ContentTemplate="{TemplateBinding (my:IconAssist.IconTemplate)}"
                                                    Focusable="False"
                                                    Opacity="{TemplateBinding (my:IconAssist.Opacity)}">
                                        <ContentControl.IsVisible>
                                            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                                <Binding Converter="{x:Static ObjectConverters.IsNotNull}" Path="(my:IconAssist.Icon)" RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Converter="{x:Static ObjectConverters.IsNotNull}" Path="(my:IconAssist.IconTemplate)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            </MultiBinding>
                                        </ContentControl.IsVisible>
                                    </ContentControl>

                                    <Button Name="PART_FlyoutButton"
                                            Grid.Column="1"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Classes="no-disablable"
                                            Theme="{StaticResource MyNet.Theme.Button.Clean}">
                                        <my:TextField Name="PART_TextField"
                                                      Padding="{TemplateBinding (my:TextFieldAssist.InnerPadding)}"
                                                      HorizontalAlignment="Stretch"
                                                      VerticalAlignment="Center"
                                                      ActiveForeground="{TemplateBinding (my:ThemeAssist.ActiveForeground)}"
                                                      FloatingOffset="{TemplateBinding (my:TextFieldAssist.FloatingOffset)}"
                                                      FloatingScale="{TemplateBinding (my:TextFieldAssist.FloatingScale)}"
                                                      InactiveForeground="{TemplateBinding (my:TextFieldAssist.WatermarkForeground)}"
                                                      InnerFontSize="{TemplateBinding (my:TextFieldAssist.InnerFontSize)}"
                                                      InnerForeground="{TemplateBinding (my:TextFieldAssist.InnerForeground)}"
                                                      InnerLeftContent="{TemplateBinding (my:TextFieldAssist.InnerLeftContent)}"
                                                      InnerRightContent="{TemplateBinding (my:TextFieldAssist.InnerRightContent)}"
                                                      Proxy="{TemplateBinding (my:ProxyAssist.Proxy)}"
                                                      UseFloatingWatermark="{TemplateBinding (my:TextFieldAssist.UseFloatingWatermark)}"
                                                      Watermark="{TemplateBinding (my:TextFieldAssist.Watermark)}"
                                                      WatermarkFontSize="{TemplateBinding (my:TextFieldAssist.WatermarkFontSize)}">

                                            <Grid Name="PART_FlyoutButtonContentGrid">
                                                <Border Name="PART_FirstPickerHost"
                                                        Grid.Column="0"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch">
                                                    <TextBlock Name="PART_HourTextBlock"
                                                               Padding="{my:Thickness Default,
                                                                                      Horizontal}"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               FontFamily="{TemplateBinding FontFamily}"
                                                               FontSize="{TemplateBinding FontSize}"
                                                               FontWeight="{TemplateBinding FontWeight}"
                                                               Text="{TemplateBinding my:DateTimePickerAssist.WatermarkHour}" />
                                                </Border>

                                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                                <Rectangle Name="PART_FirstColumnDivider"
                                                           Grid.Column="1"
                                                           Width="1"
                                                           HorizontalAlignment="Center"
                                                           Fill="{TemplateBinding BorderBrush}" />

                                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                                <Border Name="PART_SecondPickerHost"
                                                        Grid.Column="2"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch">
                                                    <TextBlock Name="PART_MinuteTextBlock"
                                                               Padding="{my:Thickness Default,
                                                                                      Horizontal}"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               FontFamily="{TemplateBinding FontFamily}"
                                                               FontSize="{TemplateBinding FontSize}"
                                                               FontWeight="{TemplateBinding FontWeight}"
                                                               Text="{TemplateBinding my:DateTimePickerAssist.WatermarkMinute}" />
                                                </Border>

                                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                                <Rectangle Name="PART_SecondColumnDivider"
                                                           Grid.Column="3"
                                                           Width="1"
                                                           HorizontalAlignment="Center"
                                                           Fill="{TemplateBinding BorderBrush}" />

                                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                                <Border Name="PART_ThirdPickerHost"
                                                        Grid.Column="4"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch">
                                                    <TextBlock Name="PART_SecondTextBlock"
                                                               Padding="{my:Thickness Default,
                                                                                      Horizontal}"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               FontFamily="{TemplateBinding FontFamily}"
                                                               FontSize="{TemplateBinding FontSize}"
                                                               FontWeight="{TemplateBinding FontWeight}"
                                                               Text="{TemplateBinding my:DateTimePickerAssist.WatermarkSecond}" />
                                                </Border>

                                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                                <Rectangle Name="PART_ThirdColumnDivider"
                                                           Grid.Column="5"
                                                           Width="1"
                                                           HorizontalAlignment="Center"
                                                           Fill="{TemplateBinding BorderBrush}" />

                                                <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                                <Border Name="PART_FourthPickerHost"
                                                        Grid.Column="6"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch">
                                                    <TextBlock Name="PART_PeriodTextBlock"
                                                               Padding="{my:Thickness Default,
                                                                                      Horizontal}"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               FontFamily="{TemplateBinding FontFamily}"
                                                               FontSize="{TemplateBinding FontSize}"
                                                               FontWeight="{TemplateBinding FontWeight}" />
                                                </Border>
                                            </Grid>
                                        </my:TextField>
                                    </Button>

                                    <!-- Clear button -->
                                    <Button Name="PART_ClearButton"
                                            Grid.Column="2"
                                            Classes="Stretch ExtraSmall no-disablable"
                                            Command="{Binding $parent[TimePicker].Clear}"
                                            Content="{StaticResource MyNet.Geometry.Close}"
                                            IsVisible="False"
                                            Theme="{StaticResource MyNet.Theme.Button.Embedded.Tool}" />
                                </Grid>
                            </my:Ripple>
                        </Border>

                        <!-- UnderText -->
                        <Border Name="PART_BorderUnderText">
                            <TextBlock Name="PART_UnderText"
                                       Margin="0 0 0 -15"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Bottom"
                                       FontSize="{TemplateBinding (my:TextFieldAssist.UnderFontSize)}"
                                       FontStyle="{TemplateBinding (my:TextFieldAssist.UnderFontStyle)}"
                                       FontWeight="{TemplateBinding (my:TextFieldAssist.UnderFontWeight)}"
                                       Foreground="{TemplateBinding (my:TextFieldAssist.UnderForeground)}"
                                       IsVisible="{Binding (my:TextFieldAssist.UnderText), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullConverter.IsNotNull}}"
                                       Text="{TemplateBinding (my:TextFieldAssist.UnderText)}" />
                        </Border>

                        <Popup Name="PART_Popup"
                               InheritsTransform="True"
                               IsLightDismissEnabled="True"
                               Placement="Bottom"
                               PlacementTarget="{TemplateBinding}"
                               WindowManagerAddShadowHint="False">
                            <Border MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding (my:FlyoutAssist.Background)}" Theme="{StaticResource MyNet.Theme.Border.Popup}">
                                <Border HorizontalAlignment="Stretch" ClipToBounds="True" CornerRadius="{StaticResource MyNet.CornerRadius.Popup}">
                                    <TimePickerPresenter Name="PART_PickerPresenter" Foreground="{TemplateBinding (my:FlyoutAssist.Foreground)}" />
                                </Border>
                            </Border>
                        </Popup>
                    </Panel>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <!-- Layout -->
        <Style Selector="^.IconRight">
            <Style Selector="^ /template/ ContentControl#PART_Icon">
                <Setter Property="Grid.Column" Value="3" />
                <Setter Property="Margin" Value="{my:Thickness Default, Horizontal}" />
            </Style>
        </Style>

        <Style Selector="^.ButtonRight">
            <Style Selector="^ /template/ ContentControl#PART_Icon">
                <Setter Property="Grid.Column" Value="3" />
                <Setter Property="Margin" Value="0" />
            </Style>
        </Style>

        <Style Selector="^[(my|TextFieldAssist.UseFloatingWatermark)=True]">
            <Style Selector="^ /template/ my|TextField#PART_TextField">
                <Setter Property="Margin" Value="{Binding (my:TextFieldAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:DoubleToThicknessConverter.Top}}" />
            </Style>
            <Style Selector="^ /template/ ToggleButton#PART_RevealButton">
                <Setter Property="Padding" Value="{my:Thickness Default}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_ClearButton">
                <Setter Property="Padding" Value="{my:Thickness Default}" />
            </Style>
        </Style>

        <!-- With clear button -->
        <Style Selector="^[(my|TextFieldAssist.ShowClearButton)=True]">
            <Style Selector="^[(my|ProxyAssist.IsEmpty)=False] /template/ Button#PART_ClearButton">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>

        <!-- Hover -->
        <Style Selector="^:not(:disabled):not(:focus-within):pointerover">
            <Style Selector="^ /template/ Border#PART_HoverBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- Focused -->
        <Style Selector="^:focus-within, ^:flyout-open">
            <Setter Property="BorderThickness" Value="1" />

            <Style Selector="^ /template/ Border#PART_ActiveBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- No time -->
        <Style Selector="^:hasnotime">
            <Style Selector="^[(my|DateTimePickerAssist.OverrideWatermark)=False] /template/ Grid#PART_FlyoutButtonContentGrid">
                <Setter Property="IsVisible" Value="False" />
            </Style>

            <Style Selector="^[(my|TextFieldAssist.UseFloatingWatermark)=False]">
                <Style Selector="^[(my|DateTimePickerAssist.OverrideWatermark)=True] /template/ Button#PART_FlyoutButton > my|TextField">
                    <Setter Property="InactiveForeground" Value="Transparent" />
                </Style>
            </Style>

            <Style Selector="^ /template/ Button#PART_FlyoutButton > my|TextField TextBlock">
                <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Watermark}" />
            </Style>
        </Style>

        <!-- Error -->
        <Style Selector="^:error">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
            <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
            <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
            <Setter Property="my:ThemeAssist.ActiveForeground" Value="{DynamicResource MyNet.Brush.Validation.Error}" />

            <Style Selector="^ /template/ my|Underline#PART_Underline">
                <Setter Property="ActiveBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
            </Style>

            <Style Selector="^ /template/ Border#PART_BorderUnderText">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>

        <!-- Colors -->
        <Style Selector="^.Inverse">
            <Setter Property="Background" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Filled}}" />
            <Setter Property="BorderBrush" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Active}}" />
            <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:FlyoutAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
        </Style>

        <!-- Style -->
        <Style Selector="^.Outlined">
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <Style Selector="^.Transparent">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="Transparent" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="Transparent" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="Transparent" />
        </Style>

        <!-- Layouts -->
        <Style Selector="^.Circle">
            <Setter Property="Padding" Value="8 0 0 0" />
            <Setter Property="my:TextFieldAssist.InnerPadding" Value="0 4 8 4" />
        </Style>

        <!-- Sizes -->
        <Style Selector="^.Small">
            <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.TextField.Small}" />
        </Style>

        <Style Selector="^.Large">
            <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.TextField.Large}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.TimePicker.Underline" TargetType="TimePicker" BasedOn="{StaticResource {x:Type TimePicker}}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.TextField.Underline.Medium}" />
        <Setter Property="my:TextFieldAssist.InnerPadding" Value="{StaticResource MyNet.Padding.TextField.Underline.Inner.Medium}" />
        <Setter Property="my:TextFieldAssist.UseFloatingWatermark" Value="True" />

        <Style Selector="^">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border}" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="Transparent" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="Transparent" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="CornerRadius" Value="0" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="TimePicker">
                <DataValidationErrors Name="PART_DataValidation" Theme="{TemplateBinding my:ValidationAssist.Theme}">
                    <Panel Name="PART_RootPanel">

                        <Border Name="PART_MainBorder"
                                my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                        <Border Name="PART_HoverBorder"
                                Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border ClipToBounds="False">
                            <Grid Margin="{TemplateBinding Padding}" ColumnDefinitions="Auto,*,Auto,Auto,Auto">

                                <!-- Icon -->
                                <ContentControl x:Name="PART_Icon"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding (my:IconAssist.Margin)}"
                                                VerticalAlignment="Stretch"
                                                Content="{TemplateBinding (my:IconAssist.Icon)}"
                                                ContentTemplate="{TemplateBinding (my:IconAssist.IconTemplate)}"
                                                Focusable="False"
                                                Opacity="{TemplateBinding (my:IconAssist.Opacity)}">
                                    <ContentControl.IsVisible>
                                        <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                            <Binding Converter="{x:Static ObjectConverters.IsNotNull}" Path="(my:IconAssist.Icon)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Converter="{x:Static ObjectConverters.IsNotNull}" Path="(my:IconAssist.IconTemplate)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </ContentControl.IsVisible>
                                </ContentControl>

                                <Button Name="PART_FlyoutButton"
                                        Grid.Column="1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Classes="no-disablable"
                                        Theme="{StaticResource MyNet.Theme.Button.Clean}">
                                    <my:TextField Margin="{TemplateBinding (my:TextFieldAssist.InnerPadding)}"
                                                  ActiveForeground="{TemplateBinding (my:ThemeAssist.ActiveForeground)}"
                                                  FloatingOffset="{TemplateBinding (my:TextFieldAssist.FloatingOffset)}"
                                                  FloatingScale="{TemplateBinding (my:TextFieldAssist.FloatingScale)}"
                                                  InactiveForeground="{TemplateBinding (my:TextFieldAssist.WatermarkForeground)}"
                                                  InnerFontSize="{TemplateBinding (my:TextFieldAssist.InnerFontSize)}"
                                                  InnerForeground="{TemplateBinding (my:TextFieldAssist.InnerForeground)}"
                                                  InnerLeftContent="{TemplateBinding (my:TextFieldAssist.InnerLeftContent)}"
                                                  InnerRightContent="{TemplateBinding (my:TextFieldAssist.InnerRightContent)}"
                                                  Proxy="{TemplateBinding (my:ProxyAssist.Proxy)}"
                                                  UseFloatingWatermark="{TemplateBinding (my:TextFieldAssist.UseFloatingWatermark)}"
                                                  Watermark="{TemplateBinding (my:TextFieldAssist.Watermark)}"
                                                  WatermarkFontSize="{TemplateBinding (my:TextFieldAssist.WatermarkFontSize)}">

                                        <Grid Name="PART_FlyoutButtonContentGrid">
                                            <Border Name="PART_FirstPickerHost"
                                                    Grid.Column="0"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch">
                                                <TextBlock Name="PART_HourTextBlock"
                                                           Padding="{my:Thickness Default,
                                                                                  Horizontal}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           FontFamily="{TemplateBinding FontFamily}"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontWeight="{TemplateBinding FontWeight}"
                                                           Text="{TemplateBinding my:DateTimePickerAssist.WatermarkHour}" />
                                            </Border>

                                            <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                            <Rectangle Name="PART_FirstColumnDivider"
                                                       Grid.Column="1"
                                                       Width="1"
                                                       HorizontalAlignment="Center"
                                                       Fill="{TemplateBinding BorderBrush}" />

                                            <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                            <Border Name="PART_SecondPickerHost"
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch">
                                                <TextBlock Name="PART_MinuteTextBlock"
                                                           Padding="{my:Thickness Default,
                                                                                  Horizontal}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           FontFamily="{TemplateBinding FontFamily}"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontWeight="{TemplateBinding FontWeight}"
                                                           Text="{TemplateBinding my:DateTimePickerAssist.WatermarkMinute}" />
                                            </Border>

                                            <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                            <Rectangle Name="PART_SecondColumnDivider"
                                                       Grid.Column="3"
                                                       Width="1"
                                                       HorizontalAlignment="Center"
                                                       Fill="{TemplateBinding BorderBrush}" />

                                            <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                            <Border Name="PART_ThirdPickerHost"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch">
                                                <TextBlock Name="PART_SecondTextBlock"
                                                           Padding="{my:Thickness Default,
                                                                                  Horizontal}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           FontFamily="{TemplateBinding FontFamily}"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontWeight="{TemplateBinding FontWeight}"
                                                           Text="{TemplateBinding my:DateTimePickerAssist.WatermarkSecond}" />
                                            </Border>

                                            <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                            <Rectangle Name="PART_ThirdColumnDivider"
                                                       Grid.Column="5"
                                                       Width="1"
                                                       HorizontalAlignment="Center"
                                                       Fill="{TemplateBinding BorderBrush}" />

                                            <!-- ReSharper disable once Xaml.IndexOutOfGridDefinition -->
                                            <Border Name="PART_FourthPickerHost"
                                                    Grid.Column="6"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch">
                                                <TextBlock Name="PART_PeriodTextBlock"
                                                           Padding="{my:Thickness Default,
                                                                                  Horizontal}"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           FontFamily="{TemplateBinding FontFamily}"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           FontWeight="{TemplateBinding FontWeight}" />
                                            </Border>
                                        </Grid>

                                    </my:TextField>
                                </Button>

                                <!-- Clear button -->
                                <Button Name="PART_ClearButton"
                                        Grid.Column="2"
                                        Margin="{my:Thickness Small,
                                                              Left}"
                                        Classes="no-disablable"
                                        Command="{Binding $parent[TimePicker].Clear}"
                                        Content="{StaticResource MyNet.Geometry.Close}"
                                        IsVisible="False"
                                        Theme="{StaticResource MyNet.Theme.Button.Embedded.Tool}" />
                            </Grid>
                        </Border>

                        <!-- Underline -->
                        <my:Underline x:Name="PART_Underline"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Bottom"
                                      ActiveBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                                      ActiveHeight="1.4"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      CornerRadius="0"
                                      Focusable="False"
                                      InactiveHeight="0"
                                      IsHitTestVisible="False"
                                      Opacity="1" />

                        <!-- UnderText -->
                        <Border Name="PART_BorderUnderText">
                            <TextBlock Name="PART_UnderText"
                                       Margin="0 0 0 -15"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Bottom"
                                       FontSize="{TemplateBinding (my:TextFieldAssist.UnderFontSize)}"
                                       FontStyle="{TemplateBinding (my:TextFieldAssist.UnderFontStyle)}"
                                       FontWeight="{TemplateBinding (my:TextFieldAssist.UnderFontWeight)}"
                                       Foreground="{TemplateBinding (my:TextFieldAssist.UnderForeground)}"
                                       IsVisible="{Binding (my:TextFieldAssist.UnderText), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullConverter.IsNotNull}}"
                                       Text="{TemplateBinding (my:TextFieldAssist.UnderText)}" />
                        </Border>

                        <Popup Name="PART_Popup"
                               InheritsTransform="True"
                               IsLightDismissEnabled="True"
                               Placement="Bottom"
                               PlacementTarget="{TemplateBinding}"
                               WindowManagerAddShadowHint="False">
                            <Border MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}" Theme="{StaticResource MyNet.Theme.Border.Popup}">
                                <Border HorizontalAlignment="Stretch" ClipToBounds="True" CornerRadius="{StaticResource MyNet.CornerRadius.Popup}">
                                    <TimePickerPresenter Name="PART_PickerPresenter" />
                                </Border>
                            </Border>
                        </Popup>
                    </Panel>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <!-- Layout -->
        <Style Selector="^.IconRight">
            <Style Selector="^ /template/ ContentControl#PART_Icon">
                <Setter Property="Margin" Value="{Binding (my:IconAssist.Margin), RelativeSource={RelativeSource TemplatedParent}}" />
            </Style>
        </Style>

        <!-- Focused -->
        <Style Selector="^:focus-within, ^:flyout-open">
            <Setter Property="BorderThickness" Value="0 0 0 1" />

            <Style Selector="^ /template/ my|Underline#PART_Underline">
                <Setter Property="IsActive" Value="True" />
            </Style>
        </Style>

        <!-- Error -->
        <Style Selector="^:error">
            <Setter Property="BorderThickness" Value="0 0 0 1" />
        </Style>

        <Style Selector="^.Inverse">
            <Setter Property="Background" Value="Transparent" />
        </Style>

    </ControlTheme>

</ResourceDictionary>
