<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <ControlTheme x:Key="{x:Type ToggleSwitch}" TargetType="ToggleSwitch">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Control}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Control}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.ToggleSwitch.Medium}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="OnContent" Value="{x:Null}" />
        <Setter Property="OffContent" Value="{x:Null}" />
        <Setter Property="KnobTransitions">
            <Transitions>
                <DoubleTransition Easing="CubicEaseOut" Property="Canvas.Left" Duration="{StaticResource MyNet.Timespan.Switch}" />
            </Transitions>
        </Setter>
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusAdorner">
            <FocusAdornerTemplate>
                <Rectangle Classes="Inner" Theme="{StaticResource MyNet.Theme.Rectangle.Focus}" />
            </FocusAdornerTemplate>
        </Setter>

        <Style Selector="^">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="my:ThemeAssist.IndicatorColor" Value="{DynamicResource MyNet.Brush.Control.Background.Light}" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.ActiveIndicatorColor" Value="{my:Brush $self.(my:ThemeAssist.ActiveBackground), Contrast=True}" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.(my:ThemeAssist.IndicatorColor), Opacity={StaticResource MyNet.Opacity.Hover}}" />
        </Style>
        
        <Setter Property="Template">
            <ControlTemplate TargetType="ToggleSwitch">
                <Grid ColumnDefinitions="Auto, *">
                    <Panel Name="PART_RootPanel" Width="{StaticResource MyNet.Width.ToggleSwitch.Medium}" Height="{StaticResource MyNet.Height.ToggleSwitch.Medium}">
                        <Border Name="PART_MainBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                            <Border.Transitions>
                                <Transitions>
                                    <BrushTransition Property="Background" Duration="{StaticResource MyNet.Timespan.Switch}" />
                                </Transitions>
                            </Border.Transitions>
                        </Border>

                        <Border Name="PART_HoverBorder"
                                Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border BackgroundSizing="OuterBorderEdge"
                                BorderBrush="Transparent"
                                BorderThickness="2"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                TemplatedControl.IsTemplateFocusTarget="True">
                            <Canvas Name="PART_SwitchKnob"
                                    Width="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Medium}"
                                    Height="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Medium}"
                                    HorizontalAlignment="Left">
                                <Panel Name="PART_MovingKnobs"
                                       Width="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Medium}"
                                       Height="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Medium}"
                                       Margin="2 0 0 0">
                                    <Border Name="SwitchKnobIndicator"
                                            my:ShadowAssist.ShadowDepth="Depth1"
                                            Background="{TemplateBinding my:ThemeAssist.IndicatorColor}"
                                            CornerRadius="100" />
                                </Panel>
                            </Canvas>
                        </Border>
                    </Panel>

                    <ContentPresenter Name="PART_OnContentPresenter"
                                      Grid.Column="1"
                                      Margin="8 4"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      Content="{TemplateBinding OnContent}"
                                      ContentTemplate="{TemplateBinding OnContentTemplate}" />
                    <ContentPresenter Name="PART_OffContentPresenter"
                                      Grid.Column="1"
                                      Margin="8 4"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      Content="{TemplateBinding OffContent}"
                                      ContentTemplate="{TemplateBinding OffContentTemplate}" />
                </Grid>
            </ControlTemplate>
        </Setter>

        <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter:empty">
            <Setter Property="Margin" Value="0" />
        </Style>

        <Style Selector="^ /template/ ContentPresenter#PART_OnContentPresenter:empty">
            <Setter Property="Margin" Value="0" />
        </Style>

        <Style Selector="^ /template/ ContentPresenter#PART_OffContentPresenter:empty">
            <Setter Property="Margin" Value="0" />
        </Style>

        <!-- Hover -->
        <Style Selector="^:not(:disabled):pointerover">
            <Style Selector="^ /template/ Border#PART_HoverBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- Unchecked -->
        <Style Selector="^:unchecked">
            <Style Selector="^ /template/ ContentPresenter#PART_OnContentPresenter">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_OffContentPresenter">
                <Setter Property="IsVisible" Value="True" />
                <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
            </Style>
        </Style>

        <!-- Checked -->
        <Style Selector="^:checked">
            <Style Selector="^ /template/ ContentPresenter#PART_OnContentPresenter">
                <Setter Property="IsVisible" Value="True" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_OffContentPresenter">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ Border#PART_MainBorder">
                <Setter Property="Background" Value="{Binding $parent[TemplatedControl].(my:ThemeAssist.ActiveBackground)}" />
            </Style>
            <Style Selector="^ /template/ Border#SwitchKnobIndicator">
                <Setter Property="Background" Value="{Binding $parent[TemplatedControl].(my:ThemeAssist.ActiveIndicatorColor)}" />
            </Style>
        </Style>
        
        <!-- Colors -->
        <Style Selector="^.Inverse">
            <Setter Property="Background" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Filled}}" />
        </Style>

        <!-- Sizes -->
        <Style Selector="^.Small">
            <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.ToggleSwitch.Small}" />
            <Style Selector="^ /template/ Panel#PART_RootPanel">
                <Setter Property="Width" Value="{StaticResource MyNet.Width.ToggleSwitch.Small}" />
                <Setter Property="Height" Value="{StaticResource MyNet.Height.ToggleSwitch.Small}" />
            </Style>
            <Style Selector="^ /template/ Canvas#PART_SwitchKnob">
                <Setter Property="Width" Value="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Small}" />
                <Setter Property="Height" Value="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Small}" />
            </Style>
            <Style Selector="^ /template/ Panel#PART_MovingKnobs">
                <Setter Property="Width" Value="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Small}" />
                <Setter Property="Height" Value="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Small}" />
                <Setter Property="Margin" Value="1 0 0 0" />
            </Style>
        </Style>
        <Style Selector="^.Large">
            <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.ToggleSwitch.Large}" />
            <Style Selector="^ /template/ Panel#PART_RootPanel">
                <Setter Property="Width" Value="{StaticResource MyNet.Width.ToggleSwitch.Large}" />
                <Setter Property="Height" Value="{StaticResource MyNet.Height.ToggleSwitch.Large}" />
            </Style>
            <Style Selector="^ /template/ Canvas#PART_SwitchKnob">
                <Setter Property="Width" Value="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Large}" />
                <Setter Property="Height" Value="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Large}" />
            </Style>
            <Style Selector="^ /template/ Panel#PART_MovingKnobs">
                <Setter Property="Width" Value="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Large}" />
                <Setter Property="Height" Value="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Large}" />
                <Setter Property="Margin" Value="2 0 0 0" />
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.ToggleSwitch.Inner" TargetType="ToggleSwitch" BasedOn="{StaticResource {x:Type ToggleSwitch}}">
        <Setter Property="Template">
            <ControlTemplate TargetType="ToggleSwitch">
                <Panel Name="PART_RootPanel" Width="{StaticResource MyNet.Width.ToggleSwitch.Medium}" Height="{StaticResource MyNet.Height.ToggleSwitch.Medium}">
                    <Border Name="PART_MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}">
                        <Border.Transitions>
                            <Transitions>
                                <BrushTransition Property="Background" Duration="{StaticResource MyNet.Timespan.Switch}" />
                            </Transitions>
                        </Border.Transitions>
                    </Border>

                    <Border Name="PART_HoverBorder"
                            Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border BackgroundSizing="OuterBorderEdge"
                            BorderBrush="Transparent"
                            BorderThickness="2"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            TemplatedControl.IsTemplateFocusTarget="True">
                        <Grid ColumnDefinitions="*,*">
                            <Canvas Name="PART_SwitchKnob"
                                    Grid.ColumnSpan="2"
                                    Width="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Medium}"
                                    Height="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Medium}"
                                    HorizontalAlignment="Left">
                                <Panel Name="PART_MovingKnobs"
                                       Width="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Medium}"
                                       Height="{StaticResource MyNet.Height.ToggleSwitch.Indicator.Medium}"
                                       Margin="2 0 0 0">
                                    <Border Name="SwitchKnobIndicator"
                                            my:ShadowAssist.ShadowDepth="Depth1"
                                            Background="{TemplateBinding my:ThemeAssist.IndicatorColor}"
                                            CornerRadius="100" />
                                </Panel>
                            </Canvas>
                            <ContentPresenter Name="PART_OnContentPresenter"
                                              Grid.Column="0"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding OnContent}"
                                              ContentTemplate="{TemplateBinding OnContentTemplate}" />
                            <ContentPresenter Name="PART_OffContentPresenter"
                                              Grid.Column="1"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Content="{TemplateBinding OffContent}"
                                              ContentTemplate="{TemplateBinding OffContentTemplate}" />
                        </Grid>
                    </Border>
                </Panel>
            </ControlTemplate>
        </Setter>

        <!-- Unchecked -->
        <Style Selector="^:unchecked">
            <Style Selector="^ /template/ ContentPresenter#PART_OffContentPresenter">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- Checked -->
        <Style Selector="^:checked">
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.ActiveBackground), Contrast=True}" />
        </Style>

        <!-- Sizes -->
        <Style Selector="^.Small">
            <Style Selector="^ /template/ ContentPresenter#PART_OnContentPresenter">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#PART_OffContentPresenter">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.ToggleSwitch.Alternate" TargetType="ToggleSwitch" BasedOn="{StaticResource {x:Type ToggleSwitch}}">
        <Setter Property="ClipToBounds" Value="False" />

        <Style Selector="^">
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="my:ThemeAssist.IndicatorColor" Value="{DynamicResource MyNet.Brush.Control.Border}" />
            <Setter Property="my:ThemeAssist.ActiveIndicatorColor" Value="{my:Brush $self.(my:ThemeAssist.ActiveBackground)}" />
            <Setter Property="Foreground" Value="{my:Brush $self.(my:ThemeAssist.IndicatorColor), Contrast=True}" />
        </Style>
        
        <Setter Property="Template">
            <ControlTemplate>
                <Border Name="PART_RootPanelBorder">
                    <DockPanel Name="PART_RootPanelPanel">
                        <Viewbox Width="36"
                                 VerticalAlignment="Center"
                                 ClipToBounds="False"
                                 Stretch="Uniform">
                            <Panel Name="PART_Switch">
                                <Border Name="PART_MainBorder"
                                        Width="36"
                                        Height="14"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding CornerRadius}">
                                    <Border.Transitions>
                                        <Transitions>
                                            <BrushTransition Property="Background" Duration="{StaticResource MyNet.Timespan.Switch}" />
                                        </Transitions>
                                    </Border.Transitions>
                                </Border>

                                <Border Name="PART_HoverBorder"
                                        Width="36"
                                        Height="14"
                                        Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                        BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="{TemplateBinding CornerRadius}"
                                        Theme="{StaticResource MyNet.Theme.Border.State}" />

                                <Canvas Name="PART_SwitchKnob"
                                        Width="16"
                                        Height="20"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center">
                                    <Panel Name="PART_MovingKnobs"
                                           Width="20"
                                           Height="20"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center">
                                        <Ellipse Name="RippleThumb"
                                                 Width="38"
                                                 Height="38"
                                                 Margin="-100"
                                                 HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Fill="{TemplateBinding my:ThemeAssist.IndicatorColor}" />
                                        <AdornerLayer>
                                            <Border Name="SwitchKnobIndicator"
                                                    Width="20"
                                                    Height="20"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    my:ShadowAssist.ShadowDepth="Depth1"
                                                    Background="{TemplateBinding my:ThemeAssist.IndicatorColor}"
                                                    CornerRadius="10">
                                                <Panel Name="PART_ThumbContentContainer">
                                                    <ContentPresenter Name="OnContentPresenter" Content="{TemplateBinding OnContent}" ContentTemplate="{TemplateBinding OnContentTemplate}" />
                                                    <ContentPresenter Name="OffContentPresenter" Content="{TemplateBinding OffContent}" ContentTemplate="{TemplateBinding OffContentTemplate}" />
                                                </Panel>
                                            </Border>
                                        </AdornerLayer>
                                    </Panel>
                                </Canvas>
                            </Panel>
                        </Viewbox>

                        <ContentPresenter Name="PART_ContentPresenter"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </DockPanel>
                </Border>
            </ControlTemplate>
        </Setter>

        <!-- Transitions -->
        <Style Selector="^:not(.no-transitions) /template/ Panel#MovingKnobs">
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Easing="CircularEaseOut" Property="Canvas.Left" Duration="{StaticResource MyNet.Timespan.Switch}" />
                </Transitions>
            </Setter>
        </Style>

        <!-- Ripple -->
        <Style Selector="^ /template/ Ellipse#RippleThumb">
            <Setter Property="Opacity" Value="0" />
        </Style>

        <!-- Hover -->
        <Style Selector="^:pointerover /template/ Ellipse#RippleThumb">
            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Hover}" />
        </Style>

        <!-- Pressed -->
        <Style Selector="^:pressed /template/ Ellipse#RippleThumb">
            <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Active}" />
        </Style>

        <!-- Checked -->
        <Style Selector="^:checked">
            <Setter Property="my:ThemeAssist.IndicatorColor" Value="{my:Brush $self.(my:ThemeAssist.ActiveIndicatorColor)}" />

            <Style Selector="^ /template/ Border#PART_MainBorder">
                <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Active}" />
            </Style>
        </Style>
        
        <!-- Layout -->
        <Style Selector="^.Left /template/ DockPanel#PART_RootPanelPanel > Viewbox">
            <Setter Property="DockPanel.Dock" Value="Right" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.ToggleSwitch.Button" TargetType="ToggleSwitch" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="OnContentTemplate" Value="{StaticResource MyNet.DataTemplate.Icon}" />
        <Setter Property="OffContentTemplate" Value="{StaticResource MyNet.DataTemplate.Icon}" />

        <Style Selector="^">
            <Setter Property="my:ThemeAssist.TertiaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $self.(my:ThemeAssist.TertiaryColor)}" />
            <Setter Property="my:ThemeAssist.ActiveForeground" Value="{my:Brush $self.(my:ThemeAssist.ActiveBackground), Contrast=True}" />
        </Style>
        
        <Setter Property="Template">
            <ControlTemplate>
                <Panel Name="PART_RootPanelPanel">

                    <Border Name="PART_Border"
                            my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}" />

                    <Border Name="PART_ActiveBorder"
                            Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border Name="PART_HoverBorder"
                            Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                            BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                        <my:Ripple Name="PART_Ripple" RippleFill="{TemplateBinding my:ThemeAssist.RippleColor}">
                            <Panel>
                                <Panel Name="PART_SwitchKnob" />
                                <Panel Name="PART_MovingKnobs" />
                                <ContentPresenter Name="PART_OnContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Content="{TemplateBinding OnContent}"
                                                  ContentTemplate="{TemplateBinding OnContentTemplate}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsVisible="{TemplateBinding IsChecked}"
                                                  RecognizesAccessKey="True"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  UseLayoutRounding="False" />
                                <ContentPresenter Name="PART_OffContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Content="{TemplateBinding OffContent}"
                                                  ContentTemplate="{TemplateBinding OffContentTemplate}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsVisible="{TemplateBinding IsChecked, Converter={x:Static BoolConverters.Not}}"
                                                  RecognizesAccessKey="True"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  UseLayoutRounding="False" />
                                <ContentPresenter Name="PART_ContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  RecognizesAccessKey="True"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  UseLayoutRounding="False">
                                    <ContentPresenter.IsVisible>
                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                            <TemplateBinding Converter="{x:Static ObjectConverters.IsNotNull}" Property="Content" />
                                            <TemplateBinding Converter="{x:Static ObjectConverters.IsNull}" Property="OnContent" />
                                            <TemplateBinding Converter="{x:Static ObjectConverters.IsNull}" Property="OffContent" />
                                        </MultiBinding>
                                    </ContentPresenter.IsVisible>
                                </ContentPresenter>
                            </Panel>
                        </my:Ripple>
                    </Border>
                </Panel>
            </ControlTemplate>
        </Setter>

        <!-- Checked -->
        <Style Selector="^:checked">
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.ActiveForeground)}" />

            <Style Selector="^.Shadow /template/ Border#PART_Border">
                <Setter Property="my:ShadowAssist.Darken" Value="True" />
            </Style>

            <Style Selector="^ /template/ Border#PART_ActiveBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- Styles -->
        <Style Selector="^.Solid">
            <Setter Property="Background" Value="{my:Brush $self.(my:ThemeAssist.PrimaryColor), Opacity=0.25}" />
            <Setter Property="Foreground" Value="{Binding $parent[TemplatedControl].Foreground}" />

            <Style Selector="^:checked">
                <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.ActiveForeground)}" />
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.ToggleSwitch.Button.Rounded" TargetType="ToggleSwitch" BasedOn="{StaticResource MyNet.Theme.ToggleButton.Rounded}">
        <Setter Property="Template">
            <ControlTemplate>
                <Panel Name="PART_RootPanelPanel">

                    <Ellipse Name="PART_MainEllipse"
                             my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                             Fill="{TemplateBinding Background}"
                             Stroke="{TemplateBinding BorderBrush}"
                             StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:ThicknessToDoubleConverter.Left}}" />

                    <Ellipse Name="PART_ActiveEllipse"
                             Fill="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                             Stroke="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                             StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:ThicknessToDoubleConverter.Left}}"
                             Theme="{StaticResource MyNet.Theme.Ellipse.State}" />

                    <Ellipse Name="PART_HoverEllipse"
                             Fill="{TemplateBinding my:ThemeAssist.HoverBackground}"
                             Stroke="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                             StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:ThicknessToDoubleConverter.Left}}"
                             Theme="{StaticResource MyNet.Theme.Ellipse.State}" />

                    <Border ClipToBounds="True" CornerRadius="9999">
                        <my:Ripple Name="PART_Ripple" RippleFill="{TemplateBinding my:ThemeAssist.RippleColor}">
                            <Panel>
                                <Panel Name="PART_SwitchKnob" />
                                <Panel Name="PART_MovingKnobs" />
                                <ContentPresenter Name="PART_OnContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Content="{TemplateBinding OnContent}"
                                                  ContentTemplate="{TemplateBinding OnContentTemplate}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsVisible="{TemplateBinding IsChecked}"
                                                  RecognizesAccessKey="True"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  UseLayoutRounding="False" />
                                <ContentPresenter Name="PART_OffContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Content="{TemplateBinding OffContent}"
                                                  ContentTemplate="{TemplateBinding OffContentTemplate}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  IsVisible="{TemplateBinding IsChecked, Converter={x:Static BoolConverters.Not}}"
                                                  RecognizesAccessKey="True"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  UseLayoutRounding="False" />
                                <ContentPresenter Name="PART_ContentPresenter"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Content="{TemplateBinding Content}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  CornerRadius="{TemplateBinding CornerRadius}"
                                                  Foreground="{TemplateBinding Foreground}"
                                                  RecognizesAccessKey="True"
                                                  TextElement.FontSize="{TemplateBinding FontSize}"
                                                  TextElement.FontWeight="{TemplateBinding FontWeight}"
                                                  UseLayoutRounding="False">
                                    <ContentPresenter.IsVisible>
                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                            <TemplateBinding Converter="{x:Static ObjectConverters.IsNotNull}" Property="Content" />
                                            <TemplateBinding Converter="{x:Static ObjectConverters.IsNull}" Property="OnContent" />
                                            <TemplateBinding Converter="{x:Static ObjectConverters.IsNull}" Property="OffContent" />
                                        </MultiBinding>
                                    </ContentPresenter.IsVisible>
                                </ContentPresenter>
                            </Panel>
                        </my:Ripple>
                    </Border>
                </Panel>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.ToggleSwitch.Button.Icon" TargetType="ToggleSwitch" BasedOn="{StaticResource MyNet.Theme.ToggleButton.Icon}">
        <Setter Property="Template">
            <ControlTemplate TargetType="ToggleSwitch">
                <Border Name="PART_Border">
                    <my:Ripple Name="PART_Ripple"
                               IsCentered="True"
                               RippleFill="{TemplateBinding my:ThemeAssist.RippleColor}"
                               SizeMultiplier="3">
                        <Panel>
                            <Panel Name="PART_SwitchKnob" />
                            <Panel Name="PART_MovingKnobs" />
                            <PathIcon Width="{TemplateBinding Width}"
                                      Height="{TemplateBinding Height}"
                                      Background="{TemplateBinding Background}"
                                      Data="{TemplateBinding OnContent}"
                                      Focusable="False"
                                      Foreground="{TemplateBinding Foreground}"
                                      IsVisible="{TemplateBinding IsChecked}" />
                            <PathIcon Width="{TemplateBinding Width}"
                                      Height="{TemplateBinding Height}"
                                      Background="{TemplateBinding Background}"
                                      Data="{TemplateBinding OffContent}"
                                      Focusable="False"
                                      Foreground="{TemplateBinding Foreground}"
                                      IsVisible="{TemplateBinding IsChecked, Converter={x:Static BoolConverters.Not}}" />
                            <PathIcon Width="{TemplateBinding Width}"
                                      Height="{TemplateBinding Height}"
                                      Background="{TemplateBinding Background}"
                                      Data="{TemplateBinding Content}"
                                      Focusable="False"
                                      Foreground="{TemplateBinding Foreground}">
                                <PathIcon.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <TemplateBinding Converter="{x:Static ObjectConverters.IsNotNull}" Property="Content" />
                                        <TemplateBinding Converter="{x:Static ObjectConverters.IsNull}" Property="OnContent" />
                                        <TemplateBinding Converter="{x:Static ObjectConverters.IsNull}" Property="OffContent" />
                                    </MultiBinding>
                                </PathIcon.IsVisible>
                            </PathIcon>
                        </Panel>
                    </my:Ripple>
                </Border>
            </ControlTemplate>
        </Setter>
    </ControlTheme>
</ResourceDictionary>