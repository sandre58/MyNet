<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="using:MyNet.Avalonia.Theme.Converters"
                    xmlns:my="http://mynet.com/avalonia">

    <DataTemplate x:Key="MyNet.DataTemplates.NavigationMenuItem.Icon" x:DataType="StreamGeometry">
        <my:OutlinedIcon Classes="Light Primary" Data="{Binding}" IsActive="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=my:NavigationMenuItem}, Path=IsActive, Mode=TwoWay}" />
    </DataTemplate>

    <!-- Menu -->
    <ControlTheme x:Key="{x:Type my:NavigationMenu}" TargetType="my:NavigationMenu">
        <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        <Setter Property="SubMenuIndent" Value="24" />
        <Setter Property="IconTemplate" Value="{StaticResource MyNet.DataTemplates.NavigationMenuItem.Icon}" />
        <Setter Property="CollapseWidth" Value="50" />
        <Setter Property="ExpandWidth" Value="300" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Spacing="{StaticResource MyNet.Spacing.ExtraSmall}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate TargetType="my:NavigationMenu">
                <DockPanel LastChildFill="True">

                    <!-- Header -->
                    <ContentPresenter Content="{TemplateBinding Header}" DockPanel.Dock="Top" />

                    <!-- Footer -->
                    <ContentPresenter Content="{TemplateBinding Footer}" DockPanel.Dock="Bottom" />

                    <!-- Items -->
                    <ScrollViewer HorizontalAlignment="Stretch"
                                  AllowAutoHide="True"
                                  HorizontalScrollBarVisibility="Disabled"
                                  VerticalScrollBarVisibility="Auto">
                        <ScrollViewer.Styles>
                            <Style Selector="ScrollViewer /template/ ScrollBar">
                                <Setter Property="Opacity" Value="0" />
                            </Style>
                            <Style Selector="ScrollViewer:pointerover">
                                <Style Selector="^ /template/ ScrollBar#PART_HorizontalScrollBar">
                                    <Setter Property="Opacity" Value="1" />
                                </Style>
                                <Style Selector="^ /template/ ScrollBar#PART_VerticalScrollBar">
                                    <Setter Property="Opacity" Value="1" />
                                </Style>
                            </Style>
                        </ScrollViewer.Styles>
                        <ItemsPresenter ItemsPanel="{TemplateBinding ItemsPanel}" />
                    </ScrollViewer>
                </DockPanel>
            </ControlTemplate>
        </Setter>

        <!-- Collapse/Expand -->
        <Style Selector="^:not(:horizontal-collapsed)">
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Easing="{StaticResource MyNet.Transition.SineEaseInOut.NavigationMenu}" Property="Width" Duration="{StaticResource MyNet.Timespan.Slide}" />
                </Transitions>
            </Setter>
            <Setter Property="Width" Value="{Binding $self.ExpandWidth}" />
        </Style>

        <Style Selector="^:horizontal-collapsed">
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Easing="{StaticResource MyNet.Transition.SineEaseInOut.NavigationMenu}" Property="Width" Duration="{StaticResource MyNet.Timespan.Slide}" />
                </Transitions>
            </Setter>
            <Setter Property="Width" Value="{Binding $self.CollapseWidth}" />
            <Setter Property="Grid.IsSharedSizeScope" Value="False" />
        </Style>
    </ControlTheme>

    <!-- Menu Item -->
    <ControlTemplate x:Key="MyNet.Template.NavigationMenuItem" TargetType="my:NavigationMenuItem">
        <Grid RowDefinitions="Auto, *">
            <Border Name="PART_MainBorder"
                    Grid.Row="0"
                    Height="{Binding $parent[my:NavigationMenu].CollapseWidth}"
                    HorizontalAlignment="Stretch"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="{TemplateBinding CornerRadius}">
                <Panel Name="PART_RootPanel">

                    <Border Name="PART_HoverBorder"
                            Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />
                    <Border Name="PART_ActiveBorder"
                            Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Theme="{StaticResource MyNet.Theme.Border.State}" />

                    <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                        <my:Ripple Name="PART_Ripple" Padding="{TemplateBinding Padding}">
                            <Grid Name="PART_RootGrid" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                                <Grid.Margin>
                                    <MultiBinding Converter="{x:Static c:NavigationMenuMarginConverter.Default}">
                                        <Binding Path="SubMenuIndent" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="Level" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </Grid.Margin>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="Expander" />
                                </Grid.ColumnDefinitions>

                                <!-- Icon -->
                                <ContentPresenter Name="PART_IconPresenter"
                                                  Width="{Binding $parent[my:NavigationMenu].CollapseWidth}"
                                                  HorizontalContentAlignment="Center"
                                                  Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding IconTemplate, RelativeSource={RelativeSource TemplatedParent}}" />

                                <!-- Header -->
                                <ContentPresenter Name="PART_HeaderPresenter"
                                                  Grid.Column="1"
                                                  Margin="{my:Thickness Medium,
                                                                        Right}"
                                                  Content="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                  IsVisible="{Binding Header, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullConverter.IsNotNull}}" />

                                <!-- Glyph -->
                                <PathIcon Name="PART_ExpanderIcon"
                                          Grid.Column="2"
                                          Classes="Glyph DropDown"
                                          Foreground="{TemplateBinding BorderBrush}" />

                                <!-- Popup -->
                                <Popup Name="PART_Popup"
                                       Grid.Column="0"
                                       IsLightDismissEnabled="True"
                                       Placement="RightEdgeAlignedTop"
                                       PlacementTarget="{Binding #PART_MainBorder}">
                                    <Border HorizontalAlignment="Stretch" Theme="{StaticResource MyNet.Theme.Border.Popup}">
                                        <StackPanel Name="PART_OverflowPanel" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </my:Ripple>
                    </Border>
                </Panel>
            </Border>

            <!-- Sub Items -->
            <ItemsPresenter Name="PART_ItemsPresenter"
                            Grid.Row="1"
                            Margin="0 4 0 0"
                            VerticalAlignment="Top"
                            Grid.IsSharedSizeScope="True"
                            IsVisible="{Binding Items.Count, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:ListConverter.Any}}"
                            ItemsPanel="{Binding ItemsPanel, RelativeSource={RelativeSource TemplatedParent}}"
                            RenderTransformOrigin="0.5,0">
                <ItemsPresenter.Transitions>
                    <Transitions>
                        <DoubleTransition Property="Height" Duration="0.1" />
                        <TransformOperationsTransition Property="RenderTransform" Duration="0.1" />
                    </Transitions>
                </ItemsPresenter.Transitions>
            </ItemsPresenter>
        </Grid>
    </ControlTemplate>

    <ControlTheme x:Key="{x:Type my:NavigationMenuItem}" TargetType="my:NavigationMenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border}" />
        <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
        <Setter Property="my:ThemeAssist.HoverForeground" Value="{my:Brush $self.Foreground}" />
        <Setter Property="my:ThemeAssist.ActiveBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Active}}" />
        <Setter Property="my:ThemeAssist.ActiveForeground" Value="{my:Brush $self.Foreground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.Menu}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="{my:Thickness Small, Vertical}" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ItemsPanel">
            <ItemsPanelTemplate>
                <my:OverflowStackPanel />
            </ItemsPanelTemplate>
        </Setter>
        <Setter Property="Template" Value="{StaticResource MyNet.Template.NavigationMenuItem}" />

        <Style Selector="^:empty /template/ PathIcon#PART_ExpanderIcon">
            <Setter Property="IsVisible" Value="False" />
        </Style>

        <Style Selector="^[IsSeparator=False]">
            <Setter Property="Cursor" Value="Hand" />

            <!-- Transitions -->
            <Style Selector="^:not(.no-transitions) /template/ Border#PART_HoverBorder">
                <Setter Property="Transitions">
                    <Transitions>
                        <DoubleTransition Easing="LinearEasing" Property="Opacity" Duration="{StaticResource MyNet.Timespan.Opacity}" />
                    </Transitions>
                </Setter>
            </Style>

            <Style Selector="^:not(.no-transitions) /template/ Border#PART_ActiveBorder">
                <Setter Property="Transitions">
                    <Transitions>
                        <DoubleTransition Easing="LinearEasing" Property="Opacity" Duration="{StaticResource MyNet.Timespan.Opacity}" />
                    </Transitions>
                </Setter>
            </Style>

            <!-- Hover -->
            <Style Selector="^:not(:disabled):not(:selected):pointerover">

                <Style Selector="^ /template/ Border#PART_HoverBorder">
                    <Setter Property="Opacity" Value="1" />
                </Style>

                <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                    <Setter Property="Foreground" Value="{TemplateBinding my:ThemeAssist.HoverForeground}" />
                </Style>
            </Style>

            <!-- Selected -->
            <Style Selector="^:selected">

                <Style Selector="^ /template/ Border#PART_ActiveBorder">
                    <Setter Property="Opacity" Value="1" />
                </Style>

                <Style Selector="^ /template/ ContentPresenter#PART_HeaderPresenter">
                    <Setter Property="Foreground" Value="{TemplateBinding my:ThemeAssist.ActiveForeground}" />
                </Style>
            </Style>

            <!-- Disabled -->
            <Style Selector="^:disabled /template/ Border#PART_MainBorder">
                <Setter Property="Opacity" Value="{StaticResource MyNet.Opacity.Disabled}" />
            </Style>
        </Style>

        <!-- Sub Items Collapsed -->
        <Style Selector="^:vertical-collapsed /template/ ItemsPresenter#PART_ItemsPresenter">
            <Setter Property="Height" Value="0" />
            <Setter Property="RenderTransform" Value="scale(1,0)" />
        </Style>

        <Style Selector="^:vertical-collapsed /template/ PathIcon#PART_ExpanderIcon">
            <Setter Property="RenderTransform" Value="rotate(180deg)" />
        </Style>

        <!-- Collapsed -->
        <Style Selector="^:horizontal-collapsed:first-level">
            <Style Selector="^ /template/ Border#PART_MainBorder">
                <Setter Property="ToolTip.Tip">
                    <Template>
                        <ContentPresenter Content="{TemplateBinding my:NavigationMenuItem.Header}" ContentTemplate="{TemplateBinding my:NavigationMenuItem.HeaderTemplate}" />
                    </Template>
                </Setter>
                <Setter Property="ToolTip.ShowDelay" Value="0" />
            </Style>
            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="IsVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ ItemsPresenter#PART_ItemsPresenter">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>

        <Style Selector="^:horizontal-collapsed:not(:first-level)">
            <Style Selector="^ /template/ PathIcon#PART_ExpanderIcon">
                <Setter Property="RenderTransform" Value="rotate(-90deg)" />
            </Style>
        </Style>

        <Style Selector="^:horizontal-collapsed:first-level">
            <Setter Property="Grid.IsSharedSizeScope" Value="True" />
        </Style>

        <!-- Separator -->
        <Style Selector="^[IsSeparator=True]">
            <Setter Property="Background" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Filled}}" />
            <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size}" />
            <Setter Property="Margin" Value="{my:Thickness Top=10, Bottom=2}" />
            <Setter Property="Template">
                <ControlTemplate>
                    <Border Name="PART_MainBorder"
                            Padding="{TemplateBinding Padding}"
                            HorizontalAlignment="Stretch"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Opacity="{StaticResource MyNet.Opacity.Secondary}">

                        <Grid Name="PART_RootGrid" HorizontalAlignment="Stretch" VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!-- Icon -->
                            <Grid Width="{Binding $parent[my:NavigationMenu].CollapseWidth}" IsVisible="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullConverter.IsNotNull}}">
                                <Viewbox Width="14" Height="14" HorizontalAlignment="Center">
                                    <ContentPresenter Name="PART_IconPresenter" Content="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" ContentTemplate="{Binding IconTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Viewbox>
                            </Grid>

                            <!-- Header -->
                            <ContentPresenter Name="PART_HeaderPresenter"
                                              Grid.Column="1"
                                              Margin="{my:Thickness Medium,
                                                                    Right}"
                                              HorizontalAlignment="Center"
                                              Content="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"
                                              ContentTemplate="{Binding HeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                              IsVisible="{Binding Header, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullConverter.IsNotNull}}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter>
        </Style>
    </ControlTheme>

</ResourceDictionary>