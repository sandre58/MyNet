<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <ControlTheme x:Key="MyNet.Theme.Button.Embedded.Slider.Horizontal" TargetType="RepeatButton">
        <Setter Property="Template">
            <ControlTemplate TargetType="RepeatButton">
                <Grid>
                    <Border Name="FocusTarget" Margin="0 -10" Background="Transparent" />
                    <Border Name="TrackBackground"
                            Height="{Binding $parent[Slider].(my:SliderAssist.BarSize)}"
                            Margin="{TemplateBinding Margin}"
                            VerticalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}" />
                </Grid>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.Button.Embedded.Slider.Vertical" TargetType="RepeatButton">
        <Setter Property="Template">
            <ControlTemplate TargetType="RepeatButton">
                <Grid>
                    <Border Name="FocusTarget" Margin="0 -10" Background="Transparent" />
                    <Border Name="TrackBackground"
                            Width="{Binding $parent[Slider].(my:SliderAssist.BarSize)}"
                            Margin="{TemplateBinding Margin}"
                            HorizontalAlignment="Center"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}" />
                </Grid>
            </ControlTemplate>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.Thumb.Embedded.Slider" TargetType="{x:Type Thumb}" BasedOn="{StaticResource MyNet.Theme.Thumb.Ellipse}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Height" Value="{Binding $parent[Slider].(my:SliderAssist.ThumbSize)}" />
        <Setter Property="Width" Value="{Binding $parent[Slider].(my:SliderAssist.ThumbSize)}" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{Binding $parent[Slider].(my:ThemeAssist.ActiveBackground)}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="my:ThemeAssist.HoverBackground" Value="Transparent" />
        <Setter Property="my:ThemeAssist.ActiveBackground" Value="{my:Brush $self.BorderBrush, Lighten=1}" />
        <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{my:Brush $self.BorderBrush, Lighten=1}" />
        <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{my:Brush $self.BorderBrush, Lighten=1}" />

        <Setter Property="Template">
            <ControlTemplate TargetType="Thumb">
                <Panel Name="PART_RootPanel">

                    <Ellipse Name="PART_MainEllipse"
                             my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                             Fill="{TemplateBinding Background}"
                             Stroke="{TemplateBinding BorderBrush}"
                             StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:ThicknessToDoubleConverter.Left}}" />

                    <Ellipse Name="PART_HoverEllipse"
                             Fill="{TemplateBinding my:ThemeAssist.HoverBackground}"
                             Stroke="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                             StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:ThicknessToDoubleConverter.Left}}"
                             Theme="{StaticResource MyNet.Theme.Ellipse.State}" />

                    <Ellipse Name="PART_ActiveEllipse"
                             Fill="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                             Stroke="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                             StrokeThickness="{Binding BorderThickness, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:ThicknessToDoubleConverter.Left}}"
                             Theme="{StaticResource MyNet.Theme.Ellipse.State}" />

                    <Panel Name="PART_InnerPanel">
                        <Grid Name="InnerBubble"
                              Width="{Binding Bounds.Width, ElementName=PART_ContentContainer}"
                              Height="{Binding Bounds.Height, ElementName=PART_ContentContainer}"
                              ColumnDefinitions="Auto"
                              RowDefinitions="Auto, Auto">
                            <Polygon Grid.Row="1"
                                     HorizontalAlignment="Center"
                                     Fill="{Binding Background, ElementName=PART_ContentContainer}"
                                     Points="0,0 4.5,5 9,0"
                                     RenderTransform="translate(0px,-0.5px)" />

                            <Border Name="PART_Positioner" Grid.Row="0">
                                <Border Name="PART_ContentContainer">
                                    <ContentPresenter Name="PART_ContentPresenter" />
                                </Border>
                            </Border>
                        </Grid>
                    </Panel>
                </Panel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^ /template/ Panel#PART_InnerPanel">
            <Setter Property="Opacity" Value="0" />
            <Setter Property="RenderTransform" Value="scale(0)" />
        </Style>

        <Style Selector="^ /template/ Grid#InnerBubble">
            <Setter Property="ClipToBounds" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="RenderTransform" Value="translate(0px, -16px)" />
        </Style>

        <Style Selector="^ /template/ Border#PART_ContentContainer">
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Popup.Background}" />
            <Setter Property="CornerRadius" Value="2" />
            <Setter Property="Padding" Value="4, 8" />
        </Style>

        <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
            <Setter Property="Content" Value="{Binding $parent[Slider].Value}" />
        </Style>

        <Style Selector="^:not(.no-transitions) /template/ Panel#PART_InnerPanel">
            <Setter Property="Transitions">
                <Transitions>
                    <DoubleTransition Easing="CircularEaseOut" Property="Opacity" Duration="{StaticResource MyNet.Timespan.Slide}" />
                    <TransformOperationsTransition Easing="CircularEaseOut" Property="RenderTransform" Duration="{StaticResource MyNet.Timespan.Slide}" />
                </Transitions>
            </Setter>
        </Style>

        <Style Selector="^[(my|SliderAssist.ShowValueOnMouseOver)=True]:pointerover /template/ Panel#PART_InnerPanel">
            <Setter Property="Opacity" Value="1" />
            <Setter Property="RenderTransform" Value="scale(1)" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type Slider}" TargetType="Slider">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Control}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Control}" />
        <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.SubCaption}" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="TickFrequency" Value="1" />
        <Setter Property="my:SliderAssist.ThumbTheme" Value="{StaticResource MyNet.Theme.Thumb.Embedded.Slider}" />
        <Setter Property="FocusAdorner">
            <FocusAdornerTemplate>
                <Rectangle Theme="{StaticResource MyNet.Theme.Rectangle.Focus}" />
            </FocusAdornerTemplate>
        </Setter>
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource {x:Type DataValidationErrors}}" />

        <Style Selector="^">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.IndicatorColor" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border}" />
        </Style>

        <Style Selector="^:horizontal">
            <Setter Property="Template">
                <ControlTemplate TargetType="Slider">
                    <DataValidationErrors Name="PART_DataValidation" Theme="{TemplateBinding my:ValidationAssist.Theme}">
                        <Grid Name="SliderContainer" Margin="{TemplateBinding Padding}" RowDefinitions="Auto,Auto,Auto">
                            <Grid.Styles>
                                <Style Selector="my|TickBar">
                                    <Setter Property="ReservedSpace" Value="{Binding #PART_Track.Thumb.Bounds, FallbackValue={x:Null}}" />
                                </Style>
                            </Grid.Styles>
                            <my:TickBar Name="TopTickBar"
                                        Grid.Row="0"
                                        Height="{TemplateBinding my:SliderAssist.TickLength}"
                                        VerticalAlignment="Bottom"
                                        Fill="{TemplateBinding BorderBrush}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                        IsVisible="False"
                                        Maximum="{TemplateBinding Slider.Maximum}"
                                        Minimum="{TemplateBinding Slider.Minimum}"
                                        Orientation="{TemplateBinding Slider.Orientation}"
                                        Placement="Top"
                                        TickFrequency="{TemplateBinding Slider.TickFrequency}"
                                        TickMode="{TemplateBinding my:SliderAssist.TickMode}"
                                        Ticks="{TemplateBinding Ticks}" />
                            <my:TickBar Name="BottomTickBar"
                                        Grid.Row="2"
                                        Height="{TemplateBinding my:SliderAssist.TickLength}"
                                        VerticalAlignment="Top"
                                        Fill="{TemplateBinding BorderBrush}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                        IsVisible="False"
                                        Maximum="{TemplateBinding Slider.Maximum}"
                                        Minimum="{TemplateBinding Slider.Minimum}"
                                        Orientation="{TemplateBinding Slider.Orientation}"
                                        Placement="Bottom"
                                        TickFrequency="{TemplateBinding Slider.TickFrequency}"
                                        TickMode="{TemplateBinding my:SliderAssist.TickMode}"
                                        Ticks="{TemplateBinding Ticks}" />
                            <Border Grid.Row="1"
                                    Height="{TemplateBinding my:SliderAssist.BarSize}"
                                    VerticalAlignment="Center"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                            <Track Name="PART_Track"
                                   Grid.Row="1"
                                   IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                   Maximum="{TemplateBinding Maximum}"
                                   Minimum="{TemplateBinding Minimum}"
                                   Orientation="Horizontal"
                                   Value="{TemplateBinding Value, Mode=TwoWay}">
                                <Track.DecreaseButton>
                                    <RepeatButton Name="PART_DecreaseButton"
                                                  Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                                                  CornerRadius="{TemplateBinding CornerRadius, Converter={x:Static my:CornerRadiusConverter.Left}}"
                                                  Focusable="False"
                                                  Theme="{StaticResource MyNet.Theme.Button.Embedded.Slider.Horizontal}" />
                                </Track.DecreaseButton>
                                <Track.IncreaseButton>
                                    <RepeatButton Name="PART_IncreaseButton"
                                                  Background="Transparent"
                                                  CornerRadius="{TemplateBinding CornerRadius, Converter={x:Static my:CornerRadiusConverter.Right}}"
                                                  Focusable="False"
                                                  Theme="{StaticResource MyNet.Theme.Button.Embedded.Slider.Horizontal}" />
                                </Track.IncreaseButton>
                                <Thumb Name="thumb"
                                       my:SliderAssist.ShowValueOnMouseOver="{TemplateBinding my:SliderAssist.ShowValueOnMouseOver}"
                                       DataContext="{TemplateBinding Value}"
                                       Theme="{TemplateBinding my:SliderAssist.ThumbTheme}" />
                            </Track>
                        </Grid>
                    </DataValidationErrors>
                </ControlTemplate>
            </Setter>

            <Style Selector="^[IsDirectionReversed=True] /template/ RepeatButton#PART_DecreaseButton">
                <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={x:Static my:CornerRadiusConverter.Right}}" />
            </Style>
            <Style Selector="^[IsDirectionReversed=True] /template/ RepeatButton#PART_IncreaseButton">
                <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={x:Static my:CornerRadiusConverter.Left}}" />
            </Style>
        </Style>
        <Style Selector="^:vertical">
            <Setter Property="Template">
                <ControlTemplate>
                    <DataValidationErrors Name="PART_DataValidation" Theme="{TemplateBinding my:ValidationAssist.Theme}">
                        <Grid Name="SliderContainer" Margin="{TemplateBinding Padding}" ColumnDefinitions="Auto,Auto,Auto">
                            <Grid.Styles>
                                <Style Selector="my|TickBar">
                                    <Setter Property="ReservedSpace" Value="{Binding #PART_Track.Thumb.Bounds, FallbackValue={x:Null}}" />
                                </Style>
                            </Grid.Styles>
                            <my:TickBar Name="LeftTickBar"
                                        Grid.Column="0"
                                        Width="{TemplateBinding my:SliderAssist.TickLength}"
                                        HorizontalAlignment="Right"
                                        Fill="{TemplateBinding BorderBrush}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                        IsVisible="False"
                                        Maximum="{TemplateBinding Slider.Maximum}"
                                        Minimum="{TemplateBinding Slider.Minimum}"
                                        Orientation="{TemplateBinding Slider.Orientation}"
                                        Placement="Left"
                                        TickFrequency="{TemplateBinding Slider.TickFrequency}"
                                        TickMode="{TemplateBinding my:SliderAssist.TickMode}"
                                        Ticks="{TemplateBinding Ticks}" />
                            <my:TickBar Name="RightTickBar"
                                        Grid.Column="2"
                                        Width="{TemplateBinding my:SliderAssist.TickLength}"
                                        HorizontalAlignment="Left"
                                        Fill="{TemplateBinding BorderBrush}"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        Foreground="{TemplateBinding Foreground}"
                                        IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                        IsVisible="False"
                                        Maximum="{TemplateBinding Slider.Maximum}"
                                        Minimum="{TemplateBinding Slider.Minimum}"
                                        Orientation="{TemplateBinding Slider.Orientation}"
                                        Placement="Right"
                                        TickFrequency="{TemplateBinding Slider.TickFrequency}"
                                        TickMode="{TemplateBinding my:SliderAssist.TickMode}"
                                        Ticks="{TemplateBinding Ticks}" />
                            <Border Grid.Column="1"
                                    Width="{TemplateBinding my:SliderAssist.BarSize}"
                                    HorizontalAlignment="Center"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding CornerRadius}" />
                            <Track Name="PART_Track"
                                   Grid.Column="1"
                                   IsDirectionReversed="{TemplateBinding IsDirectionReversed}"
                                   Maximum="{TemplateBinding Maximum}"
                                   Minimum="{TemplateBinding Minimum}"
                                   Orientation="Vertical"
                                   Value="{TemplateBinding Value, Mode=TwoWay}">
                                <Track.DecreaseButton>
                                    <RepeatButton Name="PART_DecreaseButton"
                                                  Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                                                  CornerRadius="{TemplateBinding CornerRadius, Converter={x:Static my:CornerRadiusConverter.Bottom}}"
                                                  Focusable="False"
                                                  Theme="{StaticResource MyNet.Theme.Button.Embedded.Slider.Vertical}" />
                                </Track.DecreaseButton>
                                <Track.IncreaseButton>
                                    <RepeatButton Name="PART_IncreaseButton"
                                                  Background="Transparent"
                                                  CornerRadius="{TemplateBinding CornerRadius, Converter={x:Static my:CornerRadiusConverter.Top}}"
                                                  Focusable="False"
                                                  Theme="{StaticResource MyNet.Theme.Button.Embedded.Slider.Vertical}" />
                                </Track.IncreaseButton>
                                <Thumb Name="thumb"
                                       my:SliderAssist.ShowValueOnMouseOver="{TemplateBinding my:SliderAssist.ShowValueOnMouseOver}"
                                       DataContext="{TemplateBinding Value}"
                                       Theme="{TemplateBinding my:SliderAssist.ThumbTheme}" />
                            </Track>
                        </Grid>
                    </DataValidationErrors>
                </ControlTemplate>
            </Setter>

            <Style Selector="^[IsDirectionReversed=True] /template/ RepeatButton#PART_DecreaseButton">
                <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={x:Static my:CornerRadiusConverter.Top}}" />
            </Style>
            <Style Selector="^[IsDirectionReversed=True] /template/ RepeatButton#PART_IncreaseButton">
                <Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={x:Static my:CornerRadiusConverter.Bottom}}" />
            </Style>
        </Style>

        <!-- TickBar Placement States -->
        <Style Selector="^[TickPlacement=TopLeft] /template/ my|TickBar#LeftTickBar, ^[TickPlacement=Outside] /template/ my|TickBar#LeftTickBar">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="^[TickPlacement=TopLeft] /template/ my|TickBar#TopTickBar, ^[TickPlacement=Outside] /template/ my|TickBar#TopTickBar">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="^[TickPlacement=BottomRight] /template/ my|TickBar#BottomTickBar, ^[TickPlacement=Outside] /template/ my|TickBar#BottomTickBar">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <Style Selector="^[TickPlacement=BottomRight] /template/ my|TickBar#RightTickBar, ^[TickPlacement=Outside] /template/ my|TickBar#RightTickBar">
            <Setter Property="IsVisible" Value="True" />
        </Style>

        <!-- Colors -->
        <Style Selector="^.Inverse">
            <Setter Property="Background" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Filled}}" />
            <Setter Property="BorderBrush" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Active}}" />
        </Style>

        <!-- Error -->
        <Style Selector="^:error /template/ Thumb#thumb">
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
        </Style>
    </ControlTheme>

</ResourceDictionary>
