<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    xmlns:sys="clr-namespace:System;assembly=netstandard"
                    x:CompileBindings="True">

    <ControlTheme x:Key="{x:Type CalendarDatePicker}" TargetType="CalendarDatePicker">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Control}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Control}" />
        <Setter Property="Cursor" Value="IBeam" />
        <Setter Property="FontSize" Value="{StaticResource MyNet.Font.Size.TextField}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Watermark" Value="{x:Static sys:String.Empty}" />
        <Setter Property="InputMethod.IsInputMethodEnabled" Value="True" />
        <Setter Property="BackgroundSizing" Value="OuterBorderEdge" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.TextField.Medium}" />
        <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.TextField.Medium}" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
        <Setter Property="my:IconAssist.Alignment" Value="Left" />
        <Setter Property="my:IconAssist.Margin" Value="{my:Thickness Default, Right}" />
        <Setter Property="my:IconAssist.Opacity" Value="{StaticResource MyNet.Opacity.Secondary}" />
        <Setter Property="my:TextFieldAssist.InnerFontSize" Value="{Binding $self.FontSize}" />
        <Setter Property="my:TextFieldAssist.InnerPadding" Value="{StaticResource MyNet.Padding.TextField.Inner.Medium}" />
        <Setter Property="my:TextFieldAssist.UnderFontSize" Value="{StaticResource MyNet.Font.Size.SubCaption}" />
        <Setter Property="my:TextFieldAssist.WatermarkFontSize" Value="{Binding $self.FontSize}" />
        <Setter Property="my:TextFieldAssist.FloatingScale" Value="0.75" />
        <Setter Property="my:TextFieldAssist.FloatingOffset" Value="12" />
        <Setter Property="my:ProxyAssist.Enable" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="ClipToBounds" Value="False" />
        <Setter Property="my:ValidationAssist.Theme" Value="{StaticResource {x:Type DataValidationErrors}}" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="my:GlobalizationAssist.UpdateOnCultureChanged" Value="True" />

        <Style Selector="^">
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border}" />
            <Setter Property="Background" Value="{DynamicResource MyNet.Brush.Control.Background}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Active}}" />
            <Setter Property="my:ThemeAssist.ActiveForeground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border.Hover}" />
            <Setter Property="my:TextFieldAssist.UnderForeground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Secondary}}" />
            <Setter Property="my:TextFieldAssist.InnerForeground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Secondary}}" />
            <Setter Property="my:TextFieldAssist.WatermarkForeground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Watermark}}" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="{Binding $self.Foreground}" />
            <Setter Property="my:FlyoutAssist.Background" Value="{DynamicResource MyNet.Brush.Popup.Background}" />
            <Setter Property="my:FlyoutAssist.Foreground" Value="{DynamicResource MyNet.Brush.Popup.Foreground}" />
            <Setter Property="my:FlyoutAssist.PrimaryColor" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="CalendarDatePicker">
                <DataValidationErrors Name="PART_DataValidation" Theme="{TemplateBinding my:ValidationAssist.Theme}">
                    <Panel Name="PART_RootPanel">

                        <Border Name="PART_MainBorder"
                                my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                        <Border Name="PART_HoverBorder"
                                Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border Name="PART_ActiveBorder"
                                Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                            <my:Ripple Name="PART_Ripple" RippleFill="{TemplateBinding my:ThemeAssist.RippleColor}">
                                <Grid Margin="{TemplateBinding Padding}" ColumnDefinitions="Auto,*,Auto,Auto,Auto,Auto">

                                    <!-- Icon -->
                                    <ContentControl x:Name="PART_Icon"
                                                    Grid.Column="0"
                                                    Margin="{TemplateBinding (my:IconAssist.Margin)}"
                                                    VerticalAlignment="Stretch"
                                                    Content="{TemplateBinding (my:IconAssist.Icon)}"
                                                    ContentTemplate="{TemplateBinding (my:IconAssist.IconTemplate)}"
                                                    Focusable="False"
                                                    Opacity="{TemplateBinding (my:IconAssist.Opacity)}">
                                        <ContentControl.IsVisible>
                                            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                                <Binding Converter="{x:Static ObjectConverters.IsNotNull}" Path="(my:IconAssist.Icon)" RelativeSource="{RelativeSource TemplatedParent}" />
                                                <Binding Converter="{x:Static ObjectConverters.IsNotNull}" Path="(my:IconAssist.IconTemplate)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            </MultiBinding>
                                        </ContentControl.IsVisible>
                                    </ContentControl>

                                    <my:TextField Name="PART_TextField"
                                                  Grid.Column="1"
                                                  Padding="{TemplateBinding (my:TextFieldAssist.InnerPadding)}"
                                                  HorizontalContentAlignment="Stretch"
                                                  VerticalContentAlignment="Center"
                                                  ActiveForeground="{TemplateBinding (my:ThemeAssist.ActiveForeground)}"
                                                  FloatingOffset="{TemplateBinding (my:TextFieldAssist.FloatingOffset)}"
                                                  FloatingScale="{TemplateBinding (my:TextFieldAssist.FloatingScale)}"
                                                  InactiveForeground="{TemplateBinding (my:TextFieldAssist.WatermarkForeground)}"
                                                  InnerFontSize="{TemplateBinding (my:TextFieldAssist.InnerFontSize)}"
                                                  InnerForeground="{TemplateBinding (my:TextFieldAssist.InnerForeground)}"
                                                  InnerLeftContent="{TemplateBinding (my:TextFieldAssist.InnerLeftContent)}"
                                                  InnerRightContent="{TemplateBinding (my:TextFieldAssist.InnerRightContent)}"
                                                  Proxy="{TemplateBinding (my:ProxyAssist.Proxy)}"
                                                  UseFloatingWatermark="{TemplateBinding (my:TextFieldAssist.UseFloatingWatermark)}"
                                                  Watermark="{TemplateBinding Watermark}"
                                                  WatermarkFontSize="{TemplateBinding (my:TextFieldAssist.WatermarkFontSize)}">

                                        <!-- Text -->
                                        <TextBox Name="PART_TextBox"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Stretch"
                                                 CaretBrush="{TemplateBinding (my:ThemeAssist.PrimaryColor)}"
                                                 Classes="no-disablable"
                                                 DataValidationErrors.Errors="{TemplateBinding (DataValidationErrors.Errors)}"
                                                 IsEnabled="{TemplateBinding (my:TextFieldAssist.IsEditable)}"
                                                 SelectionBrush="{my:Brush $parent[CalendarDatePicker].(my:ThemeAssist.PrimaryColor),
                                                                           Opacity={StaticResource MyNet.Opacity.Overlay}}"
                                                 SelectionForegroundBrush="{TemplateBinding Foreground}"
                                                 Theme="{StaticResource MyNet.Theme.TextBox.Clean}" />
                                    </my:TextField>

                                    <!-- Clipboard button -->
                                    <Button Name="PART_ClipboardButton"
                                            Grid.Column="2"
                                            Classes="Clipboard Stretch ExtraSmall no-disablable"
                                            CommandParameter="{TemplateBinding Text, Mode=OneWay}"
                                            IsVisible="False"
                                            Theme="{StaticResource MyNet.Theme.Button.Embedded.Tool}" />

                                    <!-- Clear button -->
                                    <Button Name="PART_ClearButton"
                                            Grid.Column="3"
                                            Classes="Stretch ExtraSmall no-disablable"
                                            Command="{Binding Clear, ElementName=PART_TextBox}"
                                            Content="{StaticResource MyNet.Geometry.Close}"
                                            IsVisible="False"
                                            Theme="{StaticResource MyNet.Theme.Button.Embedded.Tool}" />

                                    <!-- Date button -->
                                    <ToggleButton Name="PART_Button"
                                                  Grid.Column="5"
                                                  my:ThemeAssist.TertiaryColor="{TemplateBinding (my:ThemeAssist.PrimaryColor)}"
                                                  Classes="Stretch no-disablable"
                                                  Content="{StaticResource MyNet.Geometry.Calendar}"
                                                  IsChecked="{TemplateBinding IsDropDownOpen, Mode=OneWay}"
                                                  Theme="{StaticResource MyNet.Theme.ToggleButton.Embedded.Tool}" />
                                </Grid>
                            </my:Ripple>
                        </Border>

                        <!-- UnderText -->
                        <Border Name="PART_BorderUnderText">
                            <TextBlock Name="PART_UnderText"
                                       Margin="0 0 0 -15"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Bottom"
                                       FontSize="{TemplateBinding (my:TextFieldAssist.UnderFontSize)}"
                                       FontStyle="{TemplateBinding (my:TextFieldAssist.UnderFontStyle)}"
                                       FontWeight="{TemplateBinding (my:TextFieldAssist.UnderFontWeight)}"
                                       Foreground="{TemplateBinding (my:TextFieldAssist.UnderForeground)}"
                                       IsVisible="{Binding (my:TextFieldAssist.UnderText), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullConverter.IsNotNull}}"
                                       Text="{TemplateBinding (my:TextFieldAssist.UnderText)}" />
                        </Border>

                        <Panel Name="PART_PopupContainer">
                            <Popup Name="PART_Popup"
                                   HorizontalOffset="-2"
                                   InheritsTransform="True"
                                   IsLightDismissEnabled="True"
                                   IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                                   Placement="BottomEdgeAlignedLeft"
                                   PlacementTarget="PART_MainBorder"
                                   WindowManagerAddShadowHint="False">
                                <Border MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding (my:FlyoutAssist.Background)}" Theme="{StaticResource MyNet.Theme.Border.Popup}">
                                    <Border HorizontalAlignment="Stretch" ClipToBounds="True" CornerRadius="{StaticResource MyNet.CornerRadius.Popup}">
                                        <Calendar Name="PART_Calendar"
                                                  my:ThemeAssist.PrimaryColor="{TemplateBinding my:FlyoutAssist.PrimaryColor}"
                                                  Background="Transparent"
                                                  BorderThickness="0"
                                                  DisplayDate="{TemplateBinding DisplayDate}"
                                                  DisplayDateEnd="{TemplateBinding DisplayDateEnd}"
                                                  DisplayDateStart="{TemplateBinding DisplayDateStart}"
                                                  FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                                                  Foreground="{TemplateBinding (my:FlyoutAssist.Foreground)}"
                                                  IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                                                  SelectedDate="{TemplateBinding SelectedDate, Mode=TwoWay}" />
                                    </Border>
                                </Border>
                            </Popup>
                        </Panel>
                    </Panel>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <!-- Layout -->
        <Style Selector="^.IconRight">
            <Style Selector="^ /template/ ContentControl#PART_Icon">
                <Setter Property="Grid.Column" Value="4" />
                <Setter Property="Margin" Value="{my:Thickness Default, Horizontal}" />
            </Style>
        </Style>

        <Style Selector="^.ButtonRight">
            <Style Selector="^ /template/ ContentControl#PART_Icon">
                <Setter Property="Grid.Column" Value="4" />
                <Setter Property="Margin" Value="0" />
            </Style>
        </Style>

        <Style Selector="^[(my|TextFieldAssist.UseFloatingWatermark)=True]">
            <Style Selector="^ /template/ my|TextField#PART_TextField">
                <Setter Property="Margin" Value="{Binding (my:TextFieldAssist.FloatingOffset), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:DoubleToThicknessConverter.Top}}" />
            </Style>
            <Style Selector="^ /template/ ToggleButton#PART_RevealButton">
                <Setter Property="Padding" Value="{my:Thickness Default}" />
            </Style>
            <Style Selector="^ /template/ Button#PART_ClearButton">
                <Setter Property="Padding" Value="{my:Thickness Default}" />
            </Style>
        </Style>

        <!-- With clear button -->
        <Style Selector="^[(my|TextFieldAssist.ShowClearButton)=True]">
            <Style Selector="^[(my|ProxyAssist.IsEmpty)=False] /template/ Button#PART_ClearButton">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>

        <!-- With clipboard button -->
        <Style Selector="^[(my|TextFieldAssist.ShowClipboardButton)=True]">
            <Style Selector="^[(my|ProxyAssist.IsEmpty)=False] /template/ Button#PART_ClipboardButton">
                <Setter Property="IsVisible" Value="True" />
            </Style>
        </Style>

        <!-- Is Read only -->
        <Style Selector="^[(my|TextFieldAssist.IsEditable)=False]">
            <Setter Property="Cursor" Value="Arrow" />
        </Style>

        <!-- Hover -->
        <Style Selector="^:not(:disabled):not(:focus-within):pointerover">
            <Style Selector="^ /template/ Border#PART_HoverBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- Focused -->
        <Style Selector="^:focus-within, ^:flyout-open">
            <Setter Property="BorderThickness" Value="1" />

            <Style Selector="^ /template/ Border#PART_ActiveBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- Error -->
        <Style Selector="^:error">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
            <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
            <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
            <Setter Property="my:ThemeAssist.ActiveForeground" Value="{DynamicResource MyNet.Brush.Validation.Error}" />

            <Style Selector="^ /template/ my|Underline#PART_Underline">
                <Setter Property="ActiveBrush" Value="{DynamicResource MyNet.Brush.Validation.Error}" />
            </Style>

            <Style Selector="^ /template/ Border#PART_BorderUnderText">
                <Setter Property="IsVisible" Value="False" />
            </Style>
        </Style>

        <!-- Colors -->
        <Style Selector="^.Inverse">
            <Setter Property="Background" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Filled}}" />
            <Setter Property="BorderBrush" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Active}}" />
            <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{my:Brush $parent[TemplatedControl].Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:FlyoutAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
        </Style>

        <!-- Styles -->
        <Style Selector="^.Outlined">
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <Style Selector="^.Transparent">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="Transparent" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="Transparent" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="Transparent" />
        </Style>

        <!-- Layouts -->
        <Style Selector="^.Circle">
            <Setter Property="Padding" Value="8 0 0 0" />
            <Setter Property="my:TextFieldAssist.InnerPadding" Value="0 4 8 4" />
        </Style>

        <!-- Sizes -->
        <Style Selector="^.Small">
            <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.TextField.Small}" />
        </Style>

        <Style Selector="^.Large">
            <Setter Property="MinHeight" Value="{StaticResource MyNet.Height.TextField.Large}" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.CalendarDatePicker.Underline" TargetType="CalendarDatePicker" BasedOn="{StaticResource {x:Type CalendarDatePicker}}">
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="Padding" Value="{StaticResource MyNet.Padding.TextField.Underline.Medium}" />
        <Setter Property="my:TextFieldAssist.InnerPadding" Value="{StaticResource MyNet.Padding.TextField.Underline.Inner.Medium}" />
        <Setter Property="my:TextFieldAssist.UseFloatingWatermark" Value="True" />

        <Style Selector="^">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="{DynamicResource MyNet.Brush.Control.Border}" />
            <Setter Property="my:ThemeAssist.HoverBackground" Value="Transparent" />
            <Setter Property="my:ThemeAssist.ActiveBackground" Value="Transparent" />
            <Setter Property="my:ThemeAssist.RippleColor" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0 0 0 1" />
            <Setter Property="CornerRadius" Value="0" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="CalendarDatePicker">
                <DataValidationErrors Name="PART_DataValidation" Theme="{TemplateBinding my:ValidationAssist.Theme}">
                    <Panel Name="PART_RootPanel">

                        <Border Name="PART_MainBorder"
                                my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}" />

                        <Border Name="PART_HoverBorder"
                                Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border ClipToBounds="False">
                            <Grid Margin="{TemplateBinding Padding}" ColumnDefinitions="Auto,*,Auto,Auto,Auto,Auto">

                                <!-- Icon -->
                                <ContentControl x:Name="PART_Icon"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding (my:IconAssist.Margin)}"
                                                VerticalAlignment="Stretch"
                                                Content="{TemplateBinding (my:IconAssist.Icon)}"
                                                ContentTemplate="{TemplateBinding (my:IconAssist.IconTemplate)}"
                                                Focusable="False"
                                                Opacity="{TemplateBinding (my:IconAssist.Opacity)}">
                                    <ContentControl.IsVisible>
                                        <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                            <Binding Converter="{x:Static ObjectConverters.IsNotNull}" Path="(my:IconAssist.Icon)" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Converter="{x:Static ObjectConverters.IsNotNull}" Path="(my:IconAssist.IconTemplate)" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </ContentControl.IsVisible>
                                </ContentControl>

                                <my:TextField Grid.Column="1"
                                              Margin="{TemplateBinding (my:TextFieldAssist.InnerPadding)}"
                                              ActiveForeground="{TemplateBinding (my:ThemeAssist.ActiveForeground)}"
                                              FloatingOffset="{TemplateBinding (my:TextFieldAssist.FloatingOffset)}"
                                              FloatingScale="{TemplateBinding (my:TextFieldAssist.FloatingScale)}"
                                              InactiveForeground="{TemplateBinding (my:TextFieldAssist.WatermarkForeground)}"
                                              InnerFontSize="{TemplateBinding (my:TextFieldAssist.InnerFontSize)}"
                                              InnerForeground="{TemplateBinding (my:TextFieldAssist.InnerForeground)}"
                                              InnerLeftContent="{TemplateBinding (my:TextFieldAssist.InnerLeftContent)}"
                                              InnerRightContent="{TemplateBinding (my:TextFieldAssist.InnerRightContent)}"
                                              Proxy="{TemplateBinding (my:ProxyAssist.Proxy)}"
                                              UseFloatingWatermark="{TemplateBinding (my:TextFieldAssist.UseFloatingWatermark)}"
                                              Watermark="{TemplateBinding Watermark}"
                                              WatermarkFontSize="{TemplateBinding (my:TextFieldAssist.WatermarkFontSize)}">

                                    <!-- Text -->
                                    <TextBox Name="PART_TextBox"
                                             HorizontalAlignment="Stretch"
                                             VerticalAlignment="Stretch"
                                             CaretBrush="{TemplateBinding (my:ThemeAssist.PrimaryColor)}"
                                             Classes="no-disablable"
                                             DataValidationErrors.Errors="{TemplateBinding (DataValidationErrors.Errors)}"
                                             IsEnabled="{TemplateBinding (my:TextFieldAssist.IsEditable)}"
                                             SelectionBrush="{my:Brush $parent[CalendarDatePicker].(my:ThemeAssist.PrimaryColor),
                                                                       Opacity={StaticResource MyNet.Opacity.Overlay}}"
                                             SelectionForegroundBrush="{TemplateBinding Foreground}"
                                             Theme="{StaticResource MyNet.Theme.TextBox.Clean}" />

                                </my:TextField>

                                <!-- Clipboard button -->
                                <Button Name="PART_ClipboardButton"
                                        Grid.Column="2"
                                        Margin="{my:Thickness Small,
                                                              Left}"
                                        Classes="Clipboard no-disablable"
                                        CommandParameter="{TemplateBinding Text, Mode=OneWay}"
                                        IsVisible="False"
                                        Theme="{StaticResource MyNet.Theme.Button.Embedded.Tool}" />

                                <!-- Clear button -->
                                <Button Name="PART_ClearButton"
                                        Grid.Column="3"
                                        Margin="{my:Thickness Small,
                                                              Left}"
                                        Classes="no-disablable"
                                        Command="{Binding Clear, ElementName=PART_TextBox}"
                                        Content="{StaticResource MyNet.Geometry.Close}"
                                        IsVisible="False"
                                        Theme="{StaticResource MyNet.Theme.Button.Embedded.Tool}" />

                                <!-- Date button -->
                                <ToggleButton Name="PART_Button"
                                              Grid.Column="5"
                                              Margin="{my:Thickness Small,
                                                                    Left}"
                                              my:ThemeAssist.TertiaryColor="{TemplateBinding (my:ThemeAssist.PrimaryColor)}"
                                              Classes="no-disablable"
                                              Content="{StaticResource MyNet.Geometry.Calendar}"
                                              IsChecked="{TemplateBinding IsDropDownOpen, Mode=OneWay}"
                                              Theme="{StaticResource MyNet.Theme.ToggleButton.Embedded.Tool}" />
                            </Grid>
                        </Border>

                        <!-- Underline -->
                        <my:Underline x:Name="PART_Underline"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Bottom"
                                      ActiveBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                                      ActiveHeight="1.4"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      CornerRadius="0"
                                      Focusable="False"
                                      InactiveHeight="0"
                                      IsHitTestVisible="False"
                                      Opacity="1" />

                        <!-- UnderText -->
                        <Border Name="PART_BorderUnderText">
                            <TextBlock Name="PART_UnderText"
                                       Margin="0 0 0 -15"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Bottom"
                                       FontSize="{TemplateBinding (my:TextFieldAssist.UnderFontSize)}"
                                       FontStyle="{TemplateBinding (my:TextFieldAssist.UnderFontStyle)}"
                                       FontWeight="{TemplateBinding (my:TextFieldAssist.UnderFontWeight)}"
                                       Foreground="{TemplateBinding (my:TextFieldAssist.UnderForeground)}"
                                       IsVisible="{Binding (my:TextFieldAssist.UnderText), RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullConverter.IsNotNull}}"
                                       Text="{TemplateBinding (my:TextFieldAssist.UnderText)}" />
                        </Border>

                        <Panel Name="PART_PopupContainer">
                            <Popup Name="PART_Popup"
                                   HorizontalOffset="-2"
                                   InheritsTransform="True"
                                   IsLightDismissEnabled="True"
                                   IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
                                   Placement="BottomEdgeAlignedLeft"
                                   PlacementTarget="PART_MainBorder"
                                   WindowManagerAddShadowHint="False">
                                <Border MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}" Theme="{StaticResource MyNet.Theme.Border.Popup}">
                                    <Border HorizontalAlignment="Stretch" ClipToBounds="True" CornerRadius="{StaticResource MyNet.CornerRadius.Popup}">
                                        <Calendar Name="PART_Calendar"
                                                  my:ThemeAssist.PrimaryColor="{TemplateBinding my:ThemeAssist.PrimaryColor}"
                                                  Background="Transparent"
                                                  BorderThickness="0"
                                                  DisplayDate="{TemplateBinding DisplayDate}"
                                                  DisplayDateEnd="{TemplateBinding DisplayDateEnd}"
                                                  DisplayDateStart="{TemplateBinding DisplayDateStart}"
                                                  FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"
                                                  IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                                                  SelectedDate="{TemplateBinding SelectedDate, Mode=TwoWay}" />
                                    </Border>
                                </Border>
                            </Popup>
                        </Panel>
                    </Panel>
                </DataValidationErrors>
            </ControlTemplate>
        </Setter>

        <!-- Layout -->
        <Style Selector="^.IconRight">
            <Style Selector="^ /template/ ContentControl#PART_Icon">
                <Setter Property="Margin" Value="{Binding (my:IconAssist.Margin), RelativeSource={RelativeSource TemplatedParent}}" />
            </Style>
        </Style>

        <!-- Focused -->
        <Style Selector="^:focus-within, ^:flyout-open">
            <Setter Property="BorderThickness" Value="0 0 0 1" />

            <Style Selector="^ /template/ my|Underline#PART_Underline">
                <Setter Property="IsActive" Value="True" />
            </Style>
        </Style>

        <!-- Error -->
        <Style Selector="^:error">
            <Setter Property="BorderThickness" Value="0 0 0 1" />
        </Style>

        <Style Selector="^.Inverse">
            <Setter Property="Background" Value="Transparent" />
        </Style>

    </ControlTheme>

</ResourceDictionary>
