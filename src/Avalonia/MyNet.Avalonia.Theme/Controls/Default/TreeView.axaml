<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:c="clr-namespace:Avalonia.Controls.Converters;assembly=Avalonia.Controls"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <c:MarginMultiplierConverter x:Key="MyNet.Converter.TreeViewItem.LeftMargin" Indent="10" Left="True" />

    <ControlTheme x:Key="MyNet.Theme.ToggleButton.Embedded.TreeViewItem" TargetType="ToggleButton">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <ControlTemplate TargetType="ToggleButton">
                <Border Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Padding="{TemplateBinding Padding}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Background="Transparent">
                    <PathIcon Name="PART_ExpandIconPath" Classes="Glyph DropDown Right" />
                </Border>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:checked /template/ PathIcon#PART_ExpandIconPath">
            <Setter Property="RenderTransform" Value="rotate(90deg)" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type TreeViewItem}" TargetType="TreeViewItem">
        <Setter Property="HorizontalAlignment" Value="{Binding $parent[TreeView].(my:ItemsAssist.HorizontalAlignment)}" />
        <Setter Property="VerticalAlignment" Value="{Binding $parent[TreeView].(my:ItemsAssist.VerticalAlignment)}" />
        <Setter Property="Margin" Value="{Binding $parent[TreeView].(my:ItemsAssist.Margin)}" />
        <Setter Property="Padding" Value="{Binding $parent[TreeView].(my:ItemsAssist.Padding)}" />
        <Setter Property="CornerRadius" Value="{Binding $parent[TreeView].(my:ItemsAssist.CornerRadius)}" />
        <Setter Property="Background" Value="{Binding $parent[TreeView].(my:ItemsAssist.Background)}" />
        <Setter Property="BorderBrush" Value="{Binding $parent[TreeView].(my:ItemsAssist.BorderBrush)}" />
        <Setter Property="BorderThickness" Value="{Binding $parent[TreeView].(my:ItemsAssist.BorderThickness)}" />
        <Setter Property="my:ThemeAssist.HoverBackground" Value="{Binding $parent[TreeView].(my:ItemsAssist.HoverBackground)}" />
        <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="{Binding $parent[TreeView].(my:ItemsAssist.HoverBorderBrush)}" />
        <Setter Property="my:ThemeAssist.HoverForeground" Value="{Binding $parent[TreeView].(my:ItemsAssist.HoverForeground)}" />
        <Setter Property="my:ThemeAssist.ActiveBackground" Value="{Binding $parent[TreeView].(my:ItemsAssist.ActiveBackground)}" />
        <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{Binding $parent[TreeView].(my:ItemsAssist.ActiveBorderBrush)}" />
        <Setter Property="my:ThemeAssist.ActiveForeground" Value="{Binding $parent[TreeView].(my:ItemsAssist.ActiveForeground)}" />
        <Setter Property="my:ThemeAssist.RippleColor" Value="{Binding $parent[TreeView].(my:ItemsAssist.RippleColor)}" />
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="{Binding $parent[TreeView].(my:ItemsAssist.ShadowDepth)}" />
        <Setter Property="my:IconAssist.Alignment" Value="{Binding $parent[TreeView].(my:IconAssist.Alignment)}" />
        <Setter Property="my:IconAssist.Margin" Value="{Binding $parent[TreeView].(my:IconAssist.Margin)}" />
        <Setter Property="my:IconAssist.Opacity" Value="{Binding $parent[TreeView].(my:IconAssist.Opacity)}" />
        <Setter Property="my:ItemsAssist.OverrideContentTemplate" Value="True" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusAdorner">
            <FocusAdornerTemplate>
                <Rectangle Classes="Inner" Theme="{StaticResource MyNet.Theme.Rectangle.Focus}" />
            </FocusAdornerTemplate>
        </Setter>
        <Setter Property="Template">
            <ControlTemplate TargetType="TreeViewItem">
                <StackPanel>
                    <Panel Name="PART_RootPanel">

                        <Border Name="PART_MainBorder"
                                my:ShadowAssist.ShadowDepth="{TemplateBinding my:ShadowAssist.ShadowDepth}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                TemplatedControl.IsTemplateFocusTarget="True" />

                        <Border Name="PART_ActiveBorder"
                                Background="{TemplateBinding my:ThemeAssist.ActiveBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.ActiveBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border Name="PART_HoverBorder"
                                Background="{TemplateBinding my:ThemeAssist.HoverBackground}"
                                BorderBrush="{TemplateBinding my:ThemeAssist.HoverBorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                Theme="{StaticResource MyNet.Theme.Border.State}" />

                        <Border ClipToBounds="True" CornerRadius="{TemplateBinding CornerRadius}">
                            <my:Ripple Name="PART_Ripple" RippleFill="{TemplateBinding my:ThemeAssist.RippleColor}">
                                <Grid Name="PART_Header" Margin="{TemplateBinding Level, Mode=OneWay, Converter={StaticResource MyNet.Converter.TreeViewItem.LeftMargin}}" ColumnDefinitions="Auto, *">
                                    <ToggleButton Name="PART_ExpandCollapseChevron"
                                                  Grid.Column="0"
                                                  Focusable="False" Classes="no-disablable"
                                                  IsChecked="{TemplateBinding IsExpanded, Mode=TwoWay}"
                                                  Theme="{StaticResource MyNet.Theme.ToggleButton.Embedded.TreeViewItem}" />
                                    <ContentPresenter Name="PART_HeaderPresenter"
                                                      Grid.Column="1"
                                                      Margin="{TemplateBinding Padding}"
                                                      Padding="0 4 8 4"
                                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                      Content="{TemplateBinding Header}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      Focusable="False"
                                                      Foreground="{TemplateBinding Foreground}" />
                                </Grid>
                            </my:Ripple>
                        </Border>
                    </Panel>
                    <ItemsPresenter Name="PART_ItemsPresenter" IsVisible="{TemplateBinding IsExpanded}" ItemsPanel="{TemplateBinding ItemsPanel}" />
                </StackPanel>
            </ControlTemplate>
        </Setter>

        <!-- Hover -->
        <Style Selector="^:not(:disabled):pointerover">
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.HoverForeground)}" />

            <Style Selector="^ /template/ Border#PART_HoverBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>
        </Style>

        <!-- Selected -->
        <Style Selector="^:selected">
            <Setter Property="Foreground" Value="{Binding $self.(my:ThemeAssist.ActiveForeground)}" />

            <Style Selector="^ /template/ Border#PART_ActiveBorder">
                <Setter Property="Opacity" Value="1" />
            </Style>

        </Style>

        <Style Selector="^:empty /template/ ToggleButton#PART_ExpandCollapseChevron">
            <Setter Property="Opacity" Value="0" />
            <Setter Property="IsHitTestVisible" Value="False" />
        </Style>

    </ControlTheme>

    <ControlTheme x:Key="{x:Type TreeView}" TargetType="TreeView">
        <Setter Property="HorizontalAlignment" Value="{StaticResource MyNet.HorizontalAlignment.Container}" />
        <Setter Property="VerticalAlignment" Value="{StaticResource MyNet.VerticalAlignment.Container}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
        <Setter Property="my:ItemsAssist.HorizontalContentAlignment" Value="Left" />
        <Setter Property="my:ItemsAssist.VerticalContentAlignment" Value="Center" />
        <Setter Property="my:ItemsAssist.HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.VerticalAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.Margin" Value="0" />
        <Setter Property="my:ItemsAssist.Padding" Value="{StaticResource MyNet.Padding.ListBoxItem.Medium}" />
        <Setter Property="my:ItemsAssist.CornerRadius" Value="{StaticResource MyNet.CornerRadius.Control}" />
        <Setter Property="my:ItemsAssist.ShadowDepth" Value="Depth0" />
        <Setter Property="ItemTemplate" Value="{StaticResource MyNet.DataTemplate.Icon}" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="FocusAdorner">
            <FocusAdornerTemplate>
                <Rectangle Theme="{StaticResource MyNet.Theme.Rectangle.Focus}" />
            </FocusAdornerTemplate>
        </Setter>
        <Setter Property="my:ShadowAssist.ShadowDepth" Value="Depth0" />

        <Style Selector="^">
            <Setter Property="my:ItemsAssist.Background" Value="Transparent" />
            <Setter Property="my:ItemsAssist.BorderBrush" Value="Transparent" />
            <Setter Property="my:ItemsAssist.BorderThickness" Value="0" />
            <Setter Property="my:ThemeAssist.PrimaryColor" Value="{DynamicResource MyNet.Brush.Primary}" />
            <Setter Property="my:ItemsAssist.HoverBackground" Value="{my:Brush $self.Foreground, Opacity={StaticResource MyNet.Opacity.Hover}}" />
            <Setter Property="my:ItemsAssist.HoverBorderBrush" Value="Transparent" />
            <Setter Property="my:ItemsAssist.HoverForeground" Value="{Binding $parent[TemplatedControl].Foreground}" />
            <Setter Property="my:ItemsAssist.ActiveBackground" Value="{Binding $self.(my:ThemeAssist.PrimaryColor)}" />
            <Setter Property="my:ItemsAssist.ActiveForeground" Value="{my:Brush $self.(my:ItemsAssist.ActiveBackground), Contrast=True}" />
            <Setter Property="my:ItemsAssist.RippleColor" Value="{Binding $self.Foreground}" />
        </Style>

        <Setter Property="Template">
            <ControlTemplate TargetType="TreeView">
                <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
                    <ScrollViewer AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                  Background="{TemplateBinding Background}"
                                  HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                  IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}"
                                  IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                  VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
                        <ItemsPresenter Name="PART_ItemsPresenter" Margin="{TemplateBinding Padding}" ItemsPanel="{TemplateBinding ItemsPanel}" />
                    </ScrollViewer>
                </Border>
            </ControlTemplate>
        </Setter>

        <!-- Sizes -->
        <Style Selector="^.Small">
            <Setter Property="my:ItemsAssist.Padding" Value="{StaticResource MyNet.Padding.ListBoxItem.Small}" />
        </Style>

        <Style Selector="^.Medium">
            <Setter Property="my:ItemsAssist.Padding" Value="{StaticResource MyNet.Padding.ListBoxItem.Medium}" />
        </Style>

        <Style Selector="^.Large">
            <Setter Property="my:ItemsAssist.Padding" Value="{StaticResource MyNet.Padding.ListBoxItem.Large}" />
        </Style>
    </ControlTheme>
</ResourceDictionary>
