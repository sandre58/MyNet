<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:my="http://mynet.com/avalonia"
                    x:CompileBindings="True">

    <ControlTheme x:Key="MyNet.Theme.ListBoxItem.ColorPalette" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="ToolTip.Tip" Value="{Binding Converter={x:Static my:StringConverter.Default}, DataType={x:Type Color}}" />
        <Setter Property="AutomationProperties.Name" Value="{Binding Converter={x:Static my:StringConverter.Default}, DataType={x:Type Color}}" />
        <Setter Property="Background" Value="{Binding Converter={x:Static my:BrushConverter.Default}, DataType={x:Type Color}}" />
        <Setter Property="BorderThickness" Value="1.4" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="my:ThemeAssist.HoverBorderBrush" Value="Transparent" />
        <Setter Property="my:ThemeAssist.ActiveBackground" Value="Transparent" />
        <Setter Property="my:ThemeAssist.ActiveBorderBrush" Value="{Binding $parent[TemplatedControl].Foreground}" />
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.ListBox.ColorPalette" TargetType="ListBox" BasedOn="{StaticResource MyNet.Theme.ListBox.Cards}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.IsScrollChainingEnabled" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.VerticalAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.HorizontalAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.VerticalContentAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="my:ItemsAssist.Padding" Value="0" />
        <Setter Property="my:ItemsAssist.Margin" Value="1" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="ItemTemplate">
            <DataTemplate DataType="{x:Type Color}" />
        </Setter>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="{Binding $parent[ColorView].PaletteColumnCount}" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type ColorView}" TargetType="ColorView">
        <Setter Property="Width" Value="316" />
        <Setter Property="Height" Value="340" />
        <Setter Property="Palette">
            <my:DarkColorPalette />
        </Setter>
        <Setter Property="Template">
            <ControlTemplate TargetType="{x:Type ColorView}">
                <Grid RowDefinitions="*,Auto">

                    <TabControl Name="PART_TabControl"
                                Grid.Row="0"
                                Padding="{my:Thickness Medium,
                                                       Top}"
                                Classes="no-disablable Uniform"
                                SelectedIndex="{Binding SelectedIndex, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                        <my:HeaderAssist.IsVisible>
                            <MultiBinding Converter="{x:Static my:ListConverter.ManyTrue}">
                                <Binding Path="IsColorSpectrumVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="IsColorPaletteVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="IsColorComponentsVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </my:HeaderAssist.IsVisible>

                        <!-- Spectrum Tab -->
                        <TabItem Classes="no-disablable" Header="{my:Icon Palette}" IsVisible="{TemplateBinding IsColorSpectrumVisible}">
                            <Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="*">
                                <ColorSlider Name="ColorSpectrumThirdComponentSlider"
                                             Grid.Column="0"
                                             Margin="{my:Thickness Medium,
                                                                   Right}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Stretch"
                                             AutomationProperties.Name="Third Component"
                                             Classes="no-disablable"
                                             ColorComponent="{Binding ThirdComponent, ElementName=ColorSpectrum}"
                                             ColorModel="Hsva"
                                             HsvColor="{Binding HsvColor, ElementName=ColorSpectrum}"
                                             IsAlphaVisible="True"
                                             IsPerceptive="False"
                                             IsVisible="{TemplateBinding IsColorSpectrumSliderVisible}"
                                             Orientation="Vertical" />
                                <ColorSpectrum Name="ColorSpectrum"
                                               Grid.Column="1"
                                               Classes="Shadow no-disablable"
                                               Components="{TemplateBinding ColorSpectrumComponents}"
                                               HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                               MaxHue="{TemplateBinding MaxHue}"
                                               MaxSaturation="{TemplateBinding MaxSaturation}"
                                               MaxValue="{TemplateBinding MaxValue}"
                                               MinHue="{TemplateBinding MinHue}"
                                               MinSaturation="{TemplateBinding MinSaturation}"
                                               MinValue="{TemplateBinding MinValue}"
                                               Shape="{TemplateBinding ColorSpectrumShape}" />
                                <ColorSlider Name="ColorSpectrumAlphaSlider"
                                             Grid.Column="2"
                                             Margin="{my:Thickness Medium,
                                                                   Left}"
                                             HorizontalAlignment="Center"
                                             VerticalAlignment="Stretch"
                                             AutomationProperties.Name="Alpha Component"
                                             Classes="no-disablable"
                                             ColorComponent="Alpha"
                                             ColorModel="Hsva"
                                             HsvColor="{Binding HsvColor, ElementName=ColorSpectrum}"
                                             IsEnabled="{TemplateBinding IsAlphaEnabled}"
                                             Orientation="Vertical">
                                    <ColorSlider.IsVisible>
                                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                                            <Binding Path="IsAlphaVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </ColorSlider.IsVisible>
                                </ColorSlider>
                            </Grid>
                        </TabItem>

                        <!-- Palette Tab -->
                        <TabItem Classes="no-disablable" Header="{my:Icon PaletteSwatchVariant}" IsVisible="{TemplateBinding IsColorPaletteVisible}">
                            <ListBox Classes="no-disablable"
                                     ItemContainerTheme="{StaticResource MyNet.Theme.ListBoxItem.ColorPalette}"
                                     ItemsSource="{TemplateBinding PaletteColors}"
                                     SelectedItem="{Binding Color, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static my:NullFallbackConverter.Default}, Mode=TwoWay}"
                                     Theme="{StaticResource MyNet.Theme.ListBox.ColorPalette}" />
                        </TabItem>

                        <!-- Components Tab -->
                        <TabItem Classes="no-disablable" Header="{my:Icon TuneVariant}" IsVisible="{TemplateBinding IsColorComponentsVisible}">
                            <Grid Name="GridComponents" RowDefinitions="Auto,10,Auto" UseLayoutRounding="False">
                                <Grid.Styles>
                                    <Style Selector="HeaderedContentControl">
                                        <Setter Property="ClipToBounds" Value="False" />
                                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                        <Setter Property="Margin" Value="{my:Thickness Default, Vertical}" />
                                        <Setter Property="my:ClassesAssist.Classes" Value="Labelled Watermark" />
                                    </Style>

                                    <Style Selector="NumericUpDown">
                                        <Setter Property="DockPanel.Dock" Value="Right" />
                                        <Setter Property="Width" Value="90" />
                                        <Setter Property="Margin" Value="{my:Thickness Medium, Left}" />
                                        <Setter Property="AllowSpin" Value="True" />
                                        <Setter Property="my:ClassesAssist.Classes" Value="Outlined" />
                                    </Style>

                                    <Style Selector="ColorSlider">
                                        <Setter Property="my:SliderAssist.ShowValueOnMouseOver" Value="{Binding !$parent[ColorView].IsComponentTextInputVisible}" />
                                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                                        <Setter Property="IsRoundingEnabled" Value="True" />
                                        <Setter Property="IsSnapToTickEnabled" Value="True" />
                                    </Style>
                                </Grid.Styles>

                                <Grid Grid.Row="0" ColumnDefinitions="*,Auto">

                                    <!-- RGB / HSV -->
                                    <ListBox VerticalAlignment="Stretch"
                                             Classes="no-disablable Uniform"
                                             DisplayMemberBinding="{ReflectionBinding Display}"
                                             IsVisible="{TemplateBinding IsColorModelVisible}"
                                             ItemTemplate="{x:Null}"
                                             ItemsSource="{my:EnumSource {x:Type ColorModel}}"
                                             SelectedValue="{Binding ColorModel, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                             SelectedValueBinding="{ReflectionBinding Value}"
                                             Theme="{StaticResource MyNet.Theme.ListBox.Toggle}" />

                                    <!-- Hex Value -->
                                    <TextBox Name="PART_HexTextBox"
                                             Grid.Column="1"
                                             Width="130"
                                             Margin="{my:Thickness Medium,
                                                                   Left}"
                                             HorizontalAlignment="Stretch"
                                             my:TextFieldAssist.ShowClipboardButton="True"
                                             AutomationProperties.Name="Hexadecimal Color"
                                             Classes="no-disablable Outlined"
                                             InnerLeftContent="#"
                                             IsVisible="{TemplateBinding IsHexInputVisible}"
                                             MaxLength="8"
                                             UseFloatingWatermark="True"
                                             Watermark="{my:Resource Hexadecimal}" />
                                </Grid>

                                <Grid Grid.Row="2" RowDefinitions="Auto,Auto,Auto,Auto">
                                    <Grid.IsVisible>
                                        <MultiBinding Converter="{x:Static my:ListConverter.AnyTrue}">
                                            <Binding Path="IsComponentSliderVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                            <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </Grid.IsVisible>

                                    <!-- Color component editing controls -->
                                    <!-- Component 1 RGB:Red HSV:Hue -->
                                    <HeaderedContentControl Name="Component1HeaderedContentControl" Grid.Row="0">
                                        <DockPanel>
                                            <NumericUpDown Name="Component1NumericUpDown"
                                                           Classes="no-disablable"
                                                           IsVisible="{TemplateBinding IsComponentTextInputVisible}"
                                                           Maximum="{Binding Maximum, ElementName=Component1Slider}"
                                                           Minimum="{Binding Minimum, ElementName=Component1Slider}"
                                                           Value="{Binding Value, ElementName=Component1Slider}" />
                                            <ColorSlider Name="Component1Slider"
                                                         Classes="no-disablable"
                                                         ColorComponent="Component1"
                                                         ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                         IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                                        </DockPanel>
                                    </HeaderedContentControl>

                                    <!-- Component 2 RGB:Green HSV:Saturation -->
                                    <HeaderedContentControl Name="Component2HeaderedContentControl" Grid.Row="1">
                                        <DockPanel>
                                            <NumericUpDown Classes="no-disablable"
                                                           Maximum="{Binding Maximum, ElementName=Component2Slider}"
                                                           Minimum="{Binding Minimum, ElementName=Component2Slider}"
                                                           Value="{Binding Value, ElementName=Component2Slider}">
                                                <NumericUpDown.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                                 ConverterParameter="{x:Static ColorModel.Rgba}"
                                                                 Path="ColorModel"
                                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </NumericUpDown.IsVisible>
                                            </NumericUpDown>
                                            <NumericUpDown Classes="no-disablable"
                                                           FormatString="P0"
                                                           Increment="0.01"
                                                           Maximum="{Binding Maximum, ElementName=Component2Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                                           Minimum="{Binding Minimum, ElementName=Component2Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                                           Value="{Binding Value, ElementName=Component2Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}">
                                                <NumericUpDown.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                                 ConverterParameter="{x:Static ColorModel.Hsva}"
                                                                 Path="ColorModel"
                                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </NumericUpDown.IsVisible>
                                            </NumericUpDown>
                                            <ColorSlider Name="Component2Slider"
                                                         Classes="no-disablable"
                                                         ColorComponent="Component2"
                                                         ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                         IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                                        </DockPanel>
                                    </HeaderedContentControl>

                                    <!-- Component 3 RGB:Blue HSV:Value -->
                                    <HeaderedContentControl Name="Component3HeaderedContentControl" Grid.Row="2">
                                        <DockPanel>
                                            <NumericUpDown Classes="no-disablable"
                                                           Maximum="{Binding Maximum, ElementName=Component3Slider}"
                                                           Minimum="{Binding Minimum, ElementName=Component3Slider}"
                                                           Value="{Binding Value, ElementName=Component3Slider}">
                                                <NumericUpDown.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                                 ConverterParameter="{x:Static ColorModel.Rgba}"
                                                                 Path="ColorModel"
                                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </NumericUpDown.IsVisible>
                                            </NumericUpDown>
                                            <NumericUpDown Classes="no-disablable"
                                                           FormatString="P0"
                                                           Increment="0.01"
                                                           Maximum="{Binding Maximum, ElementName=Component3Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                                           Minimum="{Binding Minimum, ElementName=Component3Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                                           Value="{Binding Value, ElementName=Component3Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}">
                                                <NumericUpDown.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                                 ConverterParameter="{x:Static ColorModel.Hsva}"
                                                                 Path="ColorModel"
                                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </NumericUpDown.IsVisible>
                                            </NumericUpDown>
                                            <ColorSlider Name="Component3Slider"
                                                         Classes="no-disablable"
                                                         ColorComponent="Component3"
                                                         ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                         IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                                        </DockPanel>
                                    </HeaderedContentControl>

                                    <!-- Alpha Component -->
                                    <HeaderedContentControl Name="AlphaComponentHeaderedContentControl" Grid.Row="3" IsVisible="{TemplateBinding IsAlphaVisible}">
                                        <DockPanel>
                                            <NumericUpDown Name="AlphaComponentNumericUpDown"
                                                           Classes="no-disablable"
                                                           IsEnabled="{TemplateBinding IsAlphaEnabled}"
                                                           Maximum="{Binding Maximum, ElementName=AlphaComponentSlider}"
                                                           Minimum="{Binding Minimum, ElementName=AlphaComponentSlider}"
                                                           Value="{Binding Value, ElementName=AlphaComponentSlider}">
                                                <NumericUpDown.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                                 ConverterParameter="{x:Static ColorModel.Rgba}"
                                                                 Path="ColorModel"
                                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </NumericUpDown.IsVisible>
                                            </NumericUpDown>
                                            <NumericUpDown Classes="no-disablable"
                                                           FormatString="P0"
                                                           Increment="0.01"
                                                           Maximum="{Binding Maximum, ElementName=AlphaComponentSlider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                                           Minimum="{Binding Minimum, ElementName=AlphaComponentSlider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                                           Value="{Binding Value, ElementName=AlphaComponentSlider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}">
                                                <NumericUpDown.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                                 ConverterParameter="{x:Static ColorModel.Hsva}"
                                                                 Path="ColorModel"
                                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </NumericUpDown.IsVisible>
                                            </NumericUpDown>
                                            <ColorSlider Name="AlphaComponentSlider"
                                                         Classes="no-disablable"
                                                         ColorComponent="Alpha"
                                                         ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                                         IsEnabled="{TemplateBinding IsAlphaEnabled}">
                                                <ColorSlider.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <Binding Path="IsComponentSliderVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </ColorSlider.IsVisible>
                                            </ColorSlider>
                                        </DockPanel>
                                    </HeaderedContentControl>

                                </Grid>

                            </Grid>
                        </TabItem>
                    </TabControl>

                    <!-- Previewer -->
                    <ColorPreviewer Grid.Row="1"
                                    Height="32"
                                    Margin="{my:Thickness Medium,
                                                          Top}"
                                    Classes="no-disablable"
                                    HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                    IsAccentColorsVisible="{TemplateBinding IsAccentColorsVisible}"
                                    IsVisible="{TemplateBinding IsColorPreviewVisible}" />
                </Grid>
            </ControlTemplate>
        </Setter>
        <Style Selector="^[ColorModel=Rgba]">
            <Style Selector="^ /template/ HeaderedContentControl#Component1HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Red}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#Component2HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Green}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#Component3HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Blue}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#AlphaComponentHeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Alpha}" />
            </Style>
        </Style>
        <Style Selector="^[ColorModel=Hsva]">
            <Style Selector="^ /template/ HeaderedContentControl#Component1HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Hue}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#Component2HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Saturation}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#Component3HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Value}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#AlphaComponentHeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Alpha}" />
            </Style>
            <Style Selector="^ /template/ NumericUpDown#Component1NumericUpDown">
                <Setter Property="FormatString" Value="#°" />
            </Style>
        </Style>

        <Style Selector="^[IsComponentSliderVisible=False] /template/ Grid#GridComponents NumericUpDown">
            <Setter Property="Width" Value="NaN" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="DockPanel.Dock" Value="Top" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="MyNet.Theme.ColorView.Simple" TargetType="ColorView">
        <Setter Property="Width" Value="260" />
        <Setter Property="ColorSpectrumComponents" Value="SaturationValue" />
        <Setter Property="IsAccentColorsVisible" Value="False" />
        <Setter Property="ColorModel" Value="Hsva" />
        <Setter Property="IsComponentTextInputVisible" Value="False" />
        <Setter Property="Template">
            <ControlTemplate TargetType="{x:Type ColorView}">
                <Grid Name="GridComponents" RowDefinitions="Auto,10,Auto,Auto,Auto,Auto,Auto">
                    <Grid.Styles>
                        <Style Selector="HeaderedContentControl">
                            <Setter Property="ClipToBounds" Value="False" />
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="Margin" Value="{my:Thickness Default, Vertical}" />
                            <Setter Property="my:ClassesAssist.Classes" Value="Labelled Watermark" />
                        </Style>

                        <Style Selector="NumericUpDown">
                            <Setter Property="DockPanel.Dock" Value="Right" />
                            <Setter Property="Width" Value="90" />
                            <Setter Property="Margin" Value="{my:Thickness Medium, Left}" />
                            <Setter Property="AllowSpin" Value="True" />
                            <Setter Property="my:ClassesAssist.Classes" Value="Outlined no-disablable" />
                        </Style>

                        <Style Selector="ColorSlider">
                            <Setter Property="my:SliderAssist.ShowValueOnMouseOver" Value="{Binding !$parent[ColorView].IsComponentTextInputVisible}" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="IsRoundingEnabled" Value="True" />
                            <Setter Property="IsSnapToTickEnabled" Value="True" />
                        </Style>
                    </Grid.Styles>

                    <Grid Grid.Row="0" ColumnDefinitions="*,Auto">

                        <!-- Previewer -->
                        <ColorPreviewer VerticalAlignment="Stretch"
                                        Classes="no-disablable"
                                        HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                        IsAccentColorsVisible="{TemplateBinding IsAccentColorsVisible}"
                                        IsVisible="{TemplateBinding IsColorPreviewVisible}" />

                        <!-- Hexa Value -->
                        <TextBox Name="PART_HexTextBox"
                                 Grid.Column="1"
                                 Width="100"
                                 Margin="{my:Thickness Medium,
                                                       Left}"
                                 HorizontalAlignment="Stretch"
                                 my:TextFieldAssist.ShowClipboardButton="True"
                                 AutomationProperties.Name="Hexadecimal Color"
                                 Classes="no-disablable Outlined"
                                 InnerLeftContent="#"
                                 IsVisible="{TemplateBinding IsHexInputVisible}"
                                 MaxLength="8"
                                 UseFloatingWatermark="True"
                                 Watermark="{my:Resource Hexadecimal}" />
                    </Grid>

                    <ColorSpectrum Name="ColorSpectrum"
                                   Grid.Row="2"
                                   Width="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                                   Height="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Stretch"
                                   Classes="Shadow no-disablable"
                                   Components="{TemplateBinding ColorSpectrumComponents}"
                                   HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                   MaxHue="{TemplateBinding MaxHue}"
                                   MaxSaturation="{TemplateBinding MaxSaturation}"
                                   MaxValue="{TemplateBinding MaxValue}"
                                   MinHue="{TemplateBinding MinHue}"
                                   MinSaturation="{TemplateBinding MinSaturation}"
                                   MinValue="{TemplateBinding MinValue}"
                                   Shape="{TemplateBinding ColorSpectrumShape}" />

                    <!-- Color component editing controls -->
                    <!-- Component 1 RGB:Red HSV:Hue -->
                    <HeaderedContentControl Name="Component1HeaderedContentControl" Grid.Row="3">
                        <Grid.IsVisible>
                            <MultiBinding Converter="{x:Static my:ListConverter.AnyTrue}">
                                <Binding Path="IsComponentSliderVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </Grid.IsVisible>
                        <DockPanel>
                            <NumericUpDown Name="Component1NumericUpDown"
                                           Classes="no-disablable"
                                           IsVisible="{TemplateBinding IsComponentTextInputVisible}"
                                           Maximum="{Binding Maximum, ElementName=Component1Slider}"
                                           Minimum="{Binding Minimum, ElementName=Component1Slider}"
                                           Value="{Binding Value, ElementName=Component1Slider}" />
                            <ColorSlider Name="Component1Slider"
                                         Classes="no-disablable"
                                         ColorComponent="Component1"
                                         ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                         IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                        </DockPanel>
                    </HeaderedContentControl>

                    <!-- Component 2 RGB:Green HSV:Saturation -->
                    <HeaderedContentControl Name="Component2HeaderedContentControl" Grid.Row="4">
                        <Grid.IsVisible>
                            <MultiBinding Converter="{x:Static my:ListConverter.AnyTrue}">
                                <Binding Path="IsComponentSliderVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </Grid.IsVisible>
                        <DockPanel>
                            <NumericUpDown Classes="no-disablable"
                                           Maximum="{Binding Maximum, ElementName=Component2Slider}"
                                           Minimum="{Binding Minimum, ElementName=Component2Slider}"
                                           Value="{Binding Value, ElementName=Component2Slider}">
                                <NumericUpDown.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                 ConverterParameter="{x:Static ColorModel.Rgba}"
                                                 Path="ColorModel"
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </NumericUpDown.IsVisible>
                            </NumericUpDown>
                            <NumericUpDown Classes="no-disablable"
                                           FormatString="P0"
                                           Increment="0.01"
                                           Maximum="{Binding Maximum, ElementName=Component2Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                           Minimum="{Binding Minimum, ElementName=Component2Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                           Value="{Binding Value, ElementName=Component2Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}">
                                <NumericUpDown.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                 ConverterParameter="{x:Static ColorModel.Hsva}"
                                                 Path="ColorModel"
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </NumericUpDown.IsVisible>
                            </NumericUpDown>
                            <ColorSlider Name="Component2Slider"
                                         Classes="no-disablable"
                                         ColorComponent="Component2"
                                         ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                         IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                        </DockPanel>
                    </HeaderedContentControl>

                    <!-- Component 3 RGB:Blue HSV:Value -->
                    <HeaderedContentControl Name="Component3HeaderedContentControl" Grid.Row="5">
                        <Grid.IsVisible>
                            <MultiBinding Converter="{x:Static my:ListConverter.AnyTrue}">
                                <Binding Path="IsComponentSliderVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                            </MultiBinding>
                        </Grid.IsVisible>
                        <DockPanel>
                            <NumericUpDown Classes="no-disablable"
                                           Maximum="{Binding Maximum, ElementName=Component3Slider}"
                                           Minimum="{Binding Minimum, ElementName=Component3Slider}"
                                           Value="{Binding Value, ElementName=Component3Slider}">
                                <NumericUpDown.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                 ConverterParameter="{x:Static ColorModel.Rgba}"
                                                 Path="ColorModel"
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </NumericUpDown.IsVisible>
                            </NumericUpDown>
                            <NumericUpDown Classes="no-disablable"
                                           FormatString="P0"
                                           Increment="0.01"
                                           Maximum="{Binding Maximum, ElementName=Component3Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                           Minimum="{Binding Minimum, ElementName=Component3Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                           Value="{Binding Value, ElementName=Component3Slider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}">
                                <NumericUpDown.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                 ConverterParameter="{x:Static ColorModel.Hsva}"
                                                 Path="ColorModel"
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </NumericUpDown.IsVisible>
                            </NumericUpDown>
                            <ColorSlider Name="Component3Slider"
                                         Classes="no-disablable"
                                         ColorComponent="Component3"
                                         ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                         IsVisible="{TemplateBinding IsComponentSliderVisible}" />
                        </DockPanel>
                    </HeaderedContentControl>

                    <!-- Alpha Component -->
                    <HeaderedContentControl Name="AlphaComponentHeaderedContentControl" Grid.Row="6">
                        <Grid.IsVisible>
                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                <Binding Path="IsAlphaVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                <MultiBinding Converter="{x:Static my:ListConverter.AnyTrue}">
                                    <Binding Path="IsComponentSliderVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                </MultiBinding>
                            </MultiBinding>
                        </Grid.IsVisible>
                        <DockPanel>
                            <NumericUpDown Name="AlphaComponentNumericUpDown"
                                           Classes="no-disablable"
                                           IsEnabled="{TemplateBinding IsAlphaEnabled}"
                                           Maximum="{Binding Maximum, ElementName=AlphaComponentSlider}"
                                           Minimum="{Binding Minimum, ElementName=AlphaComponentSlider}"
                                           Value="{Binding Value, ElementName=AlphaComponentSlider}">
                                <NumericUpDown.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                 ConverterParameter="{x:Static ColorModel.Rgba}"
                                                 Path="ColorModel"
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </NumericUpDown.IsVisible>
                            </NumericUpDown>
                            <NumericUpDown Classes="no-disablable"
                                           FormatString="P0"
                                           Increment="0.01"
                                           Maximum="{Binding Maximum, ElementName=AlphaComponentSlider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                           Minimum="{Binding Minimum, ElementName=AlphaComponentSlider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}"
                                           Value="{Binding Value, ElementName=AlphaComponentSlider, Converter={x:Static my:MathConverter.Divide}, ConverterParameter=100}">
                                <NumericUpDown.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Converter="{x:Static my:EnumConverter.Any}"
                                                 ConverterParameter="{x:Static ColorModel.Hsva}"
                                                 Path="ColorModel"
                                                 RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="IsComponentTextInputVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </NumericUpDown.IsVisible>
                            </NumericUpDown>
                            <ColorSlider Name="AlphaComponentSlider"
                                         Classes="no-disablable"
                                         ColorComponent="Alpha"
                                         ColorModel="{TemplateBinding ColorModel, Mode=OneWay}"
                                         HsvColor="{Binding HsvColor, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                         IsEnabled="{TemplateBinding IsAlphaEnabled}">
                                <ColorSlider.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="IsComponentSliderVisible" RelativeSource="{RelativeSource TemplatedParent}" />
                                    </MultiBinding>
                                </ColorSlider.IsVisible>
                            </ColorSlider>
                        </DockPanel>
                    </HeaderedContentControl>
                </Grid>
            </ControlTemplate>
        </Setter>
        <Style Selector="^[ColorModel=Rgba]">
            <Style Selector="^ /template/ HeaderedContentControl#Component1HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Red}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#Component2HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Green}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#Component3HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Blue}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#AlphaComponentHeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Alpha}" />
            </Style>
        </Style>
        <Style Selector="^[ColorModel=Hsva]">
            <Style Selector="^ /template/ HeaderedContentControl#Component1HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Hue}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#Component2HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Saturation}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#Component3HeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Value}" />
            </Style>
            <Style Selector="^ /template/ HeaderedContentControl#AlphaComponentHeaderedContentControl">
                <Setter Property="Header" Value="{my:Resource Alpha}" />
            </Style>
            <Style Selector="^ /template/ NumericUpDown#Component1NumericUpDown">
                <Setter Property="FormatString" Value="#°" />
            </Style>
        </Style>

        <Style Selector="^[IsComponentSliderVisible=False] /template/ Grid#GridComponents NumericUpDown">
            <Setter Property="Width" Value="NaN" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="DockPanel.Dock" Value="Top" />
        </Style>
    </ControlTheme>

</ResourceDictionary>
